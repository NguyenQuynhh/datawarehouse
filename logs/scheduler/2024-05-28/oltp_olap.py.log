[2024-05-28T04:55:53.858+0000] {processor.py:161} INFO - Started process (PID=347) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:55:53.860+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:55:53.862+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:55:53.862+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:55:53.961+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:55:53.973+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:55:53.980+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:55:54.005+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:55:55.027+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:55:55.026+0000] {override.py:1829} INFO - Created Permission View: can delete on DAG:oltp_to_olap_all_transform
[2024-05-28T04:55:55.052+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:55:55.052+0000] {override.py:1829} INFO - Created Permission View: can edit on DAG:oltp_to_olap_all_transform
[2024-05-28T04:55:55.071+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:55:55.071+0000] {override.py:1829} INFO - Created Permission View: can read on DAG:oltp_to_olap_all_transform
[2024-05-28T04:55:55.074+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:55:55.073+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:55:55.105+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:55:55.104+0000] {dag.py:3118} INFO - Creating ORM DAG for oltp_to_olap_all_transform
[2024-05-28T04:55:55.108+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:55:55.107+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:55:55.164+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.321 seconds
[2024-05-28T04:56:16.785+0000] {processor.py:161} INFO - Started process (PID=355) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:56:16.789+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:56:16.796+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:56:16.794+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:56:16.966+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:56:16.976+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:56:16.985+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:56:17.012+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:56:17.038+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:56:17.037+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:56:17.084+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:56:17.084+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:56:17.135+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.377 seconds
[2024-05-28T04:56:47.730+0000] {processor.py:161} INFO - Started process (PID=363) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:56:47.731+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:56:47.733+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:56:47.732+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:56:47.803+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:56:47.817+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:56:47.831+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:56:47.868+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:56:47.993+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:56:47.992+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:56:48.457+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:56:48.456+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:56:48.553+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.836 seconds
[2024-05-28T04:57:19.151+0000] {processor.py:161} INFO - Started process (PID=371) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:57:19.154+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:57:19.159+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:57:19.156+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:57:19.216+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:57:19.227+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:57:19.235+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:57:19.258+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:57:19.348+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:57:19.347+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:57:19.384+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:57:19.384+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:57:19.430+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.299 seconds
[2024-05-28T04:57:49.709+0000] {processor.py:161} INFO - Started process (PID=380) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:57:49.712+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:57:49.716+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:57:49.715+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:57:49.758+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:57:49.766+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:57:49.775+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:57:49.807+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:57:49.906+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:57:49.904+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:57:49.959+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:57:49.958+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:57:50.006+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.315 seconds
[2024-05-28T04:58:20.326+0000] {processor.py:161} INFO - Started process (PID=388) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:58:20.331+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:58:20.336+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:58:20.334+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:58:20.452+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:58:20.468+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:58:20.485+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:58:20.532+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:58:20.724+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:58:20.722+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:58:20.764+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:58:20.763+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:58:20.807+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.512 seconds
[2024-05-28T04:58:51.109+0000] {processor.py:161} INFO - Started process (PID=396) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:58:51.113+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:58:51.118+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:58:51.117+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:58:51.211+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:58:51.230+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:58:51.247+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:58:51.285+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:58:51.390+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:58:51.388+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:58:51.473+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:58:51.472+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:58:51.563+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.478 seconds
[2024-05-28T04:59:22.271+0000] {processor.py:161} INFO - Started process (PID=404) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:59:22.273+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:59:22.275+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:59:22.274+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:59:22.305+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:59:22.311+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:59:22.317+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:59:22.329+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:59:22.366+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:59:22.366+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:59:22.398+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:59:22.398+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:59:22.515+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.252 seconds
[2024-05-28T04:59:52.799+0000] {processor.py:161} INFO - Started process (PID=413) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:59:52.803+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T04:59:52.807+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:59:52.806+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:59:52.867+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T04:59:52.878+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T04:59:52.890+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T04:59:52.913+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T04:59:52.979+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:59:52.979+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T04:59:59.746+0000] {logging_mixin.py:188} INFO - [2024-05-28T04:59:59.745+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T04:59:59.795+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 7.017 seconds
[2024-05-28T05:00:30.562+0000] {processor.py:161} INFO - Started process (PID=421) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:00:30.565+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:00:30.568+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:00:30.567+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:00:30.635+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:00:30.646+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:00:30.659+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:00:30.702+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:00:30.887+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:00:30.886+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:00:30.970+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:00:30.969+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:00:31.055+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.511 seconds
[2024-05-28T05:01:02.033+0000] {processor.py:161} INFO - Started process (PID=430) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:01:02.036+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:01:02.039+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:01:02.038+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:01:02.090+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:01:02.098+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:01:02.110+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:01:02.129+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:01:02.188+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:01:02.187+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:01:02.214+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:01:02.213+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:01:02.263+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.250 seconds
[2024-05-28T05:01:32.623+0000] {processor.py:161} INFO - Started process (PID=438) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:01:32.627+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:01:32.631+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:01:32.630+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:01:32.703+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:01:32.715+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:01:32.728+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:01:32.760+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:01:32.860+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:01:32.860+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:01:32.895+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:01:32.894+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:01:32.939+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.337 seconds
[2024-05-28T05:02:03.618+0000] {processor.py:161} INFO - Started process (PID=446) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:02:03.623+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:02:03.630+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:02:03.627+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:02:03.706+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:02:03.714+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:02:03.724+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:02:03.743+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:02:03.802+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:02:03.801+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:02:03.833+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:02:03.833+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:02:03.881+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.302 seconds
[2024-05-28T05:02:34.296+0000] {processor.py:161} INFO - Started process (PID=454) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:02:34.302+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:02:34.309+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:02:34.306+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:02:34.387+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:02:34.397+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:02:34.409+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:02:34.437+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:02:34.522+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:02:34.521+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:02:34.565+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:02:34.564+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:02:36.278+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.016 seconds
[2024-05-28T05:03:06.867+0000] {processor.py:161} INFO - Started process (PID=462) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:03:06.873+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:03:06.879+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:03:06.877+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:03:06.959+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:03:06.970+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:03:06.980+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:03:07.017+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:03:07.165+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:03:07.164+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:03:07.683+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:03:07.683+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:03:07.755+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.906 seconds
[2024-05-28T05:03:39.028+0000] {processor.py:161} INFO - Started process (PID=476) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:03:39.034+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:03:39.044+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:03:39.036+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:03:39.160+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:03:39.175+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:03:39.197+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:03:39.229+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:03:39.362+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:03:39.362+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:03:39.406+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:03:39.405+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:03:39.447+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.441 seconds
[2024-05-28T05:04:10.093+0000] {processor.py:161} INFO - Started process (PID=484) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:04:10.095+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:04:10.096+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:04:10.096+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:04:10.130+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:04:10.137+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:04:10.144+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:04:10.158+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:04:10.209+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:04:10.209+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:04:10.232+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:04:10.232+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:04:10.266+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.183 seconds
[2024-05-28T05:04:40.906+0000] {processor.py:161} INFO - Started process (PID=492) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:04:40.910+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:04:40.918+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:04:40.916+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:04:41.018+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:04:41.039+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:04:41.057+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:04:41.096+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:04:41.200+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:04:41.199+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:04:41.258+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:04:41.257+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:04:41.353+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.470 seconds
[2024-05-28T05:05:12.070+0000] {processor.py:161} INFO - Started process (PID=500) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:05:12.073+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:05:12.078+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:05:12.076+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:05:12.122+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:05:12.131+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:05:12.140+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:05:12.156+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:05:12.212+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:05:12.211+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:05:12.243+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:05:12.243+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:05:12.284+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.229 seconds
[2024-05-28T05:05:42.980+0000] {processor.py:161} INFO - Started process (PID=509) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:05:42.986+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:05:42.992+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:05:42.990+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:05:43.093+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:05:43.113+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:05:43.131+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:05:43.166+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:05:43.280+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:05:43.279+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:05:43.367+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:05:43.367+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:05:44.129+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.186 seconds
[2024-05-28T05:06:14.337+0000] {processor.py:161} INFO - Started process (PID=517) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:06:14.342+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:06:14.349+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:06:14.346+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:06:14.447+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:06:14.461+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:06:14.475+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:06:14.509+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:06:14.632+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:06:14.631+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:06:15.091+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:06:15.091+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:06:15.156+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.858 seconds
[2024-05-28T05:06:45.862+0000] {processor.py:161} INFO - Started process (PID=525) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:06:45.870+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:06:45.878+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:06:45.876+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:06:45.977+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:06:45.995+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:06:46.017+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:06:46.052+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:06:46.190+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:06:46.189+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:06:46.219+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:06:46.218+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:06:46.272+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.459 seconds
[2024-05-28T05:07:16.422+0000] {processor.py:161} INFO - Started process (PID=533) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:07:16.424+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:07:16.426+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:07:16.425+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:07:16.458+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:07:16.465+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:07:16.471+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:07:16.492+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:07:16.589+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:07:16.589+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:07:16.631+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:07:16.630+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:07:16.671+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.256 seconds
[2024-05-28T05:07:47.335+0000] {processor.py:161} INFO - Started process (PID=541) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:07:47.337+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:07:47.340+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:07:47.339+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:07:47.381+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:07:47.388+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:07:47.394+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:07:47.414+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:07:47.479+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:07:47.477+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:07:47.521+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:07:47.520+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:07:47.554+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.233 seconds
[2024-05-28T05:08:17.831+0000] {processor.py:161} INFO - Started process (PID=549) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:08:17.833+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:08:17.836+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:08:17.835+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:08:17.886+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:08:17.899+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:08:17.910+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:08:17.930+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:08:17.987+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:08:17.986+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:08:18.018+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:08:18.018+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:08:18.064+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.248 seconds
[2024-05-28T05:08:48.486+0000] {processor.py:161} INFO - Started process (PID=558) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:08:48.489+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:08:48.493+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:08:48.492+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:08:48.533+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:08:48.540+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:08:48.552+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:08:48.576+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:08:48.628+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:08:48.627+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:08:48.676+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:08:48.676+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:08:51.358+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.887 seconds
[2024-05-28T05:09:22.159+0000] {processor.py:161} INFO - Started process (PID=566) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:09:22.162+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:09:22.172+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:09:22.171+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:09:22.233+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:09:22.250+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:09:22.256+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:09:22.280+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:09:22.346+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:09:22.345+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:09:22.824+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:09:22.823+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:09:22.870+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.735 seconds
[2024-05-28T05:09:53.597+0000] {processor.py:161} INFO - Started process (PID=574) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:09:53.603+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:09:53.608+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:09:53.606+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:09:53.709+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:09:53.725+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:09:53.741+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:09:53.786+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:09:53.884+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:09:53.884+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:09:53.919+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:09:53.919+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:09:53.959+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.396 seconds
[2024-05-28T05:10:24.599+0000] {processor.py:161} INFO - Started process (PID=582) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:10:24.604+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:10:24.607+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:10:24.606+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:10:24.705+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:10:24.725+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:10:24.744+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:10:24.809+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:10:25.009+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:10:25.008+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:10:25.213+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:10:25.212+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:10:25.328+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.779 seconds
[2024-05-28T05:10:55.771+0000] {processor.py:161} INFO - Started process (PID=590) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:10:55.775+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:10:55.779+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:10:55.778+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:10:55.837+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:10:55.845+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:10:55.851+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:10:55.869+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:10:55.915+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:10:55.915+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:10:55.948+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:10:55.947+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:10:55.990+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.239 seconds
[2024-05-28T05:11:26.628+0000] {processor.py:161} INFO - Started process (PID=598) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:11:26.630+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:11:26.633+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:11:26.632+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:11:26.670+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:11:26.676+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:11:26.682+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:11:26.695+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:11:26.732+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:11:26.732+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:11:26.753+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:11:26.753+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:11:26.800+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.183 seconds
[2024-05-28T05:11:57.484+0000] {processor.py:161} INFO - Started process (PID=606) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:11:57.486+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:11:57.488+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:11:57.488+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:11:57.528+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:11:57.535+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:11:57.545+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:11:57.565+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:11:57.618+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:11:57.618+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:12:02.460+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:12:02.459+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:12:02.511+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 5.037 seconds
[2024-05-28T05:12:33.442+0000] {processor.py:161} INFO - Started process (PID=614) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:12:33.448+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:12:33.452+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:12:33.451+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:12:33.550+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:12:33.572+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:12:33.586+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:12:33.610+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:12:33.671+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:12:33.670+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:12:33.700+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:12:33.700+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:12:33.804+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.402 seconds
[2024-05-28T05:13:04.430+0000] {processor.py:161} INFO - Started process (PID=622) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:13:04.432+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:13:04.434+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:13:04.433+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:13:04.486+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:13:04.494+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:13:04.502+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:13:04.528+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:13:04.596+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:13:04.595+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:13:04.620+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:13:04.619+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:13:04.656+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.237 seconds
[2024-05-28T05:13:35.316+0000] {processor.py:161} INFO - Started process (PID=630) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:13:35.319+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:13:35.322+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:13:35.320+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:13:35.385+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:13:35.393+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:13:35.401+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:13:35.420+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:13:35.473+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:13:35.473+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:13:35.505+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:13:35.504+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:13:35.547+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.248 seconds
[2024-05-28T05:14:06.239+0000] {processor.py:161} INFO - Started process (PID=638) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:14:06.246+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:14:06.251+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:14:06.248+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:14:06.290+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:14:06.304+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:14:06.312+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:14:06.332+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:14:06.376+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:14:06.375+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:14:06.396+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:14:06.396+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:14:06.436+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.219 seconds
[2024-05-28T05:14:37.090+0000] {processor.py:161} INFO - Started process (PID=646) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:14:37.096+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:14:37.099+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:14:37.098+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:14:37.148+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:14:37.158+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:14:37.165+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:14:37.182+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:14:37.242+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:14:37.242+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:14:37.276+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:14:37.275+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:14:38.955+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.882 seconds
[2024-05-28T05:15:09.752+0000] {processor.py:161} INFO - Started process (PID=654) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:15:09.757+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:15:09.763+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:15:09.761+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:15:09.875+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:15:09.898+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:15:09.918+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:15:09.958+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:15:10.076+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:15:10.074+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:15:10.607+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:15:10.606+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:15:10.660+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.937 seconds
[2024-05-28T05:15:41.401+0000] {processor.py:161} INFO - Started process (PID=663) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:15:41.404+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:15:41.407+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:15:41.406+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:15:41.464+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:15:41.473+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:15:41.481+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:15:41.501+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:15:41.556+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:15:41.556+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:15:41.586+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:15:41.586+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:15:41.629+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.245 seconds
[2024-05-28T05:16:12.429+0000] {processor.py:161} INFO - Started process (PID=671) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:16:12.431+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:16:12.434+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:16:12.433+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:16:12.482+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:16:12.490+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:16:12.498+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:16:12.519+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:16:12.567+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:16:12.566+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:16:12.595+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:16:12.594+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:16:12.680+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.267 seconds
[2024-05-28T05:16:43.217+0000] {processor.py:161} INFO - Started process (PID=679) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:16:43.224+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:16:43.234+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:16:43.232+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:16:43.337+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:16:43.359+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:16:43.378+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:16:43.430+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:16:43.542+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:16:43.541+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:16:43.606+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:16:43.606+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:16:43.701+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.529 seconds
[2024-05-28T05:17:13.986+0000] {processor.py:161} INFO - Started process (PID=687) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:17:13.989+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:17:13.991+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:17:13.990+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:17:14.045+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:17:14.054+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:17:14.064+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:17:14.086+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:17:14.147+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:17:14.146+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:17:14.171+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:17:14.171+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:17:14.203+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.232 seconds
[2024-05-28T05:17:44.667+0000] {processor.py:161} INFO - Started process (PID=695) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:17:44.669+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:17:44.672+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:17:44.671+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:17:44.720+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:17:44.729+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:17:44.737+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:17:44.758+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:17:44.811+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:17:44.810+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:17:44.856+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:17:44.855+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:17:45.474+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.827 seconds
[2024-05-28T05:18:16.279+0000] {processor.py:161} INFO - Started process (PID=704) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:18:16.280+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:18:16.282+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:18:16.281+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:18:16.317+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:18:16.323+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:18:16.330+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:18:16.343+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:18:16.376+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:18:16.376+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:18:16.610+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:18:16.610+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:18:16.648+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.379 seconds
[2024-05-28T05:18:46.936+0000] {processor.py:161} INFO - Started process (PID=712) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:18:46.940+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:18:46.946+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:18:46.944+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:18:47.046+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:18:47.068+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:18:47.088+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:18:47.135+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:18:47.206+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:18:47.205+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:18:47.239+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:18:47.238+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:18:47.279+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.371 seconds
[2024-05-28T05:19:17.659+0000] {processor.py:161} INFO - Started process (PID=720) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:19:17.661+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:19:17.664+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:19:17.663+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:19:17.720+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:19:17.737+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:19:17.747+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:19:17.772+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:19:17.917+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:19:17.916+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:19:17.975+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:19:17.974+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:19:18.033+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.388 seconds
[2024-05-28T05:19:48.434+0000] {processor.py:161} INFO - Started process (PID=734) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:19:48.450+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:19:48.462+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:19:48.455+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:19:48.546+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:19:48.553+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:19:48.562+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:19:48.584+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:19:48.633+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:19:48.632+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:19:48.670+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:19:48.669+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:19:48.709+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.309 seconds
[2024-05-28T05:20:19.500+0000] {processor.py:161} INFO - Started process (PID=742) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:20:19.505+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:20:19.509+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:20:19.508+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:20:19.599+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:20:19.617+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:20:19.633+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:20:19.668+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:20:19.766+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:20:19.765+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:20:19.828+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:20:19.827+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:20:19.912+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.435 seconds
[2024-05-28T05:20:50.132+0000] {processor.py:161} INFO - Started process (PID=750) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:20:50.137+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:20:50.141+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:20:50.140+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:20:50.227+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:20:50.240+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:20:50.255+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:20:50.292+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:20:50.395+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:20:50.394+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:20:50.447+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:20:50.447+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:20:50.768+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.662 seconds
[2024-05-28T05:21:20.983+0000] {processor.py:161} INFO - Started process (PID=758) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:21:20.986+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:21:20.990+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:21:20.988+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:21:21.032+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:21:21.041+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:21:21.049+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:21:21.069+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:21:21.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:21:21.439+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:21:21.463+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:21:21.462+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:21:21.505+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.546 seconds
[2024-05-28T05:21:52.431+0000] {processor.py:161} INFO - Started process (PID=766) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:21:52.433+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:21:52.435+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:21:52.435+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:21:52.480+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:21:52.489+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:21:52.498+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:21:52.514+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:21:52.561+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:21:52.560+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:21:52.598+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:21:52.597+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:21:52.648+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.227 seconds
[2024-05-28T05:22:23.239+0000] {processor.py:161} INFO - Started process (PID=774) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:22:23.242+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:22:23.245+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:22:23.244+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:22:23.305+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:22:23.319+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:22:23.331+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:22:23.356+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:22:23.418+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:22:23.417+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:22:23.458+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:22:23.457+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:22:23.516+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.293 seconds
[2024-05-28T05:22:43.821+0000] {processor.py:161} INFO - Started process (PID=775) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:22:43.824+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:22:43.826+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:22:43.825+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:22:43.903+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:22:43.912+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:22:43.919+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:22:43.948+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:22:45.071+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:22:45.070+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:22:45.097+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:22:45.097+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:22:45.159+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.353 seconds
[2024-05-28T05:23:15.792+0000] {processor.py:161} INFO - Started process (PID=783) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:23:15.796+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:23:15.799+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:23:15.798+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:23:15.857+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:23:15.869+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:23:15.879+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:23:15.902+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:23:15.962+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:23:15.961+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:23:15.991+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:23:15.990+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:23:16.077+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.302 seconds
[2024-05-28T05:23:46.659+0000] {processor.py:161} INFO - Started process (PID=791) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:23:46.663+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:23:46.667+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:23:46.666+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:23:46.753+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:23:46.758+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:23:46.764+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:23:46.785+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:23:46.839+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:23:46.838+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:23:46.867+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:23:46.867+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:23:47.446+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.798 seconds
[2024-05-28T05:24:18.239+0000] {processor.py:161} INFO - Started process (PID=800) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:24:18.241+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:24:18.244+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:24:18.243+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:24:18.291+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:24:18.303+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:24:18.312+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:24:18.332+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:24:18.404+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:24:18.404+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:24:19.231+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:24:19.231+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:24:19.338+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.111 seconds
[2024-05-28T05:24:50.049+0000] {processor.py:161} INFO - Started process (PID=808) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:24:50.054+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:24:50.059+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:24:50.057+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:24:50.166+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:24:50.185+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:24:50.205+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:24:50.243+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:24:50.344+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:24:50.343+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:24:50.401+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:24:50.400+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:24:50.486+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.470 seconds
[2024-05-28T05:25:20.640+0000] {processor.py:161} INFO - Started process (PID=816) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:25:20.642+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:25:20.646+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:25:20.644+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:25:20.703+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:25:20.713+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:25:20.722+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:25:20.747+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:25:20.818+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:25:20.817+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:25:20.860+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:25:20.859+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:25:20.915+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.290 seconds
[2024-05-28T05:25:51.218+0000] {processor.py:161} INFO - Started process (PID=824) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:25:51.222+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:25:51.225+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:25:51.224+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:25:51.263+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:25:51.270+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:25:51.279+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:25:51.303+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:25:51.364+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:25:51.364+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:25:51.396+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:25:51.396+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:25:51.446+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.243 seconds
[2024-05-28T05:26:22.392+0000] {processor.py:161} INFO - Started process (PID=838) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:26:22.398+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:26:22.403+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:26:22.401+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:26:22.505+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:26:22.520+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:26:22.537+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:26:22.590+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:26:22.690+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:26:22.689+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:26:22.728+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:26:22.728+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:26:22.779+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.420 seconds
[2024-05-28T05:26:53.334+0000] {processor.py:161} INFO - Started process (PID=846) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:26:53.337+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:26:53.340+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:26:53.339+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:26:53.384+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:26:53.393+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:26:53.399+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:26:53.416+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:26:53.463+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:26:53.462+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:26:57.974+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:26:57.974+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:26:58.027+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 4.708 seconds
[2024-05-28T05:27:28.682+0000] {processor.py:161} INFO - Started process (PID=855) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:27:28.684+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:27:28.687+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:27:28.686+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:27:28.730+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:27:28.738+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:27:28.754+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:27:28.803+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:27:29.316+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:27:29.315+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:27:29.345+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:27:29.345+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:27:29.389+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.720 seconds
[2024-05-28T05:27:59.900+0000] {processor.py:161} INFO - Started process (PID=863) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:27:59.906+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:27:59.913+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:27:59.910+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:28:00.099+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:28:00.106+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:28:00.112+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:28:00.183+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:28:00.292+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:28:00.291+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:28:00.384+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:28:00.384+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:28:00.507+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.645 seconds
[2024-05-28T05:28:31.250+0000] {processor.py:161} INFO - Started process (PID=871) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:28:31.254+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:28:31.257+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:28:31.256+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:28:31.313+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:28:31.323+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:28:31.331+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:28:31.370+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:28:31.494+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:28:31.493+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:28:31.568+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:28:31.568+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:28:31.624+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.402 seconds
[2024-05-28T05:29:02.210+0000] {processor.py:161} INFO - Started process (PID=879) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:02.212+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:29:02.214+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:02.213+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:02.260+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:29:02.273+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:29:02.284+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:29:02.302+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:02.355+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:02.355+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:29:02.382+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:02.382+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:29:02.415+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.218 seconds
[2024-05-28T05:29:32.963+0000] {processor.py:161} INFO - Started process (PID=887) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:32.966+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:29:32.969+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:32.968+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:33.024+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:29:33.036+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:29:33.047+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:29:33.069+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:33.135+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:33.135+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:29:33.171+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:33.170+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:29:33.221+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.273 seconds
[2024-05-28T05:29:52.439+0000] {processor.py:161} INFO - Started process (PID=888) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:52.446+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:29:52.453+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:52.450+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:52.661+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:29:52.690+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:29:52.714+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:29:52.767+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:29:52.828+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:52.827+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:29:52.855+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:29:52.854+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:29:57.999+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 5.606 seconds
[2024-05-28T05:30:11.552+0000] {processor.py:161} INFO - Started process (PID=896) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:11.557+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:30:11.563+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:11.560+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:11.688+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.orders` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:30:11.698+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:30:11.707+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:30:11.736+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:12.839+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:12.837+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:30:12.935+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:12.934+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:30:13.048+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.534 seconds
[2024-05-28T05:30:22.371+0000] {processor.py:161} INFO - Started process (PID=897) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:22.373+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:30:22.376+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:22.375+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:22.438+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:30:22.455+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:22.477+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:22.476+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:30:22.502+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:22.502+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:30:22.973+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.618 seconds
[2024-05-28T05:30:53.342+0000] {processor.py:161} INFO - Started process (PID=905) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:53.345+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:30:53.348+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:53.347+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:53.420+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:30:53.486+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:30:53.584+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:53.583+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:30:53.628+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:30:53.628+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:30:53.681+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.342 seconds
[2024-05-28T05:31:23.927+0000] {processor.py:161} INFO - Started process (PID=913) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:31:23.931+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:31:23.934+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:31:23.933+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:31:23.977+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:31:23.995+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:31:24.049+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:31:24.049+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:31:24.079+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:31:24.078+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:31:24.120+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.209 seconds
[2024-05-28T05:31:54.497+0000] {processor.py:161} INFO - Started process (PID=921) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:31:54.502+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:31:54.506+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:31:54.504+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:31:54.578+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:31:54.622+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:31:54.691+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:31:54.691+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:31:54.724+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:31:54.723+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:31:54.775+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.313 seconds
[2024-05-28T05:32:25.370+0000] {processor.py:161} INFO - Started process (PID=936) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:32:25.372+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:32:25.376+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:32:25.374+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:32:25.453+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:32:25.476+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:32:25.528+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:32:25.528+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:32:25.571+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:32:25.571+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:32:25.622+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.268 seconds
[2024-05-28T05:32:56.037+0000] {processor.py:161} INFO - Started process (PID=944) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:32:56.040+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:32:56.042+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:32:56.041+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:32:56.090+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:32:56.108+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:32:56.200+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:32:56.200+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:33:01.266+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:33:01.266+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:33:01.305+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 5.281 seconds
[2024-05-28T05:33:31.924+0000] {processor.py:161} INFO - Started process (PID=952) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:33:31.927+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:33:31.930+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:33:31.929+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:33:31.980+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:33:32.004+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:33:32.419+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:33:32.419+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:33:32.443+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:33:32.442+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:33:32.481+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.573 seconds
[2024-05-28T05:34:03.263+0000] {processor.py:161} INFO - Started process (PID=960) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:03.267+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:34:03.269+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:03.268+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:03.314+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:34:03.344+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:03.403+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:03.403+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:34:03.432+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:03.431+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:34:03.468+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.221 seconds
[2024-05-28T05:34:20.887+0000] {processor.py:161} INFO - Started process (PID=962) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:20.889+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:34:20.891+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:20.891+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:20.968+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:34:20.976+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:34:20.991+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:21.892+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:21.891+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:34:21.915+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:21.915+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:34:22.043+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.171 seconds
[2024-05-28T05:34:25.366+0000] {processor.py:161} INFO - Started process (PID=963) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:25.369+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:34:25.372+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:25.371+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:25.454+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:34:25.462+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:34:25.481+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:25.518+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:25.517+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:34:25.572+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:25.571+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:34:25.646+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.299 seconds
[2024-05-28T05:34:56.337+0000] {processor.py:161} INFO - Started process (PID=971) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:56.341+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:34:56.347+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:56.346+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:56.455+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:34:56.474+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:34:56.519+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:34:57.638+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:57.637+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:34:57.657+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:34:57.657+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:34:57.693+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.382 seconds
[2024-05-28T05:35:28.016+0000] {processor.py:161} INFO - Started process (PID=985) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:35:28.019+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:35:28.023+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:35:28.022+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:35:28.108+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:35:28.126+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:35:28.158+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:35:28.252+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:35:28.251+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:35:28.304+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:35:28.304+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:35:28.379+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.387 seconds
[2024-05-28T05:35:58.925+0000] {processor.py:161} INFO - Started process (PID=993) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:35:58.927+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:35:58.928+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:35:58.928+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:35:58.964+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:35:58.971+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:35:58.986+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:35:59.024+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:35:59.024+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:35:59.607+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:35:59.607+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:35:59.645+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.732 seconds
[2024-05-28T05:36:30.605+0000] {processor.py:161} INFO - Started process (PID=1001) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:36:30.610+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:36:30.615+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:36:30.613+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:36:30.720+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:36:30.740+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:36:30.793+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:36:31.252+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:36:31.251+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:36:31.286+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:36:31.285+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:36:31.337+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.762 seconds
[2024-05-28T05:37:02.054+0000] {processor.py:161} INFO - Started process (PID=1010) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:37:02.056+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:37:02.058+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:37:02.057+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:37:02.120+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:37:02.128+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:37:02.184+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:37:02.288+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:37:02.288+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:37:02.317+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:37:02.317+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:37:02.351+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.313 seconds
[2024-05-28T05:37:32.957+0000] {processor.py:161} INFO - Started process (PID=1018) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:37:32.960+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:37:32.963+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:37:32.962+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:37:33.019+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:37:33.028+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:37:33.052+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:37:33.111+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:37:33.111+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:37:33.158+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:37:33.157+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:37:33.221+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.280 seconds
[2024-05-28T05:38:03.488+0000] {processor.py:161} INFO - Started process (PID=1027) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:38:03.492+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:38:03.497+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:38:03.494+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:38:03.552+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:38:03.561+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:38:03.590+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:38:03.666+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:38:03.665+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:38:03.718+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:38:03.717+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:38:03.762+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.301 seconds
[2024-05-28T05:38:34.376+0000] {processor.py:161} INFO - Started process (PID=1035) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:38:34.387+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:38:34.397+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:38:34.391+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:38:34.482+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:38:34.488+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:38:34.524+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:38:34.570+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:38:34.570+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:38:34.598+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:38:34.597+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:38:34.643+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.289 seconds
[2024-05-28T05:39:04.968+0000] {processor.py:161} INFO - Started process (PID=1043) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:39:04.971+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:39:04.975+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:39:04.973+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:39:05.039+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:39:05.050+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:39:05.084+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:39:05.170+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:39:05.169+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:39:08.946+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:39:08.945+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:39:08.990+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 4.047 seconds
[2024-05-28T05:39:39.690+0000] {processor.py:161} INFO - Started process (PID=1051) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:39:39.694+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:39:39.700+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:39:39.698+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:39:39.791+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:39:39.812+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:39:39.850+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:39:40.600+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:39:40.600+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:39:40.629+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:39:40.628+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:39:40.673+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.007 seconds
[2024-05-28T05:40:11.359+0000] {processor.py:161} INFO - Started process (PID=1059) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:40:11.362+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:40:11.370+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:40:11.369+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:40:11.419+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:40:11.425+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:40:11.446+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:40:11.499+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:40:11.499+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:40:11.533+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:40:11.533+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:40:11.580+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.237 seconds
[2024-05-28T05:40:42.175+0000] {processor.py:161} INFO - Started process (PID=1067) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:40:42.178+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:40:42.181+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:40:42.180+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:40:42.233+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:40:42.241+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:40:42.259+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:40:42.316+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:40:42.315+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:40:42.348+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:40:42.347+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:40:42.397+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.236 seconds
[2024-05-28T05:41:13.068+0000] {processor.py:161} INFO - Started process (PID=1075) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:41:13.073+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:41:13.079+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:41:13.077+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:41:13.186+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:41:13.208+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:41:13.256+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:41:13.391+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:41:13.390+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:41:13.444+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:41:13.443+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:41:13.495+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.463 seconds
[2024-05-28T05:41:43.841+0000] {processor.py:161} INFO - Started process (PID=1083) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:41:43.844+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:41:43.846+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:41:43.846+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:41:43.892+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:41:43.901+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:41:43.918+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:41:43.970+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:41:43.969+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:41:43.996+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:41:43.995+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:41:44.544+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.720 seconds
[2024-05-28T05:42:15.268+0000] {processor.py:161} INFO - Started process (PID=1092) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:42:15.271+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:42:15.273+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:42:15.272+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:42:15.321+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:42:15.329+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:42:15.348+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:42:15.402+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:42:15.401+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:42:16.563+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:42:16.563+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:42:16.614+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.360 seconds
[2024-05-28T05:42:47.258+0000] {processor.py:161} INFO - Started process (PID=1100) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:42:47.263+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:42:47.271+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:42:47.266+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:42:47.368+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:42:47.395+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:42:47.439+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:42:47.945+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:42:47.945+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:42:47.962+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:42:47.961+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:42:47.992+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.768 seconds
[2024-05-28T05:43:19.018+0000] {processor.py:161} INFO - Started process (PID=1109) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:43:19.020+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:43:19.022+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:43:19.021+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:43:19.072+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:43:19.081+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:43:19.102+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:43:19.152+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:43:19.152+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:43:19.179+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:43:19.179+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:43:19.213+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.205 seconds
[2024-05-28T05:43:49.669+0000] {processor.py:161} INFO - Started process (PID=1118) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:43:49.673+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:43:49.678+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:43:49.676+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:43:49.744+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:43:49.761+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:43:49.811+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:43:49.910+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:43:49.909+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:43:49.938+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:43:49.938+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:43:49.976+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.332 seconds
[2024-05-28T05:44:20.347+0000] {processor.py:161} INFO - Started process (PID=1126) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:44:20.351+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:44:20.353+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:44:20.353+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:44:20.412+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:44:20.428+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:44:20.464+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:44:20.585+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:44:20.581+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:44:20.667+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:44:20.666+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:44:20.721+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.403 seconds
[2024-05-28T05:44:45.157+0000] {processor.py:161} INFO - Started process (PID=1133) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:44:45.163+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:44:45.169+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:44:45.168+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:44:45.287+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:44:45.299+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:44:45.320+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:44:46.286+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:44:46.285+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:44:46.307+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:44:46.307+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:44:46.361+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.232 seconds
[2024-05-28T05:45:17.093+0000] {processor.py:161} INFO - Started process (PID=1141) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:45:17.104+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:45:17.109+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:45:17.107+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:45:17.181+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:45:17.189+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:45:17.212+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:45:17.272+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:45:17.272+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:45:17.590+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:45:17.589+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:45:17.687+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.618 seconds
[2024-05-28T05:45:48.074+0000] {processor.py:161} INFO - Started process (PID=1153) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:45:48.079+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:45:48.087+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:45:48.085+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:45:48.187+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:45:48.203+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:45:48.229+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:45:50.565+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:45:50.551+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:45:50.646+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:45:50.645+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:45:50.727+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.674 seconds
[2024-05-28T05:46:21.805+0000] {processor.py:161} INFO - Started process (PID=1166) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:46:21.824+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:46:21.841+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:46:21.831+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:46:22.025+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:46:22.032+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:46:22.235+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:46:22.445+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:46:22.444+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:46:22.710+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:46:22.708+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:46:22.832+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.247 seconds
[2024-05-28T05:46:53.400+0000] {processor.py:161} INFO - Started process (PID=1175) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:46:53.404+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:46:53.407+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:46:53.406+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:46:53.490+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:46:53.500+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:46:53.525+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:46:53.611+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:46:53.610+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:46:53.661+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:46:53.660+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:46:53.720+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.338 seconds
[2024-05-28T05:47:24.285+0000] {processor.py:161} INFO - Started process (PID=1183) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:47:24.288+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:47:24.291+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:47:24.290+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:47:24.348+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:47:24.360+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:47:24.381+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:47:24.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:47:24.438+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:47:24.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:47:24.479+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:47:24.575+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.307 seconds
[2024-05-28T05:47:54.866+0000] {processor.py:161} INFO - Started process (PID=1192) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:47:54.869+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:47:54.872+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:47:54.871+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:47:54.926+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:47:54.936+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:47:54.960+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:47:55.010+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:47:55.009+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:47:55.034+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:47:55.033+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:48:00.491+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 5.643 seconds
[2024-05-28T05:48:30.723+0000] {processor.py:161} INFO - Started process (PID=1201) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:48:30.726+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:48:30.729+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:48:30.728+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:48:30.790+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:48:30.801+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:48:30.830+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:48:31.483+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:48:31.482+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:48:31.505+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:48:31.505+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:48:31.547+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.839 seconds
[2024-05-28T05:49:02.080+0000] {processor.py:161} INFO - Started process (PID=1209) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:49:02.083+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:49:02.086+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:49:02.085+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:49:02.134+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:49:02.144+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:49:02.165+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:49:02.519+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:49:02.518+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:49:02.560+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:49:02.559+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:49:02.622+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.553 seconds
[2024-05-28T05:49:32.760+0000] {processor.py:161} INFO - Started process (PID=1218) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:49:32.762+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:49:32.764+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:49:32.763+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:49:32.796+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:49:32.801+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:49:32.816+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:49:32.851+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:49:32.850+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:49:32.870+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:49:32.870+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:49:32.929+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.178 seconds
[2024-05-28T05:50:03.351+0000] {processor.py:161} INFO - Started process (PID=1226) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:50:03.354+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:50:03.357+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:50:03.356+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:50:03.423+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:50:03.436+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:50:03.472+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:50:03.540+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:50:03.539+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:50:03.575+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:50:03.574+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:50:03.621+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.287 seconds
[2024-05-28T05:50:34.030+0000] {processor.py:161} INFO - Started process (PID=1234) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:50:34.034+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:50:34.036+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:50:34.035+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:50:34.075+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:50:34.082+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:50:34.099+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:50:34.158+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:50:34.158+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:50:34.194+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:50:34.193+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:50:34.265+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.250 seconds
[2024-05-28T05:51:05.113+0000] {processor.py:161} INFO - Started process (PID=1242) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:51:05.118+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:51:05.124+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:51:05.122+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:51:05.215+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:51:05.236+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:51:05.271+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:51:05.373+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:51:05.372+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:51:07.891+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:51:07.891+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:51:07.946+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.856 seconds
[2024-05-28T05:51:38.653+0000] {processor.py:161} INFO - Started process (PID=1257) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:51:38.655+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:51:38.659+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:51:38.658+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:51:38.726+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:51:38.735+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:51:38.823+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:51:41.277+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:51:41.276+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:51:41.311+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:51:41.311+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:51:41.370+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.731 seconds
[2024-05-28T05:52:12.489+0000] {processor.py:161} INFO - Started process (PID=1265) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:12.493+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:52:12.498+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:12.497+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:12.697+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:52:12.723+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:52:17.043+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:17.331+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:17.329+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:52:17.461+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:17.460+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:52:18.050+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 5.570 seconds
[2024-05-28T05:52:30.404+0000] {processor.py:161} INFO - Started process (PID=1267) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:30.409+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:52:30.416+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:30.413+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:30.635+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:52:30.648+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:52:30.659+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:52:30.683+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:31.465+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:31.464+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:52:31.489+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:31.489+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:52:31.598+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.223 seconds
[2024-05-28T05:52:34.893+0000] {processor.py:161} INFO - Started process (PID=1268) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:34.896+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:52:34.900+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:34.899+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:34.986+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:52:34.997+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:52:35.009+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:52:35.031+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:52:35.064+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:35.063+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:52:35.098+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:52:35.098+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:52:35.159+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.297 seconds
[2024-05-28T05:53:05.624+0000] {processor.py:161} INFO - Started process (PID=1276) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:53:05.628+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:53:05.631+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:53:05.630+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:53:05.748+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:53:05.761+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:53:05.773+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:53:05.883+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:53:06.030+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:53:06.029+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:53:06.112+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:53:06.111+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:53:06.271+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.665 seconds
[2024-05-28T05:53:37.200+0000] {processor.py:161} INFO - Started process (PID=1284) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:53:37.203+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:53:37.206+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:53:37.205+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:53:37.268+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:53:37.277+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:53:37.287+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:53:37.315+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:53:37.387+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:53:37.387+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:53:37.419+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:53:37.419+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:53:37.457+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.280 seconds
[2024-05-28T05:54:07.757+0000] {processor.py:161} INFO - Started process (PID=1292) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:54:07.760+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:54:07.762+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:54:07.761+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:54:07.829+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:54:07.840+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:54:07.849+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:54:07.868+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:54:07.924+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:54:07.923+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:54:07.948+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:54:07.948+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:54:07.984+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.248 seconds
[2024-05-28T05:54:38.798+0000] {processor.py:161} INFO - Started process (PID=1300) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:54:38.804+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:54:38.806+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:54:38.805+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:54:38.859+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:54:38.882+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:54:38.894+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:54:38.911+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:54:38.946+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:54:38.946+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:54:38.965+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:54:38.964+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:54:38.998+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.220 seconds
[2024-05-28T05:55:09.548+0000] {processor.py:161} INFO - Started process (PID=1308) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:55:09.554+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:55:09.560+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:55:09.558+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:55:09.693+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:55:09.716+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:55:09.741+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:55:09.772+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:55:09.833+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:55:09.832+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:55:09.867+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:55:09.866+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:55:09.955+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.442 seconds
[2024-05-28T05:55:40.259+0000] {processor.py:161} INFO - Started process (PID=1316) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:55:40.263+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:55:40.269+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:55:40.267+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:55:40.335+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:55:40.347+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:55:40.358+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:55:40.377+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:55:40.446+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:55:40.445+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:55:40.488+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:55:40.487+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:55:40.562+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.328 seconds
[2024-05-28T05:56:11.355+0000] {processor.py:161} INFO - Started process (PID=1330) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:56:11.356+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:56:11.359+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:56:11.358+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:56:11.417+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:56:11.428+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:56:11.440+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:56:11.461+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:56:11.526+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:56:11.526+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:56:11.568+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:56:11.568+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:56:11.643+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.300 seconds
[2024-05-28T05:56:42.156+0000] {processor.py:161} INFO - Started process (PID=1338) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:56:42.162+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:56:42.169+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:56:42.166+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:56:42.284+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:56:42.306+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:56:42.326+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:56:42.386+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:56:42.474+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:56:42.474+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:56:42.515+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:56:42.514+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:56:42.566+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.443 seconds
[2024-05-28T05:57:13.230+0000] {processor.py:161} INFO - Started process (PID=1346) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:57:13.233+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:57:13.235+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:57:13.234+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:57:13.278+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:57:13.287+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:57:13.308+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:57:13.325+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:57:13.371+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:57:13.371+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:57:13.403+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:57:13.402+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:57:13.446+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.232 seconds
[2024-05-28T05:57:44.105+0000] {processor.py:161} INFO - Started process (PID=1354) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:57:44.108+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:57:44.111+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:57:44.110+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:57:44.176+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:57:44.210+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:57:44.242+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:57:44.285+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:57:44.567+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:57:44.566+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:57:44.684+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:57:44.684+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:57:44.763+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.714 seconds
[2024-05-28T05:58:15.782+0000] {processor.py:161} INFO - Started process (PID=1362) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:58:15.788+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:58:15.794+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:58:15.792+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:58:15.924+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:58:15.945+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:58:15.968+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:58:16.022+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:58:16.175+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:58:16.174+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:58:16.258+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:58:16.256+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:58:16.318+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.568 seconds
[2024-05-28T05:58:47.115+0000] {processor.py:161} INFO - Started process (PID=1370) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:58:47.121+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:58:47.127+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:58:47.124+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:58:47.245+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:58:47.267+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:58:47.287+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:58:47.340+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:58:47.453+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:58:47.452+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:58:47.493+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:58:47.492+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:58:47.543+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.457 seconds
[2024-05-28T05:59:17.940+0000] {processor.py:161} INFO - Started process (PID=1378) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:59:17.944+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:59:17.950+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:59:17.948+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:59:18.045+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:59:18.065+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:59:18.088+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:59:18.134+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:59:18.276+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:59:18.275+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:59:18.368+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:59:18.365+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:59:18.453+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.543 seconds
[2024-05-28T05:59:49.066+0000] {processor.py:161} INFO - Started process (PID=1386) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:59:49.068+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T05:59:49.070+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:59:49.070+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:59:49.107+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T05:59:49.113+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T05:59:49.122+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T05:59:49.138+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T05:59:49.190+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:59:49.190+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T05:59:49.214+0000] {logging_mixin.py:188} INFO - [2024-05-28T05:59:49.214+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T05:59:49.253+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.200 seconds
[2024-05-28T06:00:19.860+0000] {processor.py:161} INFO - Started process (PID=1394) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:00:19.863+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:00:19.866+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:00:19.864+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:00:19.909+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:00:19.917+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:00:19.924+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:00:19.948+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:00:20.018+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:00:20.017+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:00:20.059+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:00:20.058+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:00:20.122+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.276 seconds
[2024-05-28T06:00:50.998+0000] {processor.py:161} INFO - Started process (PID=1402) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:00:51.002+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:00:51.008+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:00:51.004+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:00:51.057+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:00:51.064+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:00:51.076+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:00:51.102+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:00:51.151+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:00:51.151+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:00:51.188+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:00:51.187+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:00:51.238+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.257 seconds
[2024-05-28T06:01:22.032+0000] {processor.py:161} INFO - Started process (PID=1411) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:01:22.036+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:01:22.041+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:01:22.039+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:01:22.092+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:01:22.102+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:01:22.113+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:01:22.132+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:01:22.197+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:01:22.197+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:01:22.234+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:01:22.234+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:01:22.291+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.294 seconds
[2024-05-28T06:01:52.575+0000] {processor.py:161} INFO - Started process (PID=1419) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:01:52.578+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:01:52.581+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:01:52.580+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:01:52.628+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:01:52.638+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:01:52.646+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:01:52.668+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:01:52.726+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:01:52.725+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:01:52.762+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:01:52.762+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:01:52.810+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.252 seconds
[2024-05-28T06:02:23.117+0000] {processor.py:161} INFO - Started process (PID=1427) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:02:23.119+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:02:23.121+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:02:23.121+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:02:23.163+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:02:23.169+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:02:23.176+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:02:23.196+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:02:23.243+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:02:23.243+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:02:23.277+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:02:23.276+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:02:23.315+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.208 seconds
[2024-05-28T06:02:54.084+0000] {processor.py:161} INFO - Started process (PID=1435) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:02:54.088+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:02:54.091+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:02:54.090+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:02:54.134+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:02:54.143+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:02:54.152+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:02:54.178+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:02:54.266+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:02:54.266+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:02:54.312+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:02:54.311+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:02:54.377+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.306 seconds
[2024-05-28T06:03:24.724+0000] {processor.py:161} INFO - Started process (PID=1443) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:03:24.726+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:03:24.729+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:03:24.728+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:03:24.773+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:03:24.781+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:03:24.789+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:03:24.809+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:03:24.862+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:03:24.861+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:03:24.888+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:03:24.888+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:03:24.936+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.234 seconds
[2024-05-28T06:03:55.561+0000] {processor.py:161} INFO - Started process (PID=1451) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:03:55.566+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:03:55.572+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:03:55.570+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:03:55.658+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:03:55.667+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:03:55.678+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:03:55.703+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:03:55.766+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:03:55.766+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:03:55.804+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:03:55.803+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:03:55.872+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.348 seconds
[2024-05-28T06:04:26.297+0000] {processor.py:161} INFO - Started process (PID=1459) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:04:26.306+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:04:26.317+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:04:26.315+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:04:26.432+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:04:26.461+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:04:26.478+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:04:26.514+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:04:26.628+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:04:26.627+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:04:26.683+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:04:26.682+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:04:26.765+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.496 seconds
[2024-05-28T06:04:57.211+0000] {processor.py:161} INFO - Started process (PID=1467) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:04:57.219+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:04:57.225+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:04:57.223+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:04:57.333+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:04:57.342+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:04:57.351+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T06:04:57.392+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:04:57.464+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:04:57.464+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:04:57.498+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:04:57.498+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:04:57.554+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.381 seconds
[2024-05-28T06:05:27.969+0000] {processor.py:161} INFO - Started process (PID=1476) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:05:27.974+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:05:27.979+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:05:27.977+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:05:28.070+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:05:28.088+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:05:28.145+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`




create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:05:28.180+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:05:29.904+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:05:29.903+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:05:29.950+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:05:29.949+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:05:30.034+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.091 seconds
[2024-05-28T06:06:01.107+0000] {processor.py:161} INFO - Started process (PID=1484) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:06:01.110+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:06:01.113+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:06:01.112+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:06:01.165+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:06:01.175+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:06:01.185+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`




create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:06:01.210+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:06:01.293+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:06:01.293+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:06:01.326+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:06:01.326+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:06:01.379+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.285 seconds
[2024-05-28T06:06:31.715+0000] {processor.py:161} INFO - Started process (PID=1492) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:06:31.717+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:06:31.719+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:06:31.718+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:06:31.757+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:06:31.763+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:06:31.771+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`




create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:06:31.783+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:06:31.817+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:06:31.816+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:06:31.834+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:06:31.834+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:06:31.864+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.158 seconds
[2024-05-28T06:07:02.461+0000] {processor.py:161} INFO - Started process (PID=1500) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:07:02.464+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:07:02.467+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:07:02.465+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:07:02.505+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:07:02.514+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:07:02.533+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`


create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:07:02.553+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:07:02.735+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:07:02.735+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:07:02.751+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:07:02.751+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:07:02.799+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.352 seconds
[2024-05-28T06:07:33.468+0000] {processor.py:161} INFO - Started process (PID=1509) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:07:33.475+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:07:33.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:07:33.478+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:07:33.578+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:07:33.597+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:07:33.636+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:07:33.679+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:07:34.103+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:07:34.103+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:07:34.121+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:07:34.121+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:07:34.159+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.724 seconds
[2024-05-28T06:08:04.956+0000] {processor.py:161} INFO - Started process (PID=1517) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:08:04.962+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:08:04.968+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:08:04.966+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:08:05.076+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:08:05.097+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:08:05.123+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:08:05.180+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:08:05.323+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:08:05.321+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:08:05.398+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:08:05.396+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:08:05.504+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.597 seconds
[2024-05-28T06:08:36.215+0000] {processor.py:161} INFO - Started process (PID=1525) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:08:36.221+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:08:36.226+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:08:36.225+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:08:36.318+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:08:36.333+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:08:36.350+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:08:36.389+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:08:36.447+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:08:36.447+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:08:36.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:08:36.479+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:08:36.528+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.345 seconds
[2024-05-28T06:09:07.153+0000] {processor.py:161} INFO - Started process (PID=1533) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:09:07.157+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:09:07.160+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:09:07.159+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:09:07.216+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:09:07.225+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:09:07.235+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:09:07.261+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:09:07.328+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:09:07.327+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:09:07.359+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:09:07.358+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:09:07.403+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.269 seconds
[2024-05-28T06:09:38.074+0000] {processor.py:161} INFO - Started process (PID=1541) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:09:38.079+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:09:38.083+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:09:38.081+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:09:38.145+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:09:38.153+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:09:38.176+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- -- dây là tạo từ oltp sang olap
-- create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
-- select 
-- customerID,
-- contactName,
-- address,
-- city,
-- phone,
-- country
-- from
-- `datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:09:38.215+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:09:38.681+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:09:38.681+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:09:38.744+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:09:38.744+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:09:38.823+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.779 seconds
[2024-05-28T06:10:09.018+0000] {processor.py:161} INFO - Started process (PID=1554) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:10:09.020+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:10:09.023+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:10:09.022+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:10:09.081+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:10:09.089+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:10:09.099+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- -- dây là tạo từ oltp sang olap
-- create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
-- select 
-- customerID,
-- contactName,
-- address,
-- city,
-- phone,
-- country
-- from
-- `datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:10:09.127+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:10:09.225+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:10:09.224+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:10:09.267+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:10:09.266+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:10:09.326+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.323 seconds
[2024-05-28T06:10:40.226+0000] {processor.py:161} INFO - Started process (PID=1567) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:10:40.229+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:10:40.242+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:10:40.239+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:10:40.943+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:10:40.950+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:10:40.959+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- -- dây là tạo từ oltp sang olap
-- create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
-- select 
-- customerID,
-- contactName,
-- address,
-- city,
-- phone,
-- country
-- from
-- `datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:10:41.288+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:10:41.629+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:10:41.629+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:10:41.838+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:10:41.837+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:10:42.144+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.955 seconds
[2024-05-28T06:11:13.206+0000] {processor.py:161} INFO - Started process (PID=1575) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:11:13.212+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:11:13.217+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:11:13.215+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:11:13.322+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:11:13.342+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:11:13.360+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- -- dây là tạo từ oltp sang olap
-- create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
-- select 
-- customerID,
-- contactName,
-- address,
-- city,
-- phone,
-- country
-- from
-- `datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:11:13.404+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:11:13.527+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:11:13.526+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:11:13.591+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:11:13.590+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:11:13.636+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.456 seconds
[2024-05-28T06:11:44.429+0000] {processor.py:161} INFO - Started process (PID=1583) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:11:44.512+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:11:44.519+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:11:44.518+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:11:44.760+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:11:44.794+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:11:44.863+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`

-- -- dây là tạo từ oltp sang olap
-- create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
-- select 
-- customerID,
-- contactName,
-- address,
-- city,
-- phone,
-- country
-- from
-- `datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:11:45.153+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:11:45.346+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:11:45.345+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:11:45.419+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:11:45.418+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:11:45.521+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.141 seconds
[2024-05-28T06:29:46.270+0000] {processor.py:161} INFO - Started process (PID=36) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:29:46.275+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:29:46.284+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:29:46.282+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:29:46.376+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:29:46.386+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:29:46.400+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:29:46.447+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:29:46.911+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:29:46.910+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:29:46.955+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:29:46.955+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:29:47.478+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.237 seconds
[2024-05-28T06:30:17.918+0000] {processor.py:161} INFO - Started process (PID=45) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:30:17.921+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:30:17.926+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:30:17.926+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:30:17.979+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:30:17.990+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:30:18.008+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:30:18.043+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:30:18.255+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:30:18.203+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:30:18.443+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:30:18.443+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:30:18.518+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.639 seconds
[2024-05-28T06:30:49.084+0000] {processor.py:161} INFO - Started process (PID=53) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:30:49.096+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:30:49.131+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:30:49.127+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:30:49.188+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:30:49.194+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:30:49.203+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:30:49.252+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:30:49.380+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:30:49.378+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:30:49.419+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:30:49.418+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:30:49.500+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.451 seconds
[2024-05-28T06:31:20.595+0000] {processor.py:161} INFO - Started process (PID=61) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:31:20.598+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:31:20.605+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:31:20.604+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:31:20.793+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:31:20.812+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:31:20.847+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:31:20.940+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:31:21.272+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:31:21.261+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:31:21.510+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:31:21.510+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:31:21.629+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.079 seconds
[2024-05-28T06:31:52.142+0000] {processor.py:161} INFO - Started process (PID=69) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:31:52.145+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:31:52.158+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:31:52.155+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:31:52.205+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:31:52.211+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:31:52.219+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:31:52.284+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:31:52.443+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:31:52.440+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:31:52.523+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:31:52.523+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:31:52.598+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.481 seconds
[2024-05-28T06:32:07.415+0000] {processor.py:161} INFO - Started process (PID=70) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:32:07.417+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:32:07.420+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:32:07.420+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:32:07.468+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:32:07.473+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:32:07.479+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:32:07.484+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:32:07.497+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:32:16.007+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:32:16.005+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:32:16.054+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:32:16.053+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:32:16.160+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 8.755 seconds
[2024-05-28T06:32:49.445+0000] {processor.py:161} INFO - Started process (PID=78) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:32:49.546+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:32:50.235+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:32:50.209+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:32:54.309+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:32:54.407+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:32:54.523+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:32:54.603+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:32:54.933+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:32:56.189+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:32:56.187+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:32:56.781+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:32:56.780+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:33:07.180+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 18.966 seconds
[2024-05-28T06:33:37.682+0000] {processor.py:161} INFO - Started process (PID=93) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:33:37.713+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:33:37.771+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:33:37.764+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:33:37.896+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:33:37.904+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:33:37.923+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:33:37.939+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:33:38.076+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:33:38.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:33:38.437+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:33:38.621+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:33:38.620+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:33:38.774+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.205 seconds
[2024-05-28T06:34:09.365+0000] {processor.py:161} INFO - Started process (PID=101) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:34:09.368+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:34:09.372+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:34:09.371+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:34:09.403+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:34:09.408+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:34:09.413+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:34:09.419+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:34:09.439+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:34:13.663+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:34:13.661+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:34:13.710+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:34:13.709+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:34:13.827+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 4.477 seconds
[2024-05-28T06:34:44.415+0000] {processor.py:161} INFO - Started process (PID=109) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:34:44.420+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:34:44.433+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:34:44.430+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:34:44.514+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:34:44.521+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:34:44.527+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:34:44.532+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:34:44.628+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:34:44.776+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:34:44.775+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:34:44.848+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:34:44.848+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:34:44.911+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.567 seconds
[2024-05-28T06:35:15.923+0000] {processor.py:161} INFO - Started process (PID=117) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:35:15.926+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:35:15.932+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:35:15.931+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:35:15.970+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:35:15.976+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:35:15.982+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:35:15.990+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:35:16.015+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:35:16.103+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:35:16.101+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:35:16.139+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:35:16.138+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:35:16.198+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.293 seconds
[2024-05-28T06:35:46.611+0000] {processor.py:161} INFO - Started process (PID=126) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:35:46.627+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:35:46.686+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:35:46.680+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:35:47.315+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:35:47.350+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:35:47.381+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:35:47.430+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:35:47.822+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:35:48.267+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:35:48.264+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:35:54.809+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:35:54.808+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:35:54.872+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 8.360 seconds
[2024-05-28T06:36:25.355+0000] {processor.py:161} INFO - Started process (PID=139) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:36:25.360+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:36:25.367+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:36:25.366+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:36:25.409+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:36:25.419+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:36:25.427+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:36:25.436+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:36:25.475+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:36:25.597+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:36:25.596+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:36:25.658+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:36:25.655+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:36:25.768+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.445 seconds
[2024-05-28T06:36:55.952+0000] {processor.py:161} INFO - Started process (PID=147) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:36:55.954+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:36:55.958+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:36:55.958+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:36:55.993+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:36:55.999+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:36:56.005+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:36:56.010+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:36:56.034+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:36:56.078+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:36:56.077+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:36:56.101+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:36:56.101+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:36:56.171+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.234 seconds
[2024-05-28T06:37:26.295+0000] {processor.py:161} INFO - Started process (PID=155) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:37:26.296+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:37:26.300+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:37:26.300+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:37:26.327+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:37:26.331+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:37:26.335+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:37:26.339+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:37:26.352+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:37:26.392+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:37:26.391+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:37:26.413+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:37:26.412+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:37:26.443+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.155 seconds
[2024-05-28T06:37:56.632+0000] {processor.py:161} INFO - Started process (PID=163) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:37:56.635+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:37:56.643+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:37:56.643+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:37:56.677+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:37:56.683+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:37:56.691+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:37:56.697+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:37:56.718+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:37:56.812+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:37:56.808+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:37:56.846+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:37:56.846+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:37:56.912+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.293 seconds
[2024-05-28T06:38:27.146+0000] {processor.py:161} INFO - Started process (PID=171) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:38:27.150+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:38:27.157+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:38:27.156+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:38:27.201+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:38:27.207+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:38:27.214+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:38:27.222+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:38:27.255+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:38:27.364+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:38:27.362+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:38:27.415+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:38:27.414+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:38:27.484+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.357 seconds
[2024-05-28T06:38:58.477+0000] {processor.py:161} INFO - Started process (PID=179) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:38:58.479+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:38:58.482+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:38:58.481+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:38:58.502+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:38:58.506+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:38:58.510+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:38:58.514+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:38:58.526+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:38:58.566+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:38:58.566+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:38:58.592+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:38:58.592+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:38:58.629+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.160 seconds
[2024-05-28T06:39:28.877+0000] {processor.py:161} INFO - Started process (PID=187) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:39:28.881+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:39:28.891+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:39:28.890+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:39:28.939+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:39:28.947+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:39:28.955+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:39:28.963+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:39:29.009+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:39:29.154+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:39:29.152+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:39:29.229+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:39:29.229+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:39:29.373+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.527 seconds
[2024-05-28T06:39:59.511+0000] {processor.py:161} INFO - Started process (PID=198) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:39:59.513+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:39:59.521+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:39:59.520+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:39:59.565+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:39:59.581+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:39:59.591+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:39:59.597+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:39:59.617+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:39:59.666+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:39:59.665+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:39:59.702+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:39:59.701+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:39:59.759+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.263 seconds
[2024-05-28T06:40:29.878+0000] {processor.py:161} INFO - Started process (PID=210) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:40:29.880+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:40:29.882+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:40:29.882+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:40:29.909+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:40:29.914+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:40:29.919+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:40:29.925+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:40:29.947+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:40:29.996+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:40:29.995+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:40:30.018+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:40:30.017+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:40:30.047+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.179 seconds
[2024-05-28T06:41:00.244+0000] {processor.py:161} INFO - Started process (PID=218) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:41:00.247+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:41:00.252+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:41:00.251+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:41:00.283+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:41:00.290+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:41:00.297+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:41:00.305+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:41:00.335+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:41:00.406+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:41:00.405+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:41:00.445+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:41:00.444+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:41:00.494+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.265 seconds
[2024-05-28T06:41:30.887+0000] {processor.py:161} INFO - Started process (PID=226) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:41:30.889+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:41:30.902+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:41:30.901+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:41:30.938+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:41:30.944+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:41:30.949+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:41:30.955+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:41:30.983+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:41:31.052+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:41:31.052+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:41:31.113+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:41:31.113+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:41:37.182+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 6.334 seconds
[2024-05-28T06:42:07.975+0000] {processor.py:161} INFO - Started process (PID=235) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:07.978+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:42:07.983+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:07.982+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:08.014+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:42:08.020+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:42:08.026+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:42:08.031+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:42:08.048+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:08.144+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:08.142+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:42:08.183+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:08.183+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:42:08.239+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.279 seconds
[2024-05-28T06:42:15.248+0000] {processor.py:161} INFO - Started process (PID=236) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:15.249+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:42:15.255+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:15.254+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:15.306+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:42:15.311+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:42:15.320+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:42:15.326+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:42:15.344+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:42:15.362+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:15.404+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:15.404+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:42:15.429+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:15.429+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:42:15.473+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.237 seconds
[2024-05-28T06:42:45.645+0000] {processor.py:161} INFO - Started process (PID=244) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:45.647+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:42:45.651+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:45.650+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:45.699+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:42:45.705+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:42:45.711+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:42:45.717+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:42:45.724+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:42:45.748+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:42:45.833+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:45.832+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:42:45.882+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:42:45.881+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:42:45.946+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.316 seconds
[2024-05-28T06:43:16.095+0000] {processor.py:161} INFO - Started process (PID=252) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:16.098+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:43:16.107+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:16.106+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:16.157+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:43:16.166+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:43:16.176+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:43:16.184+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:43:16.190+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:43:16.211+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:16.998+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:16.997+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:43:17.022+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:17.022+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:43:17.098+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.018 seconds
[2024-05-28T06:43:19.155+0000] {processor.py:161} INFO - Started process (PID=253) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:19.157+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:43:19.161+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:19.160+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:19.207+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:43:19.212+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:43:19.217+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:43:19.223+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:43:19.228+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:43:19.242+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:19.263+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:19.262+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:43:19.291+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:19.290+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:43:19.329+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.185 seconds
[2024-05-28T06:43:28.404+0000] {processor.py:161} INFO - Started process (PID=254) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:28.405+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:43:28.411+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:28.410+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:28.474+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:43:28.483+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:43:28.491+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:43:28.497+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:43:28.504+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:43:28.531+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:28.571+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:28.570+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:43:28.616+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:28.615+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:43:28.691+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.299 seconds
[2024-05-28T06:43:58.808+0000] {processor.py:161} INFO - Started process (PID=262) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:58.809+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:43:58.812+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:58.811+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:58.831+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:43:58.834+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:43:58.838+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:43:58.841+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:43:58.844+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:43:58.855+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:43:59.230+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:59.229+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:43:59.243+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:43:59.242+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:43:59.271+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.471 seconds
[2024-05-28T06:44:29.359+0000] {processor.py:161} INFO - Started process (PID=270) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:44:29.360+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:44:29.363+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:44:29.362+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:44:29.382+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:44:29.386+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:44:29.389+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:44:29.392+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:44:29.395+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:44:29.406+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:44:29.435+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:44:29.435+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:44:29.453+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:44:29.453+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:44:29.692+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.341 seconds
[2024-05-28T06:45:00.702+0000] {processor.py:161} INFO - Started process (PID=278) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:45:00.703+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:45:00.705+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:45:00.705+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:45:00.724+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:45:00.728+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:45:00.731+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:45:00.735+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:45:00.738+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:45:00.748+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:45:00.777+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:45:00.776+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:45:00.793+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:45:00.793+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:45:00.818+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.123 seconds
[2024-05-28T06:45:30.965+0000] {processor.py:161} INFO - Started process (PID=287) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:45:30.967+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:45:30.974+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:45:30.972+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:45:31.013+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:45:31.017+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:45:31.023+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:45:31.026+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:45:31.030+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:45:31.043+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:45:31.082+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:45:31.081+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:45:31.110+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:45:31.109+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:45:31.149+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.199 seconds
[2024-05-28T06:46:01.482+0000] {processor.py:161} INFO - Started process (PID=295) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:46:01.483+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:46:01.488+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:46:01.487+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:46:01.517+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:46:01.522+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:46:01.527+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:46:01.532+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:46:01.537+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:46:01.557+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:46:01.607+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:46:01.606+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:46:01.650+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:46:01.650+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:46:01.708+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.238 seconds
[2024-05-28T06:46:31.822+0000] {processor.py:161} INFO - Started process (PID=303) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:46:31.824+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:46:31.827+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:46:31.826+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:46:31.847+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:46:31.851+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:46:31.855+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:46:31.859+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:46:31.862+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:46:31.875+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:46:31.913+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:46:31.912+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:46:31.932+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:46:31.932+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:46:31.960+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.146 seconds
[2024-05-28T06:47:03.024+0000] {processor.py:161} INFO - Started process (PID=317) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:47:03.038+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:47:03.063+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:47:03.062+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:47:03.556+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:47:03.615+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:47:03.682+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:47:03.737+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:47:03.779+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:47:03.855+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:47:04.084+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:47:04.076+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:47:04.165+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:47:04.164+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:47:04.269+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.295 seconds
[2024-05-28T06:47:34.591+0000] {processor.py:161} INFO - Started process (PID=331) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:47:34.592+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:47:34.594+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:47:34.594+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:47:34.621+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:47:34.625+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:47:34.629+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:47:34.632+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:47:34.636+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:47:34.668+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:47:34.723+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:47:34.722+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:47:34.762+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:47:34.762+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:47:36.644+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.062 seconds
[2024-05-28T06:48:07.077+0000] {processor.py:161} INFO - Started process (PID=339) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:48:07.079+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:48:07.083+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:48:07.082+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:48:07.110+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:48:07.115+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:48:07.122+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:48:07.130+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:48:07.135+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:48:07.150+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:48:07.197+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:48:07.195+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:48:07.227+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:48:07.226+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:48:07.264+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.197 seconds
[2024-05-28T06:48:37.408+0000] {processor.py:161} INFO - Started process (PID=347) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:48:37.409+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:48:37.411+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:48:37.411+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:48:37.428+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:48:37.431+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:48:37.434+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:48:37.437+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:48:37.440+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:48:37.449+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:48:37.478+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:48:37.477+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:48:37.494+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:48:37.493+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:48:37.515+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.114 seconds
[2024-05-28T06:49:07.612+0000] {processor.py:161} INFO - Started process (PID=356) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:49:07.613+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:49:07.616+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:49:07.616+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:49:07.637+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:49:07.640+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:49:07.643+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:49:07.647+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:49:07.650+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:49:07.660+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:49:07.688+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:49:07.687+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:49:07.703+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:49:07.703+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:49:07.727+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.123 seconds
[2024-05-28T06:49:37.875+0000] {processor.py:161} INFO - Started process (PID=364) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:49:37.876+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:49:37.878+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:49:37.878+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:49:37.897+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:49:37.900+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:49:37.904+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:49:37.907+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:49:37.910+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:49:37.920+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:49:37.949+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:49:37.949+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:49:37.965+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:49:37.964+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:49:37.990+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.122 seconds
[2024-05-28T06:50:08.231+0000] {processor.py:161} INFO - Started process (PID=372) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:50:08.232+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:50:08.235+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:50:08.235+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:50:08.259+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:50:08.263+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:50:08.267+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:50:08.272+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:50:08.277+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:50:08.291+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:50:08.331+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:50:08.331+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:50:08.354+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:50:08.353+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:50:08.395+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.171 seconds
[2024-05-28T06:50:38.484+0000] {processor.py:161} INFO - Started process (PID=380) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:50:38.486+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:50:38.489+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:50:38.488+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:50:38.511+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:50:38.516+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:50:38.521+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:50:38.527+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:50:38.532+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:50:38.549+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:50:38.617+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:50:38.616+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:50:39.021+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:50:39.020+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:50:39.056+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.580 seconds
[2024-05-28T06:51:09.752+0000] {processor.py:161} INFO - Started process (PID=388) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:51:09.753+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:51:09.758+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:51:09.757+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:51:09.816+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:51:09.822+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:51:09.828+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:51:09.834+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:51:09.841+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:51:09.869+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:51:09.965+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:51:09.956+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:51:10.030+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:51:10.030+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:51:10.108+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.368 seconds
[2024-05-28T06:51:40.390+0000] {processor.py:161} INFO - Started process (PID=396) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:51:40.392+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:51:40.395+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:51:40.395+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:51:40.420+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:51:40.423+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:51:40.428+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:51:40.433+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:51:40.437+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:51:40.451+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:51:40.491+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:51:40.490+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:51:40.513+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:51:40.512+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:51:40.542+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.161 seconds
[2024-05-28T06:52:10.613+0000] {processor.py:161} INFO - Started process (PID=404) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:52:10.615+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:52:10.618+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:52:10.618+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:52:10.651+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:52:10.657+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:52:10.663+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:52:10.672+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:52:10.676+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:52:10.691+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:52:10.729+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:52:10.729+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:52:10.748+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:52:10.748+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:52:10.778+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.177 seconds
[2024-05-28T06:52:40.866+0000] {processor.py:161} INFO - Started process (PID=412) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:52:40.867+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:52:40.870+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:52:40.869+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:52:40.891+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:52:40.895+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:52:40.899+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:52:40.903+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:52:40.907+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:52:40.918+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:52:40.950+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:52:40.949+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:52:40.968+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:52:40.967+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:52:40.993+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.135 seconds
[2024-05-28T06:53:11.168+0000] {processor.py:161} INFO - Started process (PID=421) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:53:11.170+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:53:11.175+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:53:11.174+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:53:11.204+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:53:11.209+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:53:11.215+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:53:11.220+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:53:11.225+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:53:11.244+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:53:11.317+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:53:11.315+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:53:11.346+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:53:11.346+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:53:11.399+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.243 seconds
[2024-05-28T06:53:41.485+0000] {processor.py:161} INFO - Started process (PID=429) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:53:41.486+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:53:41.489+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:53:41.489+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:53:41.510+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:53:41.514+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:53:41.518+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:53:41.522+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:53:41.525+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:53:41.537+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:53:41.567+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:53:41.567+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:53:41.851+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:53:41.851+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:53:41.874+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.397 seconds
[2024-05-28T06:54:12.749+0000] {processor.py:161} INFO - Started process (PID=437) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:54:12.751+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:54:12.754+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:54:12.753+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:54:12.779+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:54:12.783+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:54:12.787+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:54:12.792+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:54:12.796+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:54:12.809+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:54:12.849+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:54:12.849+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:54:12.869+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:54:12.869+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:54:12.904+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.168 seconds
[2024-05-28T06:54:43.036+0000] {processor.py:161} INFO - Started process (PID=445) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:54:43.038+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:54:43.043+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:54:43.042+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:54:43.074+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:54:43.080+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:54:43.087+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:54:43.093+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:54:43.099+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:54:43.119+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:54:43.165+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:54:43.164+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:54:43.187+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:54:43.186+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:54:43.214+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.188 seconds
[2024-05-28T06:55:13.529+0000] {processor.py:161} INFO - Started process (PID=453) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:55:13.530+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:55:13.533+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:55:13.532+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:55:13.553+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:55:13.558+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:55:13.563+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:55:13.567+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:55:13.572+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:55:13.585+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:55:13.627+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:55:13.626+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:55:13.650+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:55:13.650+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:55:13.680+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.159 seconds
[2024-05-28T06:55:43.797+0000] {processor.py:161} INFO - Started process (PID=461) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:55:43.798+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:55:43.802+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:55:43.801+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:55:43.823+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:55:43.826+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:55:43.830+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:55:43.834+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:55:43.838+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:55:43.849+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:55:43.880+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:55:43.880+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:55:43.898+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:55:43.898+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:55:43.922+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.133 seconds
[2024-05-28T06:56:14.119+0000] {processor.py:161} INFO - Started process (PID=469) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:56:14.121+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:56:14.126+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:56:14.125+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:56:14.158+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:56:14.164+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:56:14.171+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:56:14.176+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:56:14.182+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:56:14.216+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:56:14.285+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:56:14.284+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:56:14.323+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:56:14.322+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:56:14.755+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.650 seconds
[2024-05-28T06:56:45.330+0000] {processor.py:161} INFO - Started process (PID=477) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:56:45.332+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:56:45.359+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:56:45.359+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:56:45.412+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:56:45.416+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:56:45.420+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:56:45.423+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:56:45.426+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:56:45.439+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:56:45.478+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:56:45.477+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:56:45.763+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:56:45.763+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:56:45.797+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.476 seconds
[2024-05-28T06:57:16.606+0000] {processor.py:161} INFO - Started process (PID=485) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:57:16.607+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:57:16.610+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:57:16.610+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:57:16.629+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:57:16.633+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:57:16.637+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:57:16.640+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:57:16.644+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:57:16.656+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:57:16.688+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:57:16.687+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:57:16.707+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:57:16.706+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:57:16.733+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.134 seconds
[2024-05-28T06:57:46.989+0000] {processor.py:161} INFO - Started process (PID=494) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:57:46.991+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:57:46.998+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:57:46.996+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:57:47.054+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:57:47.061+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:57:47.067+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:57:47.074+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:57:47.081+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:57:47.109+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:57:47.198+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:57:47.197+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:57:47.249+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:57:47.249+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:57:47.308+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.334 seconds
[2024-05-28T06:58:18.225+0000] {processor.py:161} INFO - Started process (PID=504) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:58:18.228+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:58:18.232+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:58:18.232+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:58:18.263+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:58:18.272+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:58:18.285+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:58:18.296+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:58:18.305+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:58:18.338+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:58:18.414+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:58:18.413+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:58:18.446+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:58:18.445+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:58:18.482+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.269 seconds
[2024-05-28T06:58:49.889+0000] {processor.py:161} INFO - Started process (PID=512) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:58:49.914+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:58:49.980+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:58:49.968+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:58:50.212+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:58:50.291+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:58:50.309+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:58:50.335+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:58:50.352+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:58:50.734+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:58:50.985+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:58:50.983+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:58:51.110+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:58:51.110+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:58:51.369+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.648 seconds
[2024-05-28T06:59:22.211+0000] {processor.py:161} INFO - Started process (PID=521) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:59:22.213+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:59:22.217+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:59:22.216+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:59:22.247+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:59:22.252+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:59:22.258+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:59:22.264+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:59:22.268+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:59:22.291+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:59:22.332+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:59:22.331+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:59:22.362+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:59:22.361+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:59:25.241+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 3.040 seconds
[2024-05-28T06:59:55.977+0000] {processor.py:161} INFO - Started process (PID=529) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:59:55.996+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T06:59:56.004+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:59:56.002+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:59:56.088+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T06:59:56.133+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T06:59:56.149+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T06:59:56.198+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T06:59:56.226+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T06:59:56.288+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T06:59:56.411+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:59:56.410+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T06:59:56.462+0000] {logging_mixin.py:188} INFO - [2024-05-28T06:59:56.461+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T06:59:56.555+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.609 seconds
[2024-05-28T07:00:26.677+0000] {processor.py:161} INFO - Started process (PID=537) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:00:26.688+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:00:26.694+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:00:26.693+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:00:26.744+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:00:26.753+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:00:26.762+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:00:26.772+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:00:26.784+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:00:26.825+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:00:26.905+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:00:26.904+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:00:26.959+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:00:26.958+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:00:27.035+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.381 seconds
[2024-05-28T07:00:57.887+0000] {processor.py:161} INFO - Started process (PID=545) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:00:57.889+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:00:57.893+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:00:57.892+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:00:57.926+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:00:57.932+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:00:57.939+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:00:57.946+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:00:57.954+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:00:57.975+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:00:58.028+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:00:58.027+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:00:58.058+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:00:58.057+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:00:58.098+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.222 seconds
[2024-05-28T07:01:28.323+0000] {processor.py:161} INFO - Started process (PID=554) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:01:28.324+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:01:28.328+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:01:28.327+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:01:28.352+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:01:28.359+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:01:28.364+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:01:28.369+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:01:28.373+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:01:28.386+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:01:28.420+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:01:28.420+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:01:28.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:01:28.439+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:01:28.468+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.154 seconds
[2024-05-28T07:01:58.760+0000] {processor.py:161} INFO - Started process (PID=562) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:01:58.762+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:01:58.768+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:01:58.767+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:01:58.804+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:01:58.811+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:01:58.820+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:01:58.826+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:01:58.833+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:01:58.857+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:01:58.925+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:01:58.924+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:01:58.957+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:01:58.956+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:01:59.003+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.259 seconds
[2024-05-28T07:02:29.089+0000] {processor.py:161} INFO - Started process (PID=570) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:02:29.091+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:02:29.095+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:02:29.094+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:02:29.124+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:02:29.130+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:02:29.135+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:02:29.140+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:02:29.146+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:02:29.160+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:02:29.217+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:02:29.216+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:02:32.358+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:02:32.357+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:02:32.409+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 3.333 seconds
[2024-05-28T07:03:02.561+0000] {processor.py:161} INFO - Started process (PID=579) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:03:02.563+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:03:02.567+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:03:02.566+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:03:02.599+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:03:02.604+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:03:02.610+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:03:02.617+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:03:02.624+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:03:02.642+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:03:02.688+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:03:02.687+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:03:02.711+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:03:02.710+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:03:02.745+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.195 seconds
[2024-05-28T07:03:32.869+0000] {processor.py:161} INFO - Started process (PID=587) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:03:32.870+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:03:32.873+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:03:32.873+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:03:32.894+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:03:32.898+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:03:32.902+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:03:32.906+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:03:32.910+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:03:32.921+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:03:32.958+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:03:32.957+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:03:32.978+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:03:32.977+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:03:33.010+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.149 seconds
[2024-05-28T07:04:03.091+0000] {processor.py:161} INFO - Started process (PID=595) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:04:03.093+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:04:03.096+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:04:03.095+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:04:03.119+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:04:03.124+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:04:03.128+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:04:03.132+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:04:03.136+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:04:03.145+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:04:03.176+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:04:03.175+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:04:03.193+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:04:03.192+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:04:03.219+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.135 seconds
[2024-05-28T07:04:33.480+0000] {processor.py:161} INFO - Started process (PID=603) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:04:33.482+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:04:33.492+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:04:33.491+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:04:33.519+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:04:33.523+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:04:33.526+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:04:33.529+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:04:33.533+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:04:33.544+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:04:33.582+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:04:33.581+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:04:33.608+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:04:33.608+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:04:33.644+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.172 seconds
[2024-05-28T07:05:04.006+0000] {processor.py:161} INFO - Started process (PID=611) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:05:04.007+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:05:04.009+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:05:04.009+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:05:04.027+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:05:04.031+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:05:04.034+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:05:04.037+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:05:04.040+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:05:04.050+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:05:04.078+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:05:04.078+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:05:04.096+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:05:04.095+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:05:04.349+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.351 seconds
[2024-05-28T07:05:34.468+0000] {processor.py:161} INFO - Started process (PID=619) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:05:34.469+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:05:34.473+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:05:34.473+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:05:34.502+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:05:34.506+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:05:34.511+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:05:34.516+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:05:34.521+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:05:34.536+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:05:34.576+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:05:34.574+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:05:34.922+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:05:34.922+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:05:34.979+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.522 seconds
[2024-05-28T07:06:05.765+0000] {processor.py:161} INFO - Started process (PID=627) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:06:05.767+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:06:05.771+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:06:05.770+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:06:05.796+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:06:05.801+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:06:05.806+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:06:05.811+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:06:05.817+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:06:05.834+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:06:05.876+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:06:05.875+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:06:05.902+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:06:05.902+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:06:05.940+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.186 seconds
[2024-05-28T07:06:36.029+0000] {processor.py:161} INFO - Started process (PID=635) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:06:36.031+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:06:36.033+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:06:36.033+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:06:36.052+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:06:36.056+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:06:36.059+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:06:36.062+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:06:36.065+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:06:36.076+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:06:36.105+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:06:36.105+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:06:36.121+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:06:36.121+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:06:36.149+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.126 seconds
[2024-05-28T07:07:06.276+0000] {processor.py:161} INFO - Started process (PID=643) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:07:06.277+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:07:06.281+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:07:06.280+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:07:06.304+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:07:06.308+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:07:06.312+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:07:06.318+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:07:06.322+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:07:06.334+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:07:06.369+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:07:06.368+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:07:06.388+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:07:06.388+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:07:06.416+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.150 seconds
[2024-05-28T07:07:36.602+0000] {processor.py:161} INFO - Started process (PID=651) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:07:36.604+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:07:36.608+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:07:36.607+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:07:36.633+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:07:36.638+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:07:36.643+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:07:36.648+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:07:36.654+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:07:36.668+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:07:36.700+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:07:36.700+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:07:36.723+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:07:36.723+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:07:36.758+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.166 seconds
[2024-05-28T07:08:06.918+0000] {processor.py:161} INFO - Started process (PID=659) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:08:06.919+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:08:06.921+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:08:06.921+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:08:06.938+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:08:06.942+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:08:06.946+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:08:06.949+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:08:06.953+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:08:06.962+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:08:06.989+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:08:06.988+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:08:07.005+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:08:07.005+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:08:07.230+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.319 seconds
[2024-05-28T07:08:38.197+0000] {processor.py:161} INFO - Started process (PID=667) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:08:38.199+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:08:38.201+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:08:38.201+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:08:38.220+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:08:38.224+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:08:38.227+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:08:38.231+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:08:38.235+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:08:38.248+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:08:38.283+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:08:38.282+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:08:38.495+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:08:38.494+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:08:38.517+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.327 seconds
[2024-05-28T07:09:08.584+0000] {processor.py:161} INFO - Started process (PID=675) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:09:08.586+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:09:08.589+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:09:08.588+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:09:08.619+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:09:08.624+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:09:08.628+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:09:08.635+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:09:08.640+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:09:08.657+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:09:08.703+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:09:08.702+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:09:08.731+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:09:08.731+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:09:08.764+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.192 seconds
[2024-05-28T07:09:38.836+0000] {processor.py:161} INFO - Started process (PID=683) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:09:38.838+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:09:38.841+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:09:38.840+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:09:38.866+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:09:38.870+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:09:38.874+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:09:38.878+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:09:38.882+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:09:38.893+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:09:38.924+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:09:38.924+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:09:38.942+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:09:38.941+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:09:38.967+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.138 seconds
[2024-05-28T07:10:09.356+0000] {processor.py:161} INFO - Started process (PID=691) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:10:09.359+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:10:09.365+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:10:09.363+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:10:09.407+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:10:09.413+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:10:09.420+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:10:09.426+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:10:09.432+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:10:09.451+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:10:09.507+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:10:09.506+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:10:09.538+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:10:09.538+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:10:09.581+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.242 seconds
[2024-05-28T07:10:39.675+0000] {processor.py:161} INFO - Started process (PID=699) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:10:39.677+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:10:39.680+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:10:39.679+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:10:39.700+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:10:39.703+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:10:39.707+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:10:39.711+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:10:39.715+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:10:39.727+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:10:39.759+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:10:39.758+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:10:39.778+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:10:39.778+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:10:39.816+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.148 seconds
[2024-05-28T07:11:09.909+0000] {processor.py:161} INFO - Started process (PID=707) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:11:09.911+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:11:09.914+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:11:09.913+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:11:09.942+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:11:09.947+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:11:09.953+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:11:09.958+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:11:09.962+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:11:09.988+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:11:10.033+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:11:10.033+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:11:10.370+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:11:10.370+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:11:10.402+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.503 seconds
[2024-05-28T07:11:41.216+0000] {processor.py:161} INFO - Started process (PID=716) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:11:41.218+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:11:41.221+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:11:41.220+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:11:41.244+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:11:41.249+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:11:41.253+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:11:41.256+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:11:41.259+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:11:41.273+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:11:41.309+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:11:41.309+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:11:41.548+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:11:41.547+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:11:41.572+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.365 seconds
[2024-05-28T07:12:12.573+0000] {processor.py:161} INFO - Started process (PID=726) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:12:12.575+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:12:12.579+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:12:12.578+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:12:12.615+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:12:12.620+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:12:12.625+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:12:12.629+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:12:12.633+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:12:12.648+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:12:12.686+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:12:12.685+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:12:12.707+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:12:12.706+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:12:12.735+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.170 seconds
[2024-05-28T07:12:42.885+0000] {processor.py:161} INFO - Started process (PID=738) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:12:42.887+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:12:42.890+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:12:42.889+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:12:42.915+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:12:42.920+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:12:42.925+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:12:42.930+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:12:42.934+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:12:42.947+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:12:42.982+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:12:42.982+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:12:43.005+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:12:43.005+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:12:43.042+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.166 seconds
[2024-05-28T07:13:13.213+0000] {processor.py:161} INFO - Started process (PID=746) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:13:13.215+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:13:13.218+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:13:13.217+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:13:13.240+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:13:13.244+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:13:13.248+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:13:13.252+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:13:13.256+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:13:13.271+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:13:13.322+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:13:13.321+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:13:13.351+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:13:13.351+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:13:13.389+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.184 seconds
[2024-05-28T07:13:43.513+0000] {processor.py:161} INFO - Started process (PID=754) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:13:43.516+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:13:43.521+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:13:43.520+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:13:43.555+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:13:43.562+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:13:43.569+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:13:43.575+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:13:43.584+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:13:43.612+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:13:43.690+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:13:43.689+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:13:43.745+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:13:43.743+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:13:43.827+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.324 seconds
[2024-05-28T07:14:14.941+0000] {processor.py:161} INFO - Started process (PID=762) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:14:14.983+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:14:15.006+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:14:15.005+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:14:15.094+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:14:15.105+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:14:15.111+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:14:15.119+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:14:15.125+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:14:15.148+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:14:15.209+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:14:15.208+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:14:15.704+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:14:15.704+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:14:15.787+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.881 seconds
[2024-05-28T07:14:46.194+0000] {processor.py:161} INFO - Started process (PID=770) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:14:46.196+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:14:46.202+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:14:46.201+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:14:46.225+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:14:46.229+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:14:46.234+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:14:46.238+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:14:46.242+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:14:46.254+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:14:46.293+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:14:46.293+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:14:46.311+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:14:46.311+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:14:46.342+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.156 seconds
[2024-05-28T07:15:16.447+0000] {processor.py:161} INFO - Started process (PID=778) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:15:16.449+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:15:16.452+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:15:16.451+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:15:16.474+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:15:16.479+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:15:16.483+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:15:16.488+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:15:16.494+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:15:16.510+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:15:16.552+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:15:16.551+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:15:16.572+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:15:16.571+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:15:16.601+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.162 seconds
[2024-05-28T07:15:46.868+0000] {processor.py:161} INFO - Started process (PID=786) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:15:46.870+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:15:46.873+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:15:46.872+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:15:46.892+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:15:46.896+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:15:46.899+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:15:46.903+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:15:46.906+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:15:46.916+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:15:46.947+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:15:46.947+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:15:46.964+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:15:46.964+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:15:46.988+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.129 seconds
[2024-05-28T07:16:17.133+0000] {processor.py:161} INFO - Started process (PID=794) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:16:17.135+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:16:17.138+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:16:17.137+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:16:17.161+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:16:17.165+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:16:17.170+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:16:17.174+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:16:17.178+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:16:17.191+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:16:17.225+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:16:17.225+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:16:17.244+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:16:17.244+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:16:17.284+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.159 seconds
[2024-05-28T07:16:47.566+0000] {processor.py:161} INFO - Started process (PID=802) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:16:47.568+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:16:47.572+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:16:47.572+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:16:47.601+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:16:47.608+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:16:47.613+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:16:47.619+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:16:47.624+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:16:47.642+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:16:47.687+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:16:47.686+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:16:47.711+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:16:47.710+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:16:48.113+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.557 seconds
[2024-05-28T07:17:18.813+0000] {processor.py:161} INFO - Started process (PID=810) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:17:18.815+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:17:18.819+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:17:18.818+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:17:18.845+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:17:18.851+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:17:18.855+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:17:18.862+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:17:18.869+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:17:18.886+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:17:18.936+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:17:18.936+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:17:19.214+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:17:19.214+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:17:19.241+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.437 seconds
[2024-05-28T07:17:50.157+0000] {processor.py:161} INFO - Started process (PID=818) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:17:50.159+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:17:50.162+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:17:50.161+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:17:50.295+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:17:50.302+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:17:50.308+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:17:50.313+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:17:50.319+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:17:50.337+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:17:50.628+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:17:50.627+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:17:50.643+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:17:50.643+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:17:50.668+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.521 seconds
[2024-05-28T07:18:21.577+0000] {processor.py:161} INFO - Started process (PID=826) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:18:21.579+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:18:21.583+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:18:21.582+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:18:21.612+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:18:21.617+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:18:21.623+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:18:21.629+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:18:21.635+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:18:21.653+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:18:21.722+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:18:21.721+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:18:21.762+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:18:21.762+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:18:21.811+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.245 seconds
[2024-05-28T07:18:51.958+0000] {processor.py:161} INFO - Started process (PID=834) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:18:51.959+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:18:51.962+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:18:51.961+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:18:51.984+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:18:51.988+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:18:51.992+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:18:51.996+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:18:52.000+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:18:52.011+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:18:52.049+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:18:52.049+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:18:52.070+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:18:52.070+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:18:52.095+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.146 seconds
[2024-05-28T07:19:22.250+0000] {processor.py:161} INFO - Started process (PID=842) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:19:22.252+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:19:22.255+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:19:22.254+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:19:22.277+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:19:22.282+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:19:22.288+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:19:22.292+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:19:22.296+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:19:22.308+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:19:22.343+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:19:22.343+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:19:22.362+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:19:22.362+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:19:22.390+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.149 seconds
[2024-05-28T07:19:52.637+0000] {processor.py:161} INFO - Started process (PID=850) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:19:52.638+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:19:52.641+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:19:52.641+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:19:52.663+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:19:52.667+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:19:52.670+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:19:52.674+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:19:52.677+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:19:52.687+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:19:52.718+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:19:52.718+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:19:52.736+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:19:52.736+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:19:52.946+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.319 seconds
[2024-05-28T07:20:23.878+0000] {processor.py:161} INFO - Started process (PID=858) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:20:23.879+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:20:23.881+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:20:23.881+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:20:23.899+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:20:23.902+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:20:23.905+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:20:23.908+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:20:23.911+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:20:23.921+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:20:23.950+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:20:23.949+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:20:24.155+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:20:24.155+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:20:24.181+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.310 seconds
[2024-05-28T07:20:54.281+0000] {processor.py:161} INFO - Started process (PID=866) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:20:54.283+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:20:54.287+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:20:54.286+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:20:54.310+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:20:54.314+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:20:54.319+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:20:54.323+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:20:54.327+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:20:54.338+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:20:54.370+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:20:54.370+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:20:54.387+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:20:54.387+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:20:54.410+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.139 seconds
[2024-05-28T07:21:24.586+0000] {processor.py:161} INFO - Started process (PID=874) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:21:24.589+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:21:24.593+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:21:24.593+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:21:24.632+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:21:24.640+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:21:24.646+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:21:24.656+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:21:24.669+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:21:24.693+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:21:24.760+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:21:24.759+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:21:24.791+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:21:24.791+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:21:24.832+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.262 seconds
[2024-05-28T07:21:54.908+0000] {processor.py:161} INFO - Started process (PID=882) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:21:54.910+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:21:54.913+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:21:54.912+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:21:54.936+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:21:54.940+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:21:54.944+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:21:54.948+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:21:54.953+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:21:54.964+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:21:54.996+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:21:54.995+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:21:55.016+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:21:55.016+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:21:55.059+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.158 seconds
[2024-05-28T07:22:25.166+0000] {processor.py:161} INFO - Started process (PID=890) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:22:25.169+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:22:25.173+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:22:25.172+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:22:25.203+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:22:25.208+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:22:25.213+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:22:25.219+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:22:25.224+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:22:25.240+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:22:25.290+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:22:25.290+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:22:25.317+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:22:25.317+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:22:25.355+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.199 seconds
[2024-05-28T07:22:55.438+0000] {processor.py:161} INFO - Started process (PID=898) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:22:55.439+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:22:55.442+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:22:55.442+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:22:55.463+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:22:55.468+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:22:55.474+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:22:55.478+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:22:55.480+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:22:55.492+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:22:55.524+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:22:55.523+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:22:55.740+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:22:55.740+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:22:55.764+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.335 seconds
[2024-05-28T07:23:25.876+0000] {processor.py:161} INFO - Started process (PID=906) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:23:25.877+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:23:25.880+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:23:25.880+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:23:25.908+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:23:25.912+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:23:25.916+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:23:25.922+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:23:25.925+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:23:25.938+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:23:25.974+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:23:25.974+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:23:26.297+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:23:26.297+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:23:26.338+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.473 seconds
[2024-05-28T07:23:57.078+0000] {processor.py:161} INFO - Started process (PID=914) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:23:57.079+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:23:57.081+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:23:57.081+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:23:57.101+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:23:57.104+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:23:57.107+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:23:57.112+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:23:57.116+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:23:57.126+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:23:57.156+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:23:57.155+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:23:57.172+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:23:57.172+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:23:57.234+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.163 seconds
[2024-05-28T07:24:27.329+0000] {processor.py:161} INFO - Started process (PID=922) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:24:27.330+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:24:27.332+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:24:27.332+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:24:27.348+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:24:27.352+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:24:27.355+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:24:27.358+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:24:27.361+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:24:27.370+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:24:27.401+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:24:27.400+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:24:27.416+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:24:27.415+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:24:27.437+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.115 seconds
[2024-05-28T07:24:57.794+0000] {processor.py:161} INFO - Started process (PID=930) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:24:57.796+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:24:57.798+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:24:57.798+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:24:57.818+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:24:57.822+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:24:57.825+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:24:57.829+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:24:57.833+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:24:57.842+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:24:57.870+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:24:57.870+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:24:57.886+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:24:57.886+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:24:57.909+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.121 seconds
[2024-05-28T07:25:28.029+0000] {processor.py:161} INFO - Started process (PID=938) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:25:28.030+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:25:28.033+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:25:28.032+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:25:28.049+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:25:28.052+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:25:28.056+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:25:28.059+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:25:28.063+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:25:28.073+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:25:28.103+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:25:28.102+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:25:28.121+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:25:28.121+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:25:28.333+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.312 seconds
[2024-05-28T07:25:58.404+0000] {processor.py:161} INFO - Started process (PID=946) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:25:58.406+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:25:58.409+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:25:58.408+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:25:58.430+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:25:58.434+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:25:58.439+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:25:58.443+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:25:58.447+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:25:58.458+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:25:58.498+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:25:58.497+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:25:58.788+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:25:58.788+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:25:58.817+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.421 seconds
[2024-05-28T07:26:29.651+0000] {processor.py:161} INFO - Started process (PID=954) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:26:29.653+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:26:29.658+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:26:29.657+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:26:29.688+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:26:29.693+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:26:29.698+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:26:29.705+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:26:29.712+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:26:29.739+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:26:30.234+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:26:30.233+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:26:30.254+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:26:30.254+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:26:30.286+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.650 seconds
[2024-05-28T07:27:00.920+0000] {processor.py:161} INFO - Started process (PID=962) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:27:00.921+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:27:00.924+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:27:00.923+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:27:00.948+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:27:00.953+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:27:00.958+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:27:00.963+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:27:00.972+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:27:00.990+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:27:01.027+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:27:01.026+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:27:01.046+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:27:01.046+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:27:01.079+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.168 seconds
[2024-05-28T07:27:31.288+0000] {processor.py:161} INFO - Started process (PID=970) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:27:31.289+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:27:31.292+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:27:31.292+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:27:31.316+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:27:31.321+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:27:31.325+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:27:31.329+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:27:31.335+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:27:31.348+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:27:31.381+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:27:31.381+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:27:31.399+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:27:31.399+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:27:31.428+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.152 seconds
[2024-05-28T07:28:01.712+0000] {processor.py:161} INFO - Started process (PID=978) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:28:01.714+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:28:01.718+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:28:01.718+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:28:01.743+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:28:01.747+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:28:01.751+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:28:01.755+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:28:01.759+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:28:01.773+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:28:01.811+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:28:01.811+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:28:01.832+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:28:01.831+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:28:01.860+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.157 seconds
[2024-05-28T07:28:31.991+0000] {processor.py:161} INFO - Started process (PID=986) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:28:31.993+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:28:31.996+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:28:31.995+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:28:32.022+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:28:32.025+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:28:32.029+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:28:32.033+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:28:32.038+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:28:32.048+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:28:32.081+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:28:32.081+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:28:32.100+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:28:32.100+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:28:32.714+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.732 seconds
[2024-05-28T07:29:03.272+0000] {processor.py:161} INFO - Started process (PID=994) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:29:03.275+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:29:03.279+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:29:03.278+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:29:03.304+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:29:03.308+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:29:03.311+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:29:03.315+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:29:03.319+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:29:03.331+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:29:03.366+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:29:03.365+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:29:03.633+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:29:03.632+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:29:03.664+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.403 seconds
[2024-05-28T07:29:34.580+0000] {processor.py:161} INFO - Started process (PID=1002) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:29:34.581+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:29:34.586+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:29:34.585+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:29:34.612+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:29:34.618+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:29:34.623+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:29:34.628+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:29:34.633+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:29:34.647+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:29:34.957+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:29:34.956+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:29:34.975+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:29:34.975+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:29:35.039+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.468 seconds
[2024-05-28T07:30:05.119+0000] {processor.py:161} INFO - Started process (PID=1010) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:30:05.121+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:30:05.124+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:30:05.124+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:30:05.148+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:30:05.153+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:30:05.158+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:30:05.161+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:30:05.165+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:30:05.180+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:30:05.216+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:30:05.216+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:30:05.236+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:30:05.236+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:30:05.276+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.166 seconds
[2024-05-28T07:30:35.476+0000] {processor.py:161} INFO - Started process (PID=1018) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:30:35.477+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:30:35.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:30:35.480+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:30:35.506+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:30:35.511+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:30:35.515+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:30:35.520+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:30:35.525+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:30:35.539+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:30:35.580+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:30:35.580+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:30:35.603+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:30:35.603+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:30:35.633+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.166 seconds
[2024-05-28T07:31:05.717+0000] {processor.py:161} INFO - Started process (PID=1026) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:31:05.719+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:31:05.722+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:31:05.721+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:31:05.744+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:31:05.748+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:31:05.753+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:31:05.757+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:31:05.761+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:31:05.776+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:31:05.813+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:31:05.813+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:31:05.831+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:31:05.831+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:31:05.856+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.146 seconds
[2024-05-28T07:31:36.302+0000] {processor.py:161} INFO - Started process (PID=1034) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:31:36.304+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:31:36.313+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:31:36.312+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:31:36.368+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:31:36.373+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:31:36.379+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:31:36.385+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:31:36.393+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:31:36.411+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:31:36.466+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:31:36.465+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:31:36.501+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:31:36.501+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:31:36.938+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.651 seconds
[2024-05-28T07:32:07.320+0000] {processor.py:161} INFO - Started process (PID=1042) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:32:07.322+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:32:07.327+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:32:07.326+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:32:07.353+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:32:07.359+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:32:07.364+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:32:07.369+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:32:07.374+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:32:07.387+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:32:07.438+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:32:07.437+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:32:07.749+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:32:07.749+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:32:07.782+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.474 seconds
[2024-05-28T07:32:38.704+0000] {processor.py:161} INFO - Started process (PID=1050) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:32:38.705+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:32:38.711+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:32:38.711+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:32:38.791+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:32:38.795+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:32:38.800+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:32:38.805+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:32:38.809+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:32:38.826+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:32:39.115+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:32:39.114+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:32:39.130+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:32:39.130+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:32:39.155+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.467 seconds
[2024-05-28T07:33:10.057+0000] {processor.py:161} INFO - Started process (PID=1058) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:33:10.059+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:33:10.062+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:33:10.061+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:33:10.084+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:33:10.088+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:33:10.092+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:33:10.095+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:33:10.100+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:33:10.114+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:33:10.151+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:33:10.150+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:33:10.170+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:33:10.170+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:33:10.196+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.151 seconds
[2024-05-28T07:33:40.371+0000] {processor.py:161} INFO - Started process (PID=1066) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:33:40.373+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:33:40.377+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:33:40.376+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:33:40.404+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:33:40.411+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:33:40.420+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:33:40.427+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:33:40.432+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:33:40.453+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:33:40.557+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:33:40.556+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:33:40.590+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:33:40.590+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:33:40.653+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.296 seconds
[2024-05-28T07:34:11.593+0000] {processor.py:161} INFO - Started process (PID=1075) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:34:11.595+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:34:11.598+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:34:11.597+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:34:11.623+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:34:11.628+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:34:11.633+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:34:11.637+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:34:11.642+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:34:11.654+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:34:11.689+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:34:11.689+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:34:11.711+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:34:11.710+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:34:11.740+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.155 seconds
[2024-05-28T07:34:41.888+0000] {processor.py:161} INFO - Started process (PID=1083) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:34:41.889+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:34:41.892+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:34:41.891+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:34:41.912+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:34:41.915+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:34:41.919+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:34:41.923+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:34:41.926+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:34:41.937+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:34:41.985+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:34:41.984+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:34:42.003+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:34:42.003+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:34:42.220+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.340 seconds
[2024-05-28T07:35:13.261+0000] {processor.py:161} INFO - Started process (PID=1091) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:35:13.262+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:35:13.264+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:35:13.264+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:35:13.282+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:35:13.285+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:35:13.288+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:35:13.291+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:35:13.294+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:35:13.304+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:35:13.332+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:35:13.331+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:35:13.538+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:35:13.537+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:35:13.570+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.316 seconds
[2024-05-28T07:35:44.538+0000] {processor.py:161} INFO - Started process (PID=1099) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:35:44.539+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:35:44.542+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:35:44.542+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:35:44.563+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:35:44.566+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:35:44.571+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:35:44.574+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:35:44.579+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:35:44.593+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:35:44.882+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:35:44.880+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:35:44.909+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:35:44.909+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:35:44.942+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.413 seconds
[2024-05-28T07:36:15.864+0000] {processor.py:161} INFO - Started process (PID=1107) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:36:15.873+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:36:15.878+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:36:15.877+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:36:15.910+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:36:15.916+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:36:15.922+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:36:15.928+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:36:15.934+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:36:15.955+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:36:16.010+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:36:16.009+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:36:16.041+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:36:16.041+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:36:16.074+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.226 seconds
[2024-05-28T07:36:46.435+0000] {processor.py:161} INFO - Started process (PID=1115) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:36:46.438+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:36:46.444+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:36:46.443+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:36:46.474+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:36:46.480+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:36:46.485+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:36:46.491+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:36:46.496+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:36:46.512+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:36:46.559+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:36:46.558+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:36:46.589+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:36:46.589+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:36:46.706+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.284 seconds
[2024-05-28T07:37:16.904+0000] {processor.py:161} INFO - Started process (PID=1124) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:37:16.906+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:37:16.910+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:37:16.909+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:37:16.938+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:37:16.944+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:37:16.949+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:37:16.954+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:37:16.959+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:37:16.972+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:37:17.020+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:37:17.019+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:37:17.047+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:37:17.046+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:37:17.081+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.190 seconds
[2024-05-28T07:37:47.195+0000] {processor.py:161} INFO - Started process (PID=1133) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:37:47.196+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:37:47.199+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:37:47.199+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:37:47.219+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:37:47.223+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:37:47.226+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:37:47.230+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:37:47.233+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:37:47.245+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:37:47.284+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:37:47.283+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:37:47.487+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:37:47.486+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:37:47.510+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.322 seconds
[2024-05-28T07:38:18.452+0000] {processor.py:161} INFO - Started process (PID=1141) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:38:18.454+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:38:18.456+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:38:18.456+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:38:18.475+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:38:18.479+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:38:18.482+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:38:18.485+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:38:18.489+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:38:18.502+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:38:18.532+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:38:18.531+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:38:18.789+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:38:18.789+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:38:18.813+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.369 seconds
[2024-05-28T07:38:49.763+0000] {processor.py:161} INFO - Started process (PID=1149) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:38:49.765+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T07:38:49.769+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:38:49.768+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:38:49.799+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T07:38:49.805+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T07:38:49.812+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T07:38:49.817+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T07:38:49.827+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T07:38:49.854+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T07:38:50.285+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:38:50.284+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T07:38:50.303+0000] {logging_mixin.py:188} INFO - [2024-05-28T07:38:50.303+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T07:38:50.333+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.580 seconds
[2024-05-28T08:19:14.387+0000] {processor.py:161} INFO - Started process (PID=37) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:19:14.404+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:19:14.441+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:19:14.431+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:19:14.689+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:19:14.710+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:19:14.720+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:19:14.736+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:19:14.751+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:19:14.907+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:19:16.321+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:19:16.319+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:19:16.405+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:19:16.405+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:19:19.660+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 5.328 seconds
[2024-05-28T08:19:50.412+0000] {processor.py:161} INFO - Started process (PID=47) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:19:50.414+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:19:50.416+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:19:50.416+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:19:50.438+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:19:50.442+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:19:50.446+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:19:50.450+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:19:50.453+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:19:50.464+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:19:50.499+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:19:50.498+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:19:50.518+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:19:50.518+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:19:50.548+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.144 seconds
[2024-05-28T08:20:20.800+0000] {processor.py:161} INFO - Started process (PID=55) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:20:20.802+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:20:20.805+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:20:20.804+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:20:20.829+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:20:20.834+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:20:20.839+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:20:20.843+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:20:20.847+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:20:20.860+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:20:20.893+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:20:20.893+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:20:20.911+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:20:20.911+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:20:20.937+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.145 seconds
[2024-05-28T08:20:51.407+0000] {processor.py:161} INFO - Started process (PID=63) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:20:51.410+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:20:51.423+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:20:51.422+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:20:51.519+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:20:51.858+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:20:52.094+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:20:52.155+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:20:52.173+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:20:52.208+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:20:52.354+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:20:52.352+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:20:52.432+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:20:52.432+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:20:52.576+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.191 seconds
[2024-05-28T08:21:21.764+0000] {processor.py:161} INFO - Started process (PID=72) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:21:21.766+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:21:21.770+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:21:21.770+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:21:21.816+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:21:21.821+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:21:21.825+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:21:21.830+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:21:21.835+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:21:21.850+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:21:21.886+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:21:21.885+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:21:21.907+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:21:21.907+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:21:21.948+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.195 seconds
[2024-05-28T08:21:52.037+0000] {processor.py:161} INFO - Started process (PID=80) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:21:52.039+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:21:52.044+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:21:52.043+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:21:52.076+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:21:52.082+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:21:52.089+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:21:52.095+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:21:52.101+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:21:52.118+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:21:52.164+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:21:52.163+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:21:52.194+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:21:52.194+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:21:52.245+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.220 seconds
[2024-05-28T08:22:22.954+0000] {processor.py:161} INFO - Started process (PID=88) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:22:22.958+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:22:22.969+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:22:22.968+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:22:23.020+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:22:23.030+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:22:23.044+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:22:23.073+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:22:23.081+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:22:23.138+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:22:23.263+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:22:23.262+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:22:30.310+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:22:30.309+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:22:30.367+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 7.433 seconds
[2024-05-28T08:23:00.488+0000] {processor.py:161} INFO - Started process (PID=103) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:23:00.492+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:23:00.499+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:23:00.498+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:23:00.540+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:23:00.544+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:23:00.547+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:23:00.552+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:23:00.556+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:23:00.604+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:23:00.686+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:23:00.685+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:23:00.725+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:23:00.725+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:23:00.758+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.291 seconds
[2024-05-28T08:23:31.200+0000] {processor.py:161} INFO - Started process (PID=111) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:23:31.203+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:23:31.212+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:23:31.211+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:23:31.243+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:23:31.249+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:23:31.256+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:23:31.260+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:23:31.266+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:23:31.286+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:23:31.335+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:23:31.334+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:23:31.364+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:23:31.364+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:23:31.401+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.228 seconds
[2024-05-28T08:24:01.543+0000] {processor.py:161} INFO - Started process (PID=119) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:24:01.546+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:24:01.551+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:24:01.550+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:24:01.585+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:24:01.590+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:24:01.594+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:24:01.598+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:24:01.603+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:24:01.622+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:24:01.678+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:24:01.678+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:24:01.712+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:24:01.712+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:24:01.759+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.234 seconds
[2024-05-28T08:24:32.037+0000] {processor.py:161} INFO - Started process (PID=127) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:24:32.038+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:24:32.041+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:24:32.041+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:24:32.062+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:24:32.068+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:24:32.072+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:24:32.077+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:24:32.081+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:24:32.093+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:24:32.125+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:24:32.124+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:24:32.143+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:24:32.143+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:24:33.939+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.912 seconds
[2024-05-28T08:25:04.216+0000] {processor.py:161} INFO - Started process (PID=136) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:25:04.218+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:25:04.220+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:25:04.220+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:25:04.240+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:25:04.244+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:25:04.247+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:25:04.252+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:25:04.256+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:25:04.266+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:25:04.307+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:25:04.307+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:25:04.681+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:25:04.681+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:25:04.708+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.500 seconds
[2024-05-28T08:25:35.511+0000] {processor.py:161} INFO - Started process (PID=144) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:25:35.512+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:25:35.516+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:25:35.515+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:25:35.539+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:25:35.543+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:25:35.547+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:25:35.553+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:25:35.557+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:25:35.570+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:25:35.609+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:25:35.608+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:25:35.629+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:25:35.629+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:25:35.657+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.154 seconds
[2024-05-28T08:26:06.299+0000] {processor.py:161} INFO - Started process (PID=152) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:26:06.302+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:26:06.307+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:26:06.306+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:26:06.365+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:26:06.370+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:26:06.375+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:26:06.380+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:26:06.386+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:26:06.448+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:26:06.532+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:26:06.531+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:26:06.581+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:26:06.580+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:26:06.632+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.345 seconds
[2024-05-28T08:26:37.526+0000] {processor.py:161} INFO - Started process (PID=160) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:26:37.528+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:26:37.534+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:26:37.533+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:26:37.554+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:26:37.558+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:26:37.561+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:26:37.564+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:26:37.568+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:26:37.581+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:26:37.619+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:26:37.619+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:26:37.644+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:26:37.644+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:26:37.675+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.162 seconds
[2024-05-28T08:27:07.785+0000] {processor.py:161} INFO - Started process (PID=168) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:27:07.786+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:27:07.789+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:27:07.788+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:27:07.808+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:27:07.811+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:27:07.815+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:27:07.819+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:27:07.823+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:27:07.834+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:27:07.864+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:27:07.864+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:27:07.881+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:27:07.881+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:27:07.906+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.128 seconds
[2024-05-28T08:27:38.156+0000] {processor.py:161} INFO - Started process (PID=176) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:27:38.157+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:27:38.161+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:27:38.161+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:27:38.189+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:27:38.194+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:27:38.199+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:27:38.204+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:27:38.208+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:27:38.224+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:27:38.272+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:27:38.271+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:27:38.304+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:27:38.304+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:27:42.681+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 4.535 seconds
[2024-05-28T08:28:13.494+0000] {processor.py:161} INFO - Started process (PID=184) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:28:13.495+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:28:13.500+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:28:13.499+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:28:13.524+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:28:13.527+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:28:13.531+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:28:13.535+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:28:13.539+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:28:13.563+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:28:13.613+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:28:13.612+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:28:13.639+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:28:13.638+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:28:13.676+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.191 seconds
[2024-05-28T08:28:43.772+0000] {processor.py:161} INFO - Started process (PID=192) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:28:43.773+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:28:43.776+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:28:43.776+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:28:43.795+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:28:43.798+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:28:43.802+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:28:43.805+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:28:43.809+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:28:43.820+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:28:43.849+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:28:43.848+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:28:43.865+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:28:43.865+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:28:43.890+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.126 seconds
[2024-05-28T08:29:14.276+0000] {processor.py:161} INFO - Started process (PID=200) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:29:14.277+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:29:14.280+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:29:14.280+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:29:14.301+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:29:14.304+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:29:14.308+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:29:14.311+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:29:14.314+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:29:14.326+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:29:14.356+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:29:14.355+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:29:14.375+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:29:14.374+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:29:14.401+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.132 seconds
[2024-05-28T08:29:44.553+0000] {processor.py:161} INFO - Started process (PID=208) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:29:44.555+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:29:44.559+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:29:44.559+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:29:44.587+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:29:44.592+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:29:44.597+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:29:44.602+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:29:44.607+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:29:44.626+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:29:44.677+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:29:44.676+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:29:44.699+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:29:44.699+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:29:44.740+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.200 seconds
[2024-05-28T08:30:14.841+0000] {processor.py:161} INFO - Started process (PID=216) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:30:14.843+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:30:14.846+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:30:14.845+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:30:14.867+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:30:14.871+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:30:14.875+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:30:14.879+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:30:14.883+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:30:14.897+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:30:14.939+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:30:14.938+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:30:14.967+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:30:14.967+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:30:15.456+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.622 seconds
[2024-05-28T08:30:46.112+0000] {processor.py:161} INFO - Started process (PID=224) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:30:46.114+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:30:46.117+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:30:46.116+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:30:46.141+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:30:46.145+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:30:46.150+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:30:46.155+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:30:46.160+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:30:46.173+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:30:46.208+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:30:46.207+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:30:46.462+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:30:46.462+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:30:46.484+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.381 seconds
[2024-05-28T08:31:16.556+0000] {processor.py:161} INFO - Started process (PID=232) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:31:16.557+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:31:16.561+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:31:16.560+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:31:16.581+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:31:16.586+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:31:16.590+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:31:16.593+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:31:16.598+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:31:16.609+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:31:16.646+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:31:16.645+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:31:16.663+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:31:16.663+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:31:16.689+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.141 seconds
[2024-05-28T08:31:46.782+0000] {processor.py:161} INFO - Started process (PID=240) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:31:46.785+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:31:46.789+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:31:46.788+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:31:46.816+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:31:46.822+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:31:46.828+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:31:46.833+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:31:46.839+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:31:46.853+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:31:46.898+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:31:46.897+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:31:46.922+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:31:46.921+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:31:46.953+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.180 seconds
[2024-05-28T08:32:17.093+0000] {processor.py:161} INFO - Started process (PID=248) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:32:17.094+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:32:17.097+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:32:17.097+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:32:17.122+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:32:17.126+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:32:17.130+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:32:17.134+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:32:17.138+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:32:17.153+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:32:17.186+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:32:17.185+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:32:17.205+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:32:17.205+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:32:17.237+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.153 seconds
[2024-05-28T08:32:47.397+0000] {processor.py:161} INFO - Started process (PID=256) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:32:47.400+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:32:47.404+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:32:47.404+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:32:47.427+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:32:47.432+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:32:47.436+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:32:47.440+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:32:47.443+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:32:47.458+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:32:47.500+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:32:47.499+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:32:47.522+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:32:47.521+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:32:47.551+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.166 seconds
[2024-05-28T08:33:17.809+0000] {processor.py:161} INFO - Started process (PID=265) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:33:17.810+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:33:17.814+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:33:17.813+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:33:17.835+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:33:17.839+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:33:17.843+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:33:17.847+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:33:17.852+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:33:17.864+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:33:17.899+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:33:17.898+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:33:17.921+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:33:17.920+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:33:18.215+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.416 seconds
[2024-05-28T08:33:49.041+0000] {processor.py:161} INFO - Started process (PID=273) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:33:49.042+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:33:49.044+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:33:49.044+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:33:49.062+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:33:49.065+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:33:49.069+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:33:49.072+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:33:49.075+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:33:49.085+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:33:49.112+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:33:49.112+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:33:49.292+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:33:49.292+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:33:49.313+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.279 seconds
[2024-05-28T08:34:19.455+0000] {processor.py:161} INFO - Started process (PID=281) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:34:19.457+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:34:19.459+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:34:19.459+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:34:19.476+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:34:19.479+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:34:19.482+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:34:19.486+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:34:19.489+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:34:19.499+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:34:19.526+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:34:19.526+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:34:19.541+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:34:19.541+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:34:19.563+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.115 seconds
[2024-05-28T08:34:49.669+0000] {processor.py:161} INFO - Started process (PID=289) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:34:49.670+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:34:49.673+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:34:49.673+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:34:49.691+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:34:49.694+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:34:49.697+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:34:49.701+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:34:49.705+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:34:49.717+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:34:49.752+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:34:49.752+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:34:49.770+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:34:49.770+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:34:49.800+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.137 seconds
[2024-05-28T08:35:19.928+0000] {processor.py:161} INFO - Started process (PID=297) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:35:19.930+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:35:19.934+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:35:19.933+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:35:19.957+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:35:19.961+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:35:19.966+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:35:19.970+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:35:19.974+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:35:19.987+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:35:20.016+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:35:20.015+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:35:20.032+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:35:20.032+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:35:20.056+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.141 seconds
[2024-05-28T08:35:50.147+0000] {processor.py:161} INFO - Started process (PID=305) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:35:50.148+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:35:50.152+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:35:50.151+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:35:50.173+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:35:50.176+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:35:50.180+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:35:50.183+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:35:50.188+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:35:50.199+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:35:50.233+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:35:50.232+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:35:50.254+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:35:50.254+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:35:50.285+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.147 seconds
[2024-05-28T08:36:20.397+0000] {processor.py:161} INFO - Started process (PID=313) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:36:20.399+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:36:20.403+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:36:20.403+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:36:20.425+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:36:20.429+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:36:20.433+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:36:20.438+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:36:20.442+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:36:20.455+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:36:20.491+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:36:20.490+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:36:20.754+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:36:20.754+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:36:20.779+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.392 seconds
[2024-05-28T08:36:51.644+0000] {processor.py:161} INFO - Started process (PID=321) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:36:51.646+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:36:51.649+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:36:51.648+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:36:51.672+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:36:51.676+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:36:51.680+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:36:51.684+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:36:51.688+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:36:51.700+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:36:51.735+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:36:51.735+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:36:51.978+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:36:51.978+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:36:52.004+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.368 seconds
[2024-05-28T08:37:22.932+0000] {processor.py:161} INFO - Started process (PID=329) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:37:22.933+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:37:22.938+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:37:22.937+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:37:22.964+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:37:22.968+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:37:22.973+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:37:22.979+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:37:22.983+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:37:22.997+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:37:23.037+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:37:23.037+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:37:23.056+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:37:23.055+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:37:23.080+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.157 seconds
[2024-05-28T08:37:53.383+0000] {processor.py:161} INFO - Started process (PID=337) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:37:53.386+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:37:53.389+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:37:53.389+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:37:53.418+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:37:53.424+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:37:53.430+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:37:53.437+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:37:53.442+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:37:53.460+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:37:53.501+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:37:53.500+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:37:53.525+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:37:53.525+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:37:53.564+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.192 seconds
[2024-05-28T08:38:23.640+0000] {processor.py:161} INFO - Started process (PID=346) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:38:23.641+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:38:23.646+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:38:23.645+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:38:23.671+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:38:23.677+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:38:23.681+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:38:23.685+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:38:23.689+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:38:23.703+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:38:23.739+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:38:23.739+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:38:23.757+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:38:23.757+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:38:23.782+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.154 seconds
[2024-05-28T08:38:53.893+0000] {processor.py:161} INFO - Started process (PID=354) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:38:53.894+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:38:53.898+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:38:53.897+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:38:53.926+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:38:53.930+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:38:53.934+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:38:53.942+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:38:53.947+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:38:53.963+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:38:54.011+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:38:54.010+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:38:54.033+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:38:54.033+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:38:54.066+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.184 seconds
[2024-05-28T08:39:24.254+0000] {processor.py:161} INFO - Started process (PID=362) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:39:24.255+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:39:24.259+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:39:24.258+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:39:24.280+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:39:24.283+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:39:24.287+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:39:24.291+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:39:24.295+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:39:24.308+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:39:24.344+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:39:24.343+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:39:24.657+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:39:24.657+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:39:24.687+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.441 seconds
[2024-05-28T08:39:55.639+0000] {processor.py:161} INFO - Started process (PID=370) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:39:55.641+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:39:55.645+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:39:55.644+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:39:55.678+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:39:55.685+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:39:55.691+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:39:55.697+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:39:55.706+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:39:55.727+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:39:55.784+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:39:55.782+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:39:56.272+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:39:56.271+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:39:56.374+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.751 seconds
[2024-05-28T08:40:26.721+0000] {processor.py:161} INFO - Started process (PID=378) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:40:26.723+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:40:26.727+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:40:26.726+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:40:26.753+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:40:26.760+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:40:26.765+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:40:26.772+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:40:26.778+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:40:26.799+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:40:26.930+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:40:26.928+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:40:26.976+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:40:26.976+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:40:27.017+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.307 seconds
[2024-05-28T08:40:57.116+0000] {processor.py:161} INFO - Started process (PID=386) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:40:57.117+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:40:57.122+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:40:57.122+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:40:57.147+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:40:57.152+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:40:57.156+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:40:57.160+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:40:57.164+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:40:57.178+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:40:57.219+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:40:57.219+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:40:57.243+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:40:57.243+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:40:57.289+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.186 seconds
[2024-05-28T08:41:27.483+0000] {processor.py:161} INFO - Started process (PID=394) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:41:27.486+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:41:27.490+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:41:27.489+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:41:27.510+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:41:27.514+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:41:27.518+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:41:27.523+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:41:27.527+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:41:27.543+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:41:27.581+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:41:27.580+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:41:27.599+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:41:27.599+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:41:27.624+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.150 seconds
[2024-05-28T08:41:57.729+0000] {processor.py:161} INFO - Started process (PID=402) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:41:57.731+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:41:57.735+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:41:57.734+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:41:57.756+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:41:57.760+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:41:57.764+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:41:57.769+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:41:57.773+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:41:57.785+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:41:57.816+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:41:57.815+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:41:57.834+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:41:57.834+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:41:57.863+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.143 seconds
[2024-05-28T08:42:28.045+0000] {processor.py:161} INFO - Started process (PID=410) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:42:28.047+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:42:28.050+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:42:28.049+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:42:28.068+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:42:28.071+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:42:28.074+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:42:28.077+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:42:28.080+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:42:28.091+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:42:28.121+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:42:28.121+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:42:28.926+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:42:28.926+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:42:28.954+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.916 seconds
[2024-05-28T08:42:59.332+0000] {processor.py:161} INFO - Started process (PID=418) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:42:59.333+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:42:59.336+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:42:59.336+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:42:59.354+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:42:59.358+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:42:59.361+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:42:59.365+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:42:59.368+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:42:59.377+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:42:59.405+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:42:59.404+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:42:59.590+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:42:59.590+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:42:59.611+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.285 seconds
[2024-05-28T08:43:13.559+0000] {processor.py:161} INFO - Started process (PID=426) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:43:13.561+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:43:13.567+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:43:13.566+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:43:13.626+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:43:13.632+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:43:13.639+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:43:13.645+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:43:13.654+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:43:13.673+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:43:13.693+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:43:14.111+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:43:14.110+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:43:14.150+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:43:14.149+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:43:14.211+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.665 seconds
[2024-05-28T08:43:44.809+0000] {processor.py:161} INFO - Started process (PID=434) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:43:44.812+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:43:44.816+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:43:44.815+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:43:44.847+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:43:44.851+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:43:44.857+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:43:44.862+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:43:44.866+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:43:44.872+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:43:44.887+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:43:44.941+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:43:44.941+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:43:44.963+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:43:44.962+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:43:44.990+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.191 seconds
[2024-05-28T08:44:15.410+0000] {processor.py:161} INFO - Started process (PID=442) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:15.413+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:44:15.417+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:15.417+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:15.442+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:44:15.445+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:44:15.449+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:44:15.454+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:44:15.457+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:44:15.461+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:44:15.473+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:15.511+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:15.511+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:44:15.532+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:15.532+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:44:15.563+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.163 seconds
[2024-05-28T08:44:26.545+0000] {processor.py:161} INFO - Started process (PID=443) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:26.546+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:44:26.551+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:26.551+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:26.595+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:44:26.601+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:44:26.607+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:44:26.612+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:44:26.618+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:44:26.623+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:44:26.654+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:26.629+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 174, in <module>
    load_fact_table= BigQueryInsertJobOperator(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/google/cloud/operators/bigquery.py", line 2749, in __init__
    super().__init__(**kwargs)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 899, in __init__
    task_group.add(self)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/task_group.py", line 232, in add
    raise DuplicateTaskIdFound(f"{node_type} id '{key}' has already been added to the DAG")
airflow.exceptions.DuplicateTaskIdFound: Task id 'load_dim_product' has already been added to the DAG
[2024-05-28T08:44:26.655+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:26.702+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.173 seconds
[2024-05-28T08:44:27.726+0000] {processor.py:161} INFO - Started process (PID=444) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:27.727+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:44:27.731+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:27.731+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:27.757+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:44:27.761+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:44:27.765+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:44:27.771+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:44:27.777+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:44:27.781+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:44:27.795+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:27.787+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 174, in <module>
    load_fact_table= BigQueryInsertJobOperator(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/google/cloud/operators/bigquery.py", line 2749, in __init__
    super().__init__(**kwargs)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 899, in __init__
    task_group.add(self)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/task_group.py", line 232, in add
    raise DuplicateTaskIdFound(f"{node_type} id '{key}' has already been added to the DAG")
airflow.exceptions.DuplicateTaskIdFound: Task id 'load_dim_product' has already been added to the DAG
[2024-05-28T08:44:27.797+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:27.832+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.117 seconds
[2024-05-28T08:44:58.379+0000] {processor.py:161} INFO - Started process (PID=452) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:58.381+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:44:58.387+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:58.387+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:58.414+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:44:58.418+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:44:58.424+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:44:58.429+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:44:58.433+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:44:58.439+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:44:58.457+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:44:58.445+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 174, in <module>
    load_fact_table= BigQueryInsertJobOperator(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/google/cloud/operators/bigquery.py", line 2749, in __init__
    super().__init__(**kwargs)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 899, in __init__
    task_group.add(self)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/task_group.py", line 232, in add
    raise DuplicateTaskIdFound(f"{node_type} id '{key}' has already been added to the DAG")
airflow.exceptions.DuplicateTaskIdFound: Task id 'load_dim_product' has already been added to the DAG
[2024-05-28T08:44:58.459+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:44:58.497+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.131 seconds
[2024-05-28T08:45:28.801+0000] {processor.py:161} INFO - Started process (PID=460) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:45:28.804+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:45:28.808+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:45:28.808+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:45:28.840+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:45:28.845+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:45:28.849+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:45:28.853+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:45:28.856+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:45:28.860+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:45:28.874+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:45:28.865+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 174, in <module>
    load_fact_table= BigQueryInsertJobOperator(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/google/cloud/operators/bigquery.py", line 2749, in __init__
    super().__init__(**kwargs)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 899, in __init__
    task_group.add(self)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/task_group.py", line 232, in add
    raise DuplicateTaskIdFound(f"{node_type} id '{key}' has already been added to the DAG")
airflow.exceptions.DuplicateTaskIdFound: Task id 'load_dim_product' has already been added to the DAG
[2024-05-28T08:45:28.875+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:45:28.903+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.114 seconds
[2024-05-28T08:45:59.139+0000] {processor.py:161} INFO - Started process (PID=468) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:45:59.145+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:45:59.166+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:45:59.164+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:45:59.233+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:45:59.239+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:45:59.244+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:45:59.249+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:45:59.255+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:45:59.260+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:45:59.286+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:45:59.271+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 174, in <module>
    load_fact_table= BigQueryInsertJobOperator(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/google/cloud/operators/bigquery.py", line 2749, in __init__
    super().__init__(**kwargs)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 899, in __init__
    task_group.add(self)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/task_group.py", line 232, in add
    raise DuplicateTaskIdFound(f"{node_type} id '{key}' has already been added to the DAG")
airflow.exceptions.DuplicateTaskIdFound: Task id 'load_dim_product' has already been added to the DAG
[2024-05-28T08:45:59.288+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:45:59.348+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.241 seconds
[2024-05-28T08:46:29.512+0000] {processor.py:161} INFO - Started process (PID=476) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:46:29.516+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:46:29.518+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:46:29.517+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:46:29.552+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:46:29.557+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:46:29.562+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:46:29.568+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:46:29.573+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:46:29.578+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:46:29.596+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:46:29.584+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 174, in <module>
    load_fact_table= BigQueryInsertJobOperator(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/google/cloud/operators/bigquery.py", line 2749, in __init__
    super().__init__(**kwargs)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 484, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 899, in __init__
    task_group.add(self)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/task_group.py", line 232, in add
    raise DuplicateTaskIdFound(f"{node_type} id '{key}' has already been added to the DAG")
airflow.exceptions.DuplicateTaskIdFound: Task id 'load_dim_product' has already been added to the DAG
[2024-05-28T08:46:29.598+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:46:29.631+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.130 seconds
[2024-05-28T08:46:35.667+0000] {processor.py:161} INFO - Started process (PID=478) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:46:35.670+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:46:35.673+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:46:35.672+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:46:35.728+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:46:35.733+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:46:35.738+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:46:35.744+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:46:35.748+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:46:35.751+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:46:35.898+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:46:44.201+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:46:44.200+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:46:44.227+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:46:44.226+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:46:44.295+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 8.642 seconds
[2024-05-28T08:47:14.538+0000] {processor.py:161} INFO - Started process (PID=493) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:47:14.540+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:47:14.542+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:47:14.541+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:47:14.678+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:47:14.686+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:47:14.693+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:47:14.701+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:47:14.710+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:47:14.718+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:47:14.843+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:47:15.423+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:47:15.422+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:47:15.590+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:47:15.589+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:47:15.699+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.172 seconds
[2024-05-28T08:47:47.778+0000] {processor.py:161} INFO - Started process (PID=508) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:47:47.880+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:47:47.942+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:47:47.920+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:47:48.372+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:47:48.414+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:47:48.442+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:47:48.542+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:47:48.638+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:47:48.711+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:47:49.127+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:47:49.512+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:47:49.510+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:47:49.780+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:47:49.780+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:47:49.962+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.630 seconds
[2024-05-28T08:48:20.120+0000] {processor.py:161} INFO - Started process (PID=516) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:48:20.122+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:48:20.124+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:48:20.123+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:48:20.167+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:48:20.172+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:48:20.178+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:48:20.184+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:48:20.189+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:48:20.194+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:48:20.233+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:48:20.305+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:48:20.305+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:48:24.592+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:48:24.592+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:48:24.635+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 4.526 seconds
[2024-05-28T08:48:55.648+0000] {processor.py:161} INFO - Started process (PID=524) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:48:55.657+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:48:55.662+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:48:55.660+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:48:55.763+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:48:55.774+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:48:55.788+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:48:55.796+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:48:55.805+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:48:55.818+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:48:55.910+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:48:59.590+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:48:59.589+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:48:59.650+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:48:59.650+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:48:59.734+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 4.131 seconds
[2024-05-28T08:49:30.144+0000] {processor.py:161} INFO - Started process (PID=532) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:49:30.146+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:49:30.148+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:49:30.148+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:49:30.183+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:49:30.190+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:49:30.195+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:49:30.200+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:49:30.208+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:49:30.212+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:49:30.229+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:49:30.280+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:49:30.279+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:49:30.308+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:49:30.307+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:49:30.339+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.208 seconds
[2024-05-28T08:50:00.501+0000] {processor.py:161} INFO - Started process (PID=541) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:00.503+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:50:00.507+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:50:00.506+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:00.548+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:50:00.553+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:50:00.557+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:50:00.562+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:50:00.566+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:50:00.571+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:50:00.584+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:00.623+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:50:00.622+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:50:00.644+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:50:00.643+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:50:00.676+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.194 seconds
[2024-05-28T08:50:13.744+0000] {processor.py:161} INFO - Started process (PID=549) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:13.746+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:50:13.748+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:50:13.747+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:13.802+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:50:13.806+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:50:13.810+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:50:13.815+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:50:13.820+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:50:13.825+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:50:13.837+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:50:13.828+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 80, in <module>
    RFMTable=read_sql_file('/opt/airflow/dags/SQL_Queries/RFM_table_n.sql')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/RFM_table_n.sql'
[2024-05-28T08:50:13.840+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:13.878+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.146 seconds
[2024-05-28T08:50:44.007+0000] {processor.py:161} INFO - Started process (PID=557) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:44.009+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:50:44.011+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:50:44.010+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:44.038+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:50:44.043+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:50:44.048+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:50:44.052+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:50:44.056+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:50:44.059+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:50:44.066+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:50:44.062+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 80, in <module>
    RFMTable=read_sql_file('/opt/airflow/dags/SQL_Queries/RFM_table_n.sql')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/RFM_table_n.sql'
[2024-05-28T08:50:44.068+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:50:44.176+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.177 seconds
[2024-05-28T08:51:14.312+0000] {processor.py:161} INFO - Started process (PID=565) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:14.314+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:51:14.315+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:51:14.315+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:14.339+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:51:14.344+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:51:14.348+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:51:14.353+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:51:14.357+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:51:14.361+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:51:14.372+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:51:14.364+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 80, in <module>
    RFMTable=read_sql_file('/opt/airflow/dags/SQL_Queries/RFM_table_n.sql')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/RFM_table_n.sql'
[2024-05-28T08:51:14.374+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:14.398+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.094 seconds
[2024-05-28T08:51:44.679+0000] {processor.py:161} INFO - Started process (PID=573) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:44.681+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:51:44.682+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:51:44.682+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:44.710+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:51:44.713+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:51:44.716+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:51:44.721+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:51:44.725+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:51:44.730+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:51:44.738+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:51:44.732+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 80, in <module>
    RFMTable=read_sql_file('/opt/airflow/dags/SQL_Queries/RFM_table_n.sql')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/RFM_table_n.sql'
[2024-05-28T08:51:44.740+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:44.766+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.096 seconds
[2024-05-28T08:51:48.839+0000] {processor.py:161} INFO - Started process (PID=574) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:48.841+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:51:48.843+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:51:48.842+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:48.891+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:51:48.895+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:51:48.899+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:51:48.903+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:51:48.908+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:51:48.912+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:51:48.920+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:51:48.914+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 80, in <module>
    RFMTable=read_sql_file('/opt/airflow/dags/SQL_Queries/RFM_table_n.sql')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/RFM_table_n.sql'
[2024-05-28T08:51:48.922+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:48.947+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.116 seconds
[2024-05-28T08:51:54.943+0000] {processor.py:161} INFO - Started process (PID=575) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:54.946+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:51:54.948+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:51:54.948+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:54.998+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:51:55.003+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:51:55.010+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:51:55.015+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:51:55.019+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:51:55.027+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:51:55.035+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:51:55.029+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 80, in <module>
    RFMTable=read_sql_file('/opt/airflow/dags/SQL_Queries/RFM_table_n.sql')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/RFM_table_n.sql'
[2024-05-28T08:51:55.038+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:51:55.940+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.009 seconds
[2024-05-28T08:52:26.474+0000] {processor.py:161} INFO - Started process (PID=583) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:52:26.476+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:52:26.478+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:52:26.477+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:52:26.520+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:52:26.529+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:52:26.539+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:52:26.548+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:52:26.556+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:52:26.563+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:52:26.573+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:52:26.596+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:52:27.084+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:52:27.084+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:52:27.109+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:52:27.109+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:52:27.186+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.726 seconds
[2024-05-28T08:52:57.375+0000] {processor.py:161} INFO - Started process (PID=597) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:52:57.379+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:52:57.382+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:52:57.381+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:52:57.456+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:52:57.464+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:52:57.476+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:52:57.491+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:52:57.499+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:52:57.511+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:52:57.519+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:52:57.558+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:52:57.642+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:52:57.641+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:52:57.698+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:52:57.697+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:52:57.817+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.461 seconds
[2024-05-28T08:53:28.641+0000] {processor.py:161} INFO - Started process (PID=605) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:53:28.645+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:53:28.649+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:53:28.647+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:53:28.728+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:53:28.739+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:53:28.749+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:53:28.757+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:53:28.764+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:53:28.774+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:53:28.780+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:53:28.849+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:53:28.940+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:53:28.940+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:53:28.990+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:53:28.990+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:53:29.033+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.416 seconds
[2024-05-28T08:54:00.067+0000] {processor.py:161} INFO - Started process (PID=613) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:00.069+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:54:00.074+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:00.073+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:00.107+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:54:00.112+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:54:00.117+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:54:00.123+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:54:00.128+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:54:00.134+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:54:00.139+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:54:00.158+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:00.213+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:00.213+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:54:00.241+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:00.241+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:54:00.277+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.231 seconds
[2024-05-28T08:54:02.381+0000] {processor.py:161} INFO - Started process (PID=614) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:02.382+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:54:02.384+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:02.384+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:02.427+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:54:02.433+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:54:02.438+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:54:02.443+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:54:02.448+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:54:02.452+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:54:02.457+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:54:02.473+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:02.738+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:02.737+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:54:02.754+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:02.754+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:54:02.803+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.431 seconds
[2024-05-28T08:54:05.468+0000] {processor.py:161} INFO - Started process (PID=615) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:05.470+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:54:05.473+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:05.472+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:05.530+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:54:05.538+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:54:05.545+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:54:05.550+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:54:05.555+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:54:05.562+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:54:05.567+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:54:05.587+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:05.611+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:05.611+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:54:05.638+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:05.637+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:54:05.708+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.254 seconds
[2024-05-28T08:54:36.470+0000] {processor.py:161} INFO - Started process (PID=628) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:36.476+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:54:36.479+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:36.479+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:36.540+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:54:36.552+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:54:36.574+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:54:36.584+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:54:36.598+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:54:36.615+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:54:36.630+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:54:36.652+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:54:36.713+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:36.713+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:54:36.746+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:54:36.745+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:54:36.796+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.344 seconds
[2024-05-28T08:55:07.229+0000] {processor.py:161} INFO - Started process (PID=636) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:55:07.231+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:55:07.234+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:55:07.233+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:55:07.305+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:55:07.311+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:55:07.319+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:55:07.327+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:55:07.333+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:55:07.339+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:55:07.345+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:55:07.381+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:55:07.454+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:55:07.453+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:55:07.499+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:55:07.499+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:55:07.544+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.328 seconds
[2024-05-28T08:55:38.615+0000] {processor.py:161} INFO - Started process (PID=644) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:55:38.618+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:55:38.622+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:55:38.620+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:55:38.695+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:55:38.702+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:55:38.710+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:55:38.719+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:55:38.730+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:55:38.741+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:55:38.767+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:55:38.819+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:55:38.906+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:55:38.905+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:55:38.957+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:55:38.956+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:55:39.025+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.432 seconds
[2024-05-28T08:56:09.922+0000] {processor.py:161} INFO - Started process (PID=652) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:56:09.925+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:56:09.927+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:56:09.926+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:56:09.959+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:56:09.963+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:56:09.968+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:56:09.972+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:56:09.978+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:56:09.982+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:56:09.987+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:56:10.017+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:56:10.071+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:56:10.071+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:56:10.107+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:56:10.106+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:56:10.146+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.236 seconds
[2024-05-28T08:56:40.345+0000] {processor.py:161} INFO - Started process (PID=660) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:56:40.347+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:56:40.349+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:56:40.348+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:56:40.375+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:56:40.380+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:56:40.385+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:56:40.392+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:56:40.396+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:56:40.401+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:56:40.406+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `marine-catalyst-419003.transformed.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `marine-catalyst-419003.demo.orders` AS orders
  JOIN
    `marine-catalyst-419003.transformed.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `marine-catalyst-419003.transformed.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:56:40.424+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:56:40.467+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:56:40.466+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:56:40.511+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:56:40.510+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:56:40.563+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.235 seconds
[2024-05-28T08:57:10.736+0000] {processor.py:161} INFO - Started process (PID=668) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:57:10.738+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:57:10.740+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:57:10.739+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:57:10.771+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:57:10.779+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:57:10.784+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:57:10.788+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:57:10.795+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:57:10.801+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:57:10.809+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:57:10.836+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:57:11.569+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:57:11.568+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:57:11.612+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:57:11.611+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:57:11.684+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.959 seconds
[2024-05-28T08:57:42.727+0000] {processor.py:161} INFO - Started process (PID=682) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:57:42.741+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:57:42.758+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:57:42.748+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:57:42.949+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:57:42.956+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:57:42.963+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:57:42.970+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:57:42.979+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:57:42.987+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:57:42.998+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:57:43.189+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:57:43.432+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:57:43.431+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:57:43.587+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:57:43.586+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:57:43.804+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.232 seconds
[2024-05-28T08:58:14.106+0000] {processor.py:161} INFO - Started process (PID=691) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:58:14.109+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:58:14.111+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:58:14.111+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:58:14.149+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:58:14.155+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:58:14.162+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:58:14.169+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:58:14.176+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:58:14.182+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:58:14.187+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:58:14.206+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:58:14.262+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:58:14.261+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:58:14.300+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:58:14.299+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:58:14.373+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.280 seconds
[2024-05-28T08:58:44.489+0000] {processor.py:161} INFO - Started process (PID=699) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:58:44.493+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:58:44.495+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:58:44.495+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:58:44.537+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:58:44.546+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:58:44.557+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:58:44.566+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:58:44.574+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:58:44.582+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:58:44.589+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:58:44.610+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:58:44.666+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:58:44.665+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:58:44.700+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:58:44.699+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:58:44.741+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.263 seconds
[2024-05-28T08:59:14.833+0000] {processor.py:161} INFO - Started process (PID=707) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:59:14.836+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:59:14.839+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:59:14.838+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:59:14.884+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:59:14.892+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:59:14.899+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:59:14.908+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:59:14.916+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:59:14.925+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:59:14.933+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:59:14.968+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:59:15.047+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:59:15.045+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:59:15.078+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:59:15.078+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:59:15.114+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.293 seconds
[2024-05-28T08:59:32.337+0000] {processor.py:161} INFO - Started process (PID=715) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:59:32.347+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T08:59:32.350+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:59:32.349+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:59:32.458+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T08:59:32.466+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T08:59:32.481+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T08:59:32.500+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T08:59:32.510+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T08:59:32.518+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T08:59:32.530+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:59:32.537+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T08:59:32.574+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T08:59:32.674+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:59:32.674+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T08:59:32.730+0000] {logging_mixin.py:188} INFO - [2024-05-28T08:59:32.729+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T08:59:32.837+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.525 seconds
[2024-05-28T09:00:03.650+0000] {processor.py:161} INFO - Started process (PID=723) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:00:03.662+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:00:03.665+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:00:03.664+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:00:03.873+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:00:03.883+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:00:03.907+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:00:03.952+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:00:03.984+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:00:04.009+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:00:04.017+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:00:04.051+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:00:04.086+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:00:04.184+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:00:04.183+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:00:04.236+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:00:04.235+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:00:04.301+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.676 seconds
[2024-05-28T09:00:34.646+0000] {processor.py:161} INFO - Started process (PID=731) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:00:34.648+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:00:34.650+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:00:34.649+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:00:34.684+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:00:34.689+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:00:34.694+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:00:34.700+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:00:34.705+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:00:34.710+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:00:34.714+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:00:34.718+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:00:34.734+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:00:34.778+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:00:34.777+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:00:34.803+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:00:34.802+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:00:34.868+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.234 seconds
[2024-05-28T09:01:05.124+0000] {processor.py:161} INFO - Started process (PID=739) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:05.135+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:01:05.140+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:01:05.139+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:05.184+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:01:05.191+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:01:05.198+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:01:05.203+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:01:05.210+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:01:05.216+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:01:05.222+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:01:05.229+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:01:05.248+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:05.324+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:01:05.323+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:01:05.360+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:01:05.360+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:01:05.409+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.316 seconds
[2024-05-28T09:01:35.530+0000] {processor.py:161} INFO - Started process (PID=747) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:35.531+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:01:35.533+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:01:35.532+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:35.560+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:01:35.564+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:01:35.568+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:01:35.572+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:01:35.575+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:01:35.579+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:01:35.583+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:01:35.587+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:01:35.605+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:35.651+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:01:35.651+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:01:35.679+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:01:35.679+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:01:35.709+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.191 seconds
[2024-05-28T09:01:37.799+0000] {processor.py:161} INFO - Started process (PID=748) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:37.800+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:01:37.802+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:01:37.801+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:37.843+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:01:37.848+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:01:37.852+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:01:37.858+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:01:37.862+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:01:37.865+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:01:37.868+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:01:37.888+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:01:37.871+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 81, in <module>
    SaleTable = read_sql_file('/opt/airflow/dags/SQL_Queries/Sale_table.sql')
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/Sale_table.sql'
[2024-05-28T09:01:37.890+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:01:37.945+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.153 seconds
[2024-05-28T09:02:02.213+0000] {processor.py:161} INFO - Started process (PID=756) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:02.214+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:02:02.216+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:02.215+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:02.264+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:02:02.270+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:02:02.278+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:02:02.283+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:02:02.288+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:02:02.293+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:02:02.298+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:02:02.301+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:02:02.317+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:02.307+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 215, in <module>
    "query":SaleTable22 ,
            ^^^^^^^^^^^
NameError: name 'SaleTable22' is not defined. Did you mean: 'SaleTable'?
[2024-05-28T09:02:02.321+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:02.349+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.145 seconds
[2024-05-28T09:02:32.519+0000] {processor.py:161} INFO - Started process (PID=764) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:32.521+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:02:32.522+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:32.522+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:32.555+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:02:32.560+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:02:32.564+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:02:32.570+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:02:32.574+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:02:32.580+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:02:32.584+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:02:32.589+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:02:32.603+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:32.595+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 215, in <module>
    "query":SaleTable22 ,
            ^^^^^^^^^^^
NameError: name 'SaleTable22' is not defined. Did you mean: 'SaleTable'?
[2024-05-28T09:02:32.607+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:32.632+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.122 seconds
[2024-05-28T09:02:37.672+0000] {processor.py:161} INFO - Started process (PID=765) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:37.675+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:02:37.677+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:37.676+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:37.727+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:02:37.733+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:02:37.738+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:02:37.744+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:02:37.749+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:02:37.753+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:02:37.758+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:02:37.763+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:02:37.776+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:38.310+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:38.310+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:02:38.327+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:38.327+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:02:38.379+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.719 seconds
[2024-05-28T09:02:43.855+0000] {processor.py:161} INFO - Started process (PID=766) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:43.857+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:02:43.859+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:43.859+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:43.919+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:02:43.925+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:02:43.930+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:02:43.934+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:02:43.940+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:02:43.948+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:02:43.954+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:02:43.961+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:02:44.002+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:02:44.041+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:44.041+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:02:44.108+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:02:44.108+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:02:44.167+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.335 seconds
[2024-05-28T09:03:15.223+0000] {processor.py:161} INFO - Started process (PID=778) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:03:15.226+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:03:15.235+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:03:15.233+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:03:15.292+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:03:15.301+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:03:15.309+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:03:15.317+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:03:15.328+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:03:15.337+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:03:15.346+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:03:15.357+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:03:15.391+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:03:15.618+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:03:15.618+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:03:15.635+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:03:15.635+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:03:15.671+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.475 seconds
[2024-05-28T09:03:47.342+0000] {processor.py:161} INFO - Started process (PID=793) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:03:47.354+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:03:47.405+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:03:47.375+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:03:48.104+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:03:48.120+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:03:48.164+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:03:48.185+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:03:48.197+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:03:48.214+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:03:48.241+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:03:48.250+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:03:48.960+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:03:49.405+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:03:49.404+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:03:49.566+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:03:49.563+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:03:49.720+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.876 seconds
[2024-05-28T09:04:20.416+0000] {processor.py:161} INFO - Started process (PID=801) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:04:20.420+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:04:20.423+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:04:20.422+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:04:20.468+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:04:20.476+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:04:20.485+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:04:20.493+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:04:20.502+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:04:20.510+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:04:20.517+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:04:20.524+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:04:20.558+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:04:20.680+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:04:20.679+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:04:20.746+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:04:20.746+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:04:20.802+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.405 seconds
[2024-05-28T09:04:51.836+0000] {processor.py:161} INFO - Started process (PID=815) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:04:51.839+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:04:51.844+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:04:51.842+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:04:51.887+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:04:51.896+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:04:51.904+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:04:51.915+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:04:51.937+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:04:51.950+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:04:51.967+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:04:51.981+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:04:52.009+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:04:52.157+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:04:52.156+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:04:52.198+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:04:52.197+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:04:52.249+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.431 seconds
[2024-05-28T09:05:23.300+0000] {processor.py:161} INFO - Started process (PID=829) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:05:23.304+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:05:23.308+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:05:23.306+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:05:23.352+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:05:23.357+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:05:23.362+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:05:23.367+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:05:23.373+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:05:23.380+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:05:23.387+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:05:23.394+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:05:23.422+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:05:23.498+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:05:23.498+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:05:23.535+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:05:23.535+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:05:23.575+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.309 seconds
[2024-05-28T09:05:53.775+0000] {processor.py:161} INFO - Started process (PID=837) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:05:53.781+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:05:53.786+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:05:53.784+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:05:53.856+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:05:53.865+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:05:53.872+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:05:53.881+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:05:53.888+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:05:53.898+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:05:53.909+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:05:53.916+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:05:53.952+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:05:54.053+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:05:54.052+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:05:54.106+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:05:54.105+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:05:54.162+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.441 seconds
[2024-05-28T09:06:24.962+0000] {processor.py:161} INFO - Started process (PID=845) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:06:24.963+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:06:24.965+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:06:24.964+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:06:24.993+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:06:24.998+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:06:25.002+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:06:25.007+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:06:25.011+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:06:25.015+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:06:25.019+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:06:25.023+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:06:25.039+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:06:25.099+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:06:25.098+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:06:25.131+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:06:25.130+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:06:25.166+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.216 seconds
[2024-05-28T09:06:55.356+0000] {processor.py:161} INFO - Started process (PID=853) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:06:55.358+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:06:55.360+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:06:55.359+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:06:55.404+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:06:55.417+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:06:55.428+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:06:55.439+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:06:55.448+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:06:55.458+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:06:55.469+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:06:55.478+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:06:55.493+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:06:55.551+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:06:55.551+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:06:55.577+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:06:55.577+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:06:55.611+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.273 seconds
[2024-05-28T09:07:25.775+0000] {processor.py:161} INFO - Started process (PID=861) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:07:25.777+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:07:25.778+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:07:25.778+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:07:25.814+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:07:25.819+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:07:25.824+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:07:25.829+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:07:25.833+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:07:25.837+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:07:25.841+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:07:25.845+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:07:25.857+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:07:25.916+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:07:25.915+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:07:25.942+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:07:25.941+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:07:25.978+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.212 seconds
[2024-05-28T09:07:56.133+0000] {processor.py:161} INFO - Started process (PID=869) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:07:56.135+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:07:56.138+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:07:56.137+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:07:56.178+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:07:56.185+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:07:56.192+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:07:56.199+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:07:56.205+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:07:56.213+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:07:56.219+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:07:56.226+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:07:56.249+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:07:56.290+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:07:56.290+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:07:56.310+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:07:56.310+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:07:56.343+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.223 seconds
[2024-05-28T09:08:26.461+0000] {processor.py:161} INFO - Started process (PID=877) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:08:26.463+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:08:26.465+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:08:26.464+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:08:26.491+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:08:26.496+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:08:26.500+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:08:26.504+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:08:26.508+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:08:26.512+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:08:26.516+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:08:26.521+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:08:26.538+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:08:26.575+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:08:26.574+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:08:26.598+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:08:26.598+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:08:26.634+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.183 seconds
[2024-05-28T09:08:56.774+0000] {processor.py:161} INFO - Started process (PID=885) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:08:56.776+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:08:56.778+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:08:56.777+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:08:56.805+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:08:56.811+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:08:56.817+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:08:56.822+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:08:56.828+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:08:56.835+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:08:56.840+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:08:56.847+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:08:56.866+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:08:56.904+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:08:56.903+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:08:56.922+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:08:56.922+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:08:56.953+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.188 seconds
[2024-05-28T09:09:27.210+0000] {processor.py:161} INFO - Started process (PID=893) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:09:27.211+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:09:27.213+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:09:27.212+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:09:27.237+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:09:27.243+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:09:27.247+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:09:27.250+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:09:27.254+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:09:27.259+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:09:27.263+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:09:27.267+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:09:27.285+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:09:27.319+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:09:27.319+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:09:27.336+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:09:27.336+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:09:27.362+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.161 seconds
[2024-05-28T09:09:57.610+0000] {processor.py:161} INFO - Started process (PID=901) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:09:57.612+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:09:57.614+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:09:57.614+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:09:57.667+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:09:57.676+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:09:57.685+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:09:57.693+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:09:57.702+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:09:57.710+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:09:57.716+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:09:57.725+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:09:57.746+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:09:57.790+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:09:57.790+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:09:57.811+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:09:57.810+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:09:57.841+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.250 seconds
[2024-05-28T09:10:27.988+0000] {processor.py:161} INFO - Started process (PID=909) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:10:27.990+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:10:27.992+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:10:27.991+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:10:28.043+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:10:28.047+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:10:28.053+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:10:28.059+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:10:28.066+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:10:28.072+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:10:28.077+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:10:28.086+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:10:28.117+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:10:28.187+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:10:28.187+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:10:28.223+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:10:28.222+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:10:28.267+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.291 seconds
[2024-05-28T09:10:58.349+0000] {processor.py:161} INFO - Started process (PID=917) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:10:58.351+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:10:58.352+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:10:58.352+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:10:58.381+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:10:58.386+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:10:58.392+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:10:58.396+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:10:58.402+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:10:58.407+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:10:58.412+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:10:58.417+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.order_details`
GROUP BY 
    orderID;
[2024-05-28T09:10:58.434+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:10:58.469+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:10:58.469+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:10:58.486+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:10:58.486+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:10:58.512+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.175 seconds
[2024-05-28T09:11:19.698+0000] {processor.py:161} INFO - Started process (PID=919) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:11:19.700+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:11:19.703+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:11:19.702+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:11:19.762+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:11:19.769+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:11:19.776+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:11:19.783+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:11:19.792+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:11:19.800+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:11:19.809+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:11:19.831+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:11:19.854+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:11:20.461+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:11:20.460+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:11:20.501+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:11:20.501+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:11:20.638+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.954 seconds
[2024-05-28T09:11:51.554+0000] {processor.py:161} INFO - Started process (PID=933) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:11:51.564+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:11:51.576+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:11:51.570+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:11:51.708+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:11:51.713+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:11:51.720+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:11:51.734+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:11:51.741+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:11:51.749+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:11:51.757+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:11:51.767+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:11:51.942+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:11:52.333+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:11:52.332+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:11:52.519+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:11:52.519+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:11:52.642+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.210 seconds
[2024-05-28T09:12:23.177+0000] {processor.py:161} INFO - Started process (PID=941) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:12:23.180+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:12:23.183+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:12:23.182+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:12:23.243+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:12:23.252+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:12:23.260+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:12:23.273+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:12:23.290+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:12:23.302+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:12:23.310+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:12:23.318+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:12:23.380+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:12:23.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:12:23.479+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:12:23.519+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:12:23.518+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:12:23.561+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.408 seconds
[2024-05-28T09:12:53.815+0000] {processor.py:161} INFO - Started process (PID=949) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:12:53.816+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:12:53.818+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:12:53.817+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:12:53.844+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:12:53.848+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:12:53.853+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:12:53.857+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:12:53.862+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:12:53.867+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:12:53.871+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:12:53.877+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:12:53.891+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:12:53.927+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:12:53.927+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:12:53.947+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:12:53.947+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:12:53.975+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.168 seconds
[2024-05-28T09:13:24.194+0000] {processor.py:161} INFO - Started process (PID=957) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:13:24.203+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:13:24.208+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:13:24.206+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:13:24.256+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:13:24.263+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:13:24.268+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:13:24.275+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:13:24.281+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:13:24.287+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:13:24.294+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:13:24.300+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:13:24.333+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:13:24.444+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:13:24.443+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:13:24.478+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:13:24.477+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:13:24.533+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.356 seconds
[2024-05-28T09:13:54.863+0000] {processor.py:161} INFO - Started process (PID=965) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:13:54.865+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:13:54.868+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:13:54.867+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:13:54.906+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:13:54.911+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:13:54.917+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:13:54.923+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:13:54.932+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:13:54.938+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:13:54.947+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:13:54.952+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:13:54.980+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:13:55.030+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:13:55.030+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:13:55.050+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:13:55.050+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:13:55.082+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.233 seconds
[2024-05-28T09:14:25.346+0000] {processor.py:161} INFO - Started process (PID=973) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:14:25.350+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:14:25.353+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:14:25.352+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:14:25.402+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:14:25.408+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:14:25.413+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:14:25.418+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:14:25.423+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:14:25.429+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:14:25.433+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:14:25.438+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:14:25.457+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:14:25.497+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:14:25.497+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:14:25.516+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:14:25.516+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:14:25.544+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.230 seconds
[2024-05-28T09:14:55.611+0000] {processor.py:161} INFO - Started process (PID=982) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:14:55.612+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:14:55.614+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:14:55.613+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:14:55.633+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:14:55.636+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:14:55.639+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:14:55.643+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:14:55.647+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:14:55.650+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:14:55.654+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:14:55.658+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:14:55.668+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:14:55.699+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:14:55.699+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:14:55.715+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:14:55.715+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:14:55.743+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.140 seconds
[2024-05-28T09:15:25.830+0000] {processor.py:161} INFO - Started process (PID=990) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:15:25.831+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:15:25.833+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:15:25.833+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:15:25.858+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:15:25.862+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:15:25.866+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:15:25.871+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:15:25.876+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:15:25.880+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:15:25.884+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:15:25.888+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:15:25.902+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:15:25.936+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:15:25.936+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:15:25.955+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:15:25.955+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:15:25.983+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.162 seconds
[2024-05-28T09:15:56.102+0000] {processor.py:161} INFO - Started process (PID=999) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:15:56.103+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:15:56.105+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:15:56.104+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:15:56.143+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:15:56.149+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:15:56.156+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:15:56.162+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:15:56.169+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:15:56.173+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:15:56.179+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:15:56.183+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:15:56.204+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:15:56.268+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:15:56.267+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:15:56.303+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:15:56.302+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:15:56.352+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.260 seconds
[2024-05-28T09:16:26.485+0000] {processor.py:161} INFO - Started process (PID=1007) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:16:26.487+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:16:26.488+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:16:26.488+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:16:26.515+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:16:26.519+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:16:26.523+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:16:26.529+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:16:26.535+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:16:26.540+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:16:26.544+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:16:26.548+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:16:26.561+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:16:26.593+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:16:26.592+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:16:26.609+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:16:26.609+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:16:26.633+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.159 seconds
[2024-05-28T09:16:56.766+0000] {processor.py:161} INFO - Started process (PID=1015) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:16:56.767+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:16:56.769+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:16:56.768+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:16:56.796+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:16:56.801+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:16:56.805+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:16:56.810+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:16:56.815+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:16:56.820+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:16:56.825+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:16:56.828+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:16:56.841+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:16:56.875+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:16:56.875+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:16:56.892+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:16:56.891+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:16:56.916+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.158 seconds
[2024-05-28T09:17:27.042+0000] {processor.py:161} INFO - Started process (PID=1023) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:17:27.045+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:17:27.047+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:17:27.046+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:17:27.086+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:17:27.092+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:17:27.100+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:17:27.108+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:17:27.116+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:17:27.121+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:17:27.129+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:17:27.135+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:17:27.155+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:17:27.193+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:17:27.193+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:17:27.210+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:17:27.210+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:17:27.241+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.211 seconds
[2024-05-28T09:17:57.396+0000] {processor.py:161} INFO - Started process (PID=1031) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:17:57.399+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:17:57.402+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:17:57.401+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:17:57.444+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:17:57.450+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:17:57.456+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:17:57.463+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:17:57.470+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:17:57.477+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:17:57.481+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:17:57.485+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:17:57.504+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:17:57.573+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:17:57.572+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:17:57.600+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:17:57.600+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:17:57.649+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.270 seconds
[2024-05-28T09:18:27.793+0000] {processor.py:161} INFO - Started process (PID=1040) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:18:27.795+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:18:27.797+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:18:27.796+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:18:27.834+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:18:27.844+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:18:27.852+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:18:27.862+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:18:27.870+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:18:27.883+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:18:27.890+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:18:27.902+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:18:27.944+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:18:27.995+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:18:27.995+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:18:28.016+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:18:28.016+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:18:28.118+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.339 seconds
[2024-05-28T09:18:58.184+0000] {processor.py:161} INFO - Started process (PID=1054) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:18:58.186+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:18:58.188+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:18:58.187+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:18:58.250+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:18:58.258+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:18:58.265+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:18:58.270+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:18:58.276+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:18:58.283+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:18:58.289+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:18:58.295+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:18:58.316+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:18:58.298+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 82, in <module>
    OrderFactTable = read_sql_file('/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql'
[2024-05-28T09:18:58.319+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:18:58.364+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.188 seconds
[2024-05-28T09:19:28.642+0000] {processor.py:161} INFO - Started process (PID=1062) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:19:28.645+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:19:28.647+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:19:28.646+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:19:28.690+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:19:28.699+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:19:28.707+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:19:28.715+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:19:28.724+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:19:28.730+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:19:28.736+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:19:28.744+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:19:28.758+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:19:28.747+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 82, in <module>
    OrderFactTable = read_sql_file('/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql'
[2024-05-28T09:19:28.763+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:19:28.808+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.180 seconds
[2024-05-28T09:19:58.960+0000] {processor.py:161} INFO - Started process (PID=1070) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:19:58.962+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:19:58.964+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:19:58.963+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:19:58.998+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:19:59.003+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:19:59.010+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:19:59.015+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:19:59.021+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:19:59.026+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:19:59.031+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:19:59.036+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:19:59.047+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:19:59.039+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 82, in <module>
    OrderFactTable = read_sql_file('/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql'
[2024-05-28T09:19:59.049+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:19:59.085+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.137 seconds
[2024-05-28T09:20:29.477+0000] {processor.py:161} INFO - Started process (PID=1078) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:20:29.479+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:20:29.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:20:29.480+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:20:29.505+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:20:29.510+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:20:29.516+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:20:29.521+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:20:29.526+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:20:29.530+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:20:29.534+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:20:29.538+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:20:29.549+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:20:29.541+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 82, in <module>
    OrderFactTable = read_sql_file('/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql'
[2024-05-28T09:20:29.552+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:20:29.602+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.134 seconds
[2024-05-28T09:20:59.783+0000] {processor.py:161} INFO - Started process (PID=1087) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:20:59.785+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:20:59.787+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:20:59.786+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:20:59.821+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:20:59.828+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:20:59.833+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:20:59.840+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:20:59.848+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:20:59.856+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:20:59.863+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:20:59.870+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:20:59.883+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:20:59.874+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 82, in <module>
    OrderFactTable = read_sql_file('/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql'
[2024-05-28T09:20:59.887+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:20:59.927+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.164 seconds
[2024-05-28T09:21:30.081+0000] {processor.py:161} INFO - Started process (PID=1095) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:21:30.083+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:21:30.084+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:21:30.084+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:21:30.103+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:21:30.108+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:21:30.112+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:21:30.115+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:21:30.119+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:21:30.123+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:21:30.127+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:21:30.131+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:21:30.138+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:21:30.133+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 82, in <module>
    OrderFactTable = read_sql_file('/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql'
[2024-05-28T09:21:30.140+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:21:30.164+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.090 seconds
[2024-05-28T09:22:00.440+0000] {processor.py:161} INFO - Started process (PID=1103) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:00.441+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:22:00.443+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:22:00.443+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:00.472+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:22:00.477+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:22:00.482+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:22:00.487+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:22:00.492+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:22:00.497+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:22:00.501+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:22:00.506+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:22:00.516+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:22:00.509+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 82, in <module>
    OrderFactTable = read_sql_file('/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/oltp_olap.py", line 69, in read_sql_file
    with open(file_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/dags/SQL_Queries/Order_Fact_Table.sql'
[2024-05-28T09:22:00.518+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:00.548+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.118 seconds
[2024-05-28T09:22:29.822+0000] {processor.py:161} INFO - Started process (PID=1111) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:29.824+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:22:29.826+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:22:29.825+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:29.909+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:22:29.915+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:22:29.920+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:22:29.926+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:22:29.931+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:22:29.938+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:22:29.946+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:22:29.953+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:22:29.960+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:22:29.988+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:30.522+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:22:30.521+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:22:30.542+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:22:30.542+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:22:30.590+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.776 seconds
[2024-05-28T09:22:32.681+0000] {processor.py:161} INFO - Started process (PID=1112) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:32.682+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:22:32.684+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:22:32.683+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:32.725+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:22:32.729+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:22:32.733+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:22:32.738+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:22:32.743+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:22:32.746+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:22:32.750+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:22:32.754+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:22:32.757+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:22:32.770+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:22:32.786+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:22:32.786+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:22:32.804+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:22:32.804+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:22:32.836+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.163 seconds
[2024-05-28T09:23:03.319+0000] {processor.py:161} INFO - Started process (PID=1125) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:23:03.323+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:23:03.327+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:23:03.326+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:23:03.408+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:23:03.415+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:23:03.427+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:23:03.437+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:23:03.445+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:23:03.451+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:23:03.461+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:23:03.471+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:23:03.484+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:23:03.599+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:23:03.794+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:23:03.793+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:23:03.869+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:23:03.868+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:23:03.997+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.707 seconds
[2024-05-28T09:23:34.347+0000] {processor.py:161} INFO - Started process (PID=1139) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:23:34.350+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:23:34.355+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:23:34.353+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:23:34.437+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:23:34.445+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:23:34.453+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:23:34.462+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:23:34.470+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:23:34.479+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:23:34.488+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:23:34.497+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:23:34.505+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:23:34.569+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:23:34.711+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:23:34.711+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:23:34.783+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:23:34.783+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:23:34.860+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.555 seconds
[2024-05-28T09:24:05.217+0000] {processor.py:161} INFO - Started process (PID=1147) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:24:05.219+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:24:05.222+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:24:05.221+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:24:05.263+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:24:05.267+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:24:05.272+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:24:05.277+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:24:05.281+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:24:05.286+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:24:05.291+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:24:05.296+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:24:05.301+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:24:05.317+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:24:05.375+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:24:05.374+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:24:05.406+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:24:05.405+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:24:05.450+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.243 seconds
[2024-05-28T09:24:35.544+0000] {processor.py:161} INFO - Started process (PID=1155) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:24:35.546+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:24:35.547+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:24:35.547+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:24:35.568+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:24:35.571+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:24:35.575+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:24:35.578+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:24:35.581+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:24:35.585+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:24:35.588+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:24:35.592+0000] {logging_mixin.py:188} INFO - CREATE TABLE `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:24:35.595+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:24:35.613+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:24:35.662+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:24:35.661+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:24:35.682+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:24:35.682+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:24:35.713+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.177 seconds
[2024-05-28T09:25:05.798+0000] {processor.py:161} INFO - Started process (PID=1163) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:25:05.800+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:25:05.801+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:25:05.801+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:25:05.833+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:25:05.839+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:25:05.844+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:25:05.848+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:25:05.853+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:25:05.857+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:25:05.862+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:25:05.878+0000] {logging_mixin.py:188} INFO - CREATE TABLE or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:25:05.882+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:25:05.893+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:25:06.315+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:25:06.314+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:25:06.331+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:25:06.331+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:25:06.391+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.602 seconds
[2024-05-28T09:25:36.694+0000] {processor.py:161} INFO - Started process (PID=1177) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:25:36.697+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:25:36.701+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:25:36.700+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:25:36.861+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:25:36.869+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:25:36.877+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:25:36.885+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:25:36.892+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:25:36.900+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:25:36.910+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:25:36.917+0000] {logging_mixin.py:188} INFO - CREATE TABLE or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:25:36.924+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:25:37.026+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:25:37.211+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:25:37.210+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:25:37.295+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:25:37.295+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:25:37.360+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.689 seconds
[2024-05-28T09:26:11.561+0000] {processor.py:161} INFO - Started process (PID=1198) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:26:11.609+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:26:11.656+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:26:11.636+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:26:12.595+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:26:12.604+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:26:12.614+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:26:12.620+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:26:12.638+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:26:12.660+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:26:12.680+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:26:12.704+0000] {logging_mixin.py:188} INFO - CREATE TABLE or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:26:12.775+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:26:12.983+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:26:13.304+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:26:13.303+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:26:13.506+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:26:13.505+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:26:13.665+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.699 seconds
[2024-05-28T09:26:44.568+0000] {processor.py:161} INFO - Started process (PID=1213) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:26:44.583+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:26:44.589+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:26:44.586+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:26:44.768+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:26:44.788+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:26:44.809+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:26:44.832+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:26:44.846+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:26:44.876+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:26:44.890+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:26:44.922+0000] {logging_mixin.py:188} INFO - CREATE TABLE or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:26:44.958+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:26:45.066+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:26:45.287+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:26:45.286+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:26:45.403+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:26:45.403+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:26:45.524+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.001 seconds
[2024-05-28T09:27:15.800+0000] {processor.py:161} INFO - Started process (PID=1221) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:27:15.802+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:27:15.803+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:27:15.803+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:27:15.830+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:27:15.834+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:27:15.838+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:27:15.842+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:27:15.847+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:27:15.851+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:27:15.854+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:27:15.859+0000] {logging_mixin.py:188} INFO - CREATE TABLE or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:27:15.863+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:27:15.874+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:27:15.910+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:27:15.910+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:27:15.929+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:27:15.929+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:27:15.954+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.162 seconds
[2024-05-28T09:27:46.232+0000] {processor.py:161} INFO - Started process (PID=1229) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:27:46.234+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:27:46.235+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:27:46.235+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:27:46.268+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:27:46.271+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:27:46.276+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:27:46.280+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:27:46.286+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:27:46.291+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:27:46.296+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:27:46.301+0000] {logging_mixin.py:188} INFO - CREATE TABLE or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:27:46.305+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:27:46.321+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:27:46.366+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:27:46.365+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:27:46.390+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:27:46.390+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:27:46.427+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.210 seconds
[2024-05-28T09:28:16.541+0000] {processor.py:161} INFO - Started process (PID=1237) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:28:16.543+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:28:16.544+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:28:16.544+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:28:16.569+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:28:16.573+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:28:16.577+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:28:16.580+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:28:16.585+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:28:16.589+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:28:16.593+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:28:16.596+0000] {logging_mixin.py:188} INFO - CREATE TABLE or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:28:16.600+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:28:16.612+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:28:16.648+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:28:16.648+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:28:16.666+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:28:16.666+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:28:16.693+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.161 seconds
[2024-05-28T09:28:46.971+0000] {processor.py:161} INFO - Started process (PID=1245) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:28:46.973+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:28:46.977+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:28:46.976+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:28:47.014+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:28:47.020+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:28:47.025+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:28:47.032+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:28:47.037+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:28:47.042+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:28:47.047+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:28:47.062+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:28:47.067+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:28:47.085+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:28:47.760+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:28:47.759+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:28:47.779+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:28:47.778+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:28:47.827+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.872 seconds
[2024-05-28T09:29:18.636+0000] {processor.py:161} INFO - Started process (PID=1258) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:29:18.652+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:29:18.665+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:29:18.658+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:29:18.859+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:29:18.874+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:29:18.890+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:29:18.941+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:29:18.965+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:29:18.983+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:29:18.997+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:29:19.015+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:29:19.033+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:29:19.113+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:29:19.232+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:29:19.231+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:29:19.313+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:29:19.312+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:29:19.377+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.802 seconds
[2024-05-28T09:29:49.579+0000] {processor.py:161} INFO - Started process (PID=1271) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:29:49.582+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:29:49.591+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:29:49.586+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:29:49.620+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:29:49.624+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:29:49.628+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:29:49.632+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:29:49.635+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:29:49.639+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:29:49.643+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:29:49.646+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:29:49.650+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:29:49.671+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:29:49.812+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:29:49.811+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:29:49.889+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:29:49.888+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:29:49.966+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.411 seconds
[2024-05-28T09:30:20.822+0000] {processor.py:161} INFO - Started process (PID=1279) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:30:20.824+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:30:20.825+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:30:20.824+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:30:20.851+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:30:20.854+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:30:20.858+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:30:20.862+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:30:20.865+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:30:20.869+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:30:20.873+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:30:20.878+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:30:20.881+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:30:20.894+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:30:20.939+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:30:20.939+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:30:20.962+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:30:20.962+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:30:21.008+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.195 seconds
[2024-05-28T09:30:51.254+0000] {processor.py:161} INFO - Started process (PID=1287) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:30:51.255+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:30:51.257+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:30:51.256+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:30:51.282+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:30:51.286+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:30:51.289+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:30:51.294+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:30:51.298+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:30:51.302+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:30:51.306+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:30:51.311+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:30:51.315+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:30:51.330+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:30:51.370+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:30:51.370+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:30:51.389+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:30:51.389+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:30:51.418+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.171 seconds
[2024-05-28T09:31:21.596+0000] {processor.py:161} INFO - Started process (PID=1295) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:31:21.598+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:31:21.600+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:31:21.599+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:31:21.633+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:31:21.638+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:31:21.645+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:31:21.652+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:31:21.659+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:31:21.665+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:31:21.672+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:31:21.681+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:31:21.689+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:31:21.716+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:31:21.766+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:31:21.766+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:31:21.786+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:31:21.786+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:31:21.819+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.234 seconds
[2024-05-28T09:31:51.889+0000] {processor.py:161} INFO - Started process (PID=1303) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:31:51.891+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:31:51.893+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:31:51.892+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:31:51.918+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:31:51.922+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:31:51.925+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:31:51.929+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:31:51.933+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:31:51.936+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:31:51.940+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:31:51.944+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:31:51.948+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:31:51.958+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:31:51.994+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:31:51.994+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:31:52.014+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:31:52.014+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:31:52.041+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.160 seconds
[2024-05-28T09:32:22.316+0000] {processor.py:161} INFO - Started process (PID=1311) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:32:22.318+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:32:22.322+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:32:22.321+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:32:22.368+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:32:22.375+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:32:22.382+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:32:22.387+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:32:22.393+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:32:22.398+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table_temp`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:32:22.403+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:32:22.408+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:32:22.414+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table_temp` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.sale_table_22` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:32:22.433+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:32:22.496+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:32:22.495+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:32:22.522+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:32:22.522+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:32:22.573+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.274 seconds
[2024-05-28T09:32:52.628+0000] {processor.py:161} INFO - Started process (PID=1319) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:32:52.630+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:32:52.631+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:32:52.630+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:32:52.654+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:32:52.658+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:32:52.662+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:32:52.667+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:32:52.672+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:32:52.687+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:32:52.692+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:32:52.697+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:32:52.703+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:32:52.715+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:32:53.207+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:32:53.207+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:32:53.223+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:32:53.223+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:32:53.271+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.651 seconds
[2024-05-28T09:33:24.238+0000] {processor.py:161} INFO - Started process (PID=1331) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:33:24.242+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:33:24.256+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:33:24.251+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:33:24.326+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:33:24.334+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:33:24.346+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:33:24.354+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:33:24.363+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:33:24.370+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:33:24.379+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:33:24.386+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:33:24.395+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:33:24.424+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:33:24.503+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:33:24.502+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:33:24.542+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:33:24.542+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:33:24.600+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.400 seconds
[2024-05-28T09:33:55.286+0000] {processor.py:161} INFO - Started process (PID=1345) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:33:55.294+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:33:55.315+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:33:55.306+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:33:55.415+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:33:55.420+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:33:55.425+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:33:55.430+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:33:55.436+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:33:55.441+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:33:55.446+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:33:55.451+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:33:55.456+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:33:55.498+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:33:55.617+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:33:55.615+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:33:55.666+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:33:55.666+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:33:55.705+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.471 seconds
[2024-05-28T09:34:26.019+0000] {processor.py:161} INFO - Started process (PID=1354) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:34:26.021+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:34:26.023+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:34:26.022+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:34:26.049+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:34:26.053+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:34:26.057+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:34:26.061+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:34:26.065+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:34:26.070+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:34:26.074+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:34:26.078+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:34:26.083+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:34:26.096+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:34:26.133+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:34:26.132+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:34:26.153+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:34:26.153+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:34:26.182+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.172 seconds
[2024-05-28T09:34:56.425+0000] {processor.py:161} INFO - Started process (PID=1362) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:34:56.427+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:34:56.428+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:34:56.428+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:34:56.456+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:34:56.461+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:34:56.465+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:34:56.469+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:34:56.474+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:34:56.479+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:34:56.484+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:34:56.489+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:34:56.495+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:34:56.509+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:34:56.550+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:34:56.549+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:34:56.569+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:34:56.569+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:34:56.601+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.184 seconds
[2024-05-28T09:35:27.010+0000] {processor.py:161} INFO - Started process (PID=1370) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:35:27.012+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:35:27.014+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:35:27.013+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:35:27.049+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:35:27.054+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:35:27.058+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:35:27.063+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:35:27.068+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:35:27.074+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:35:27.080+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:35:27.086+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:35:27.090+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:35:27.103+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:35:27.146+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:35:27.146+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:35:27.168+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:35:27.168+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:35:27.201+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.202 seconds
[2024-05-28T09:35:57.262+0000] {processor.py:161} INFO - Started process (PID=1379) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:35:57.264+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:35:57.265+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:35:57.264+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:35:57.288+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:35:57.291+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:35:57.296+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:35:57.300+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:35:57.303+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:35:57.308+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:35:57.311+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:35:57.315+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:35:57.317+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:35:57.329+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:35:57.366+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:35:57.366+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:35:57.384+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:35:57.384+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:35:57.411+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.157 seconds
[2024-05-28T09:36:27.734+0000] {processor.py:161} INFO - Started process (PID=1387) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:36:27.736+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:36:27.739+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:36:27.738+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:36:27.782+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:36:27.787+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:36:27.794+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:36:27.802+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:36:27.808+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:36:27.816+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:36:27.821+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:36:27.829+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:36:27.837+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:36:27.868+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:36:27.942+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:36:27.940+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:36:27.992+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:36:27.991+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:36:28.068+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.352 seconds
[2024-05-28T09:36:58.141+0000] {processor.py:161} INFO - Started process (PID=1395) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:36:58.143+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:36:58.144+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:36:58.144+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:36:58.168+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:36:58.172+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:36:58.177+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:36:58.182+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:36:58.186+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:36:58.189+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:36:58.193+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:36:58.197+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:36:58.200+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:36:58.212+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:36:58.250+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:36:58.249+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:36:58.267+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:36:58.267+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:36:58.299+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.166 seconds
[2024-05-28T09:37:28.387+0000] {processor.py:161} INFO - Started process (PID=1403) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:37:28.388+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:37:28.390+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:37:28.389+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:37:28.416+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:37:28.421+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:37:28.425+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:37:28.429+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:37:28.434+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:37:28.439+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:37:28.444+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:37:28.449+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:37:28.454+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:37:28.471+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:37:28.510+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:37:28.510+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:37:28.529+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:37:28.529+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:37:28.563+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.183 seconds
[2024-05-28T09:37:58.850+0000] {processor.py:161} INFO - Started process (PID=1411) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:37:58.851+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:37:58.852+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:37:58.852+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:37:58.873+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:37:58.877+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:37:58.881+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:37:58.884+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:37:58.887+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:37:58.890+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:37:58.893+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:37:58.897+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:37:58.901+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:37:58.911+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:37:58.943+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:37:58.942+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:37:58.959+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:37:58.958+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:37:58.984+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.142 seconds
[2024-05-28T09:38:29.064+0000] {processor.py:161} INFO - Started process (PID=1419) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:38:29.065+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:38:29.067+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:38:29.066+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:38:29.089+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:38:29.093+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:38:29.097+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:38:29.101+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:38:29.104+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:38:29.108+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:38:29.113+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:38:29.116+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:38:29.120+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:38:29.131+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:38:29.163+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:38:29.162+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:38:29.178+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:38:29.178+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:38:29.203+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.146 seconds
[2024-05-28T09:38:59.421+0000] {processor.py:161} INFO - Started process (PID=1427) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:38:59.423+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:38:59.424+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:38:59.423+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:38:59.449+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:38:59.453+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:38:59.456+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:38:59.460+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:38:59.464+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:38:59.468+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:38:59.472+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:38:59.477+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:38:59.481+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:38:59.492+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:38:59.529+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:38:59.529+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:38:59.548+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:38:59.548+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:38:59.585+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.171 seconds
[2024-05-28T09:39:29.821+0000] {processor.py:161} INFO - Started process (PID=1436) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:39:29.823+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:39:29.824+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:39:29.824+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:39:29.861+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:39:29.869+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:39:29.875+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:39:29.882+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:39:29.888+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:39:29.895+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:39:29.900+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:39:29.907+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:39:29.913+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:39:29.928+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:39:29.987+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:39:29.986+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:39:30.012+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:39:30.012+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:39:30.040+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.231 seconds
[2024-05-28T09:40:00.117+0000] {processor.py:161} INFO - Started process (PID=1444) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:40:00.119+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:40:00.120+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:40:00.119+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:40:00.141+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:40:00.145+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:40:00.149+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:40:00.152+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:40:00.156+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:40:00.159+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:40:00.163+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:40:00.166+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:40:00.169+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:40:00.181+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:40:00.215+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:40:00.215+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:40:00.232+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:40:00.231+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:40:00.256+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.146 seconds
[2024-05-28T09:40:30.327+0000] {processor.py:161} INFO - Started process (PID=1452) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:40:30.328+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:40:30.329+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:40:30.329+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:40:30.352+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:40:30.356+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:40:30.361+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:40:30.364+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:40:30.368+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:40:30.371+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:40:30.374+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:40:30.378+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:40:30.381+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:40:30.392+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:40:30.423+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:40:30.423+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:40:30.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:40:30.438+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:40:30.464+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.144 seconds
[2024-05-28T09:41:00.679+0000] {processor.py:161} INFO - Started process (PID=1460) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:41:00.681+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:41:00.682+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:41:00.682+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:41:00.704+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:41:00.708+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:41:00.712+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:41:00.715+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:41:00.718+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:41:00.721+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:41:00.724+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:41:00.728+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:41:00.731+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:41:00.741+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:41:00.774+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:41:00.773+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:41:00.790+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:41:00.790+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:41:00.813+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.142 seconds
[2024-05-28T09:41:30.934+0000] {processor.py:161} INFO - Started process (PID=1468) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:41:30.935+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:41:30.936+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:41:30.936+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:41:30.957+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:41:30.960+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:41:30.964+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:41:30.967+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:41:30.971+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:41:30.974+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:41:30.978+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:41:30.983+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:41:30.987+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:41:31.002+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:41:31.043+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:41:31.042+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:41:31.061+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:41:31.060+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:41:31.096+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.169 seconds
[2024-05-28T09:42:01.227+0000] {processor.py:161} INFO - Started process (PID=1476) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:42:01.229+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:42:01.232+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:42:01.231+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:42:01.280+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:42:01.288+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:42:01.294+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:42:01.300+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:42:01.306+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:42:01.312+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:42:01.317+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:42:01.322+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:42:01.327+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:42:01.342+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:42:01.387+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:42:01.387+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:42:01.406+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:42:01.406+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:42:01.432+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.214 seconds
[2024-05-28T09:42:31.682+0000] {processor.py:161} INFO - Started process (PID=1484) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:42:31.684+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:42:31.685+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:42:31.685+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:42:31.709+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:42:31.714+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:42:31.717+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:42:31.722+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:42:31.727+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:42:31.731+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:42:31.735+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:42:31.739+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:42:31.743+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:42:31.755+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:42:31.788+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:42:31.788+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:42:31.805+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:42:31.804+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:42:31.829+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.155 seconds
[2024-05-28T09:43:01.980+0000] {processor.py:161} INFO - Started process (PID=1492) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:43:01.982+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:43:01.985+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:43:01.984+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:43:02.032+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:43:02.038+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:43:02.045+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:43:02.051+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:43:02.059+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:43:02.067+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:43:02.074+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:43:02.079+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:43:02.086+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:43:02.108+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:43:02.181+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:43:02.180+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:43:02.221+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:43:02.220+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:43:02.263+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.299 seconds
[2024-05-28T09:43:32.609+0000] {processor.py:161} INFO - Started process (PID=1500) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:43:32.611+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:43:32.613+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:43:32.612+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:43:32.633+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:43:32.636+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:43:32.640+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:43:32.643+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:43:32.647+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:43:32.650+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:43:32.654+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:43:32.657+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:43:32.660+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:43:32.670+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:43:32.701+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:43:32.700+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:43:32.716+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:43:32.716+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:43:32.738+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.136 seconds
[2024-05-28T09:44:02.839+0000] {processor.py:161} INFO - Started process (PID=1508) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:44:02.840+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:44:02.842+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:44:02.841+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:44:02.863+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:44:02.867+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:44:02.870+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:44:02.874+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:44:02.877+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:44:02.880+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:44:02.883+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:44:02.886+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:44:02.890+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:44:02.901+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:44:02.931+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:44:02.931+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:44:02.946+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:44:02.946+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:44:02.968+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.136 seconds
[2024-05-28T09:44:33.254+0000] {processor.py:161} INFO - Started process (PID=1516) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:44:33.255+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:44:33.256+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:44:33.256+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:44:33.282+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:44:33.287+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:44:33.292+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:44:33.296+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:44:33.300+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:44:33.304+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:44:33.309+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:44:33.313+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:44:33.317+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:44:33.332+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:44:33.375+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:44:33.375+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:44:33.401+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:44:33.400+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:44:33.434+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.187 seconds
[2024-05-28T09:45:03.474+0000] {processor.py:161} INFO - Started process (PID=1524) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:03.475+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:45:03.477+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:45:03.476+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:03.493+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:45:03.496+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:45:03.498+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:45:03.501+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:45:03.504+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:45:03.506+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:45:03.509+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:45:03.512+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:45:03.514+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:45:03.523+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:03.554+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:45:03.553+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:45:03.572+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:45:03.571+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:45:03.599+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.131 seconds
[2024-05-28T09:45:33.804+0000] {processor.py:161} INFO - Started process (PID=1532) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:33.806+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:45:33.807+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:45:33.806+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:33.827+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:45:33.830+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:45:33.833+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:45:33.837+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:45:33.840+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:45:33.843+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:45:33.846+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:45:33.849+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:45:33.853+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:45:33.862+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:33.891+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:45:33.890+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:45:33.906+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:45:33.905+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:45:33.929+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.131 seconds
[2024-05-28T09:45:50.988+0000] {processor.py:161} INFO - Started process (PID=1539) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:50.990+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:45:50.991+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:45:50.990+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:51.019+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:45:51.041+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.060 seconds
[2024-05-28T09:46:21.334+0000] {processor.py:161} INFO - Started process (PID=1547) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:21.335+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:46:21.337+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:46:21.336+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:21.353+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:21.372+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T09:46:23.404+0000] {processor.py:161} INFO - Started process (PID=1548) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:23.406+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:46:23.407+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:46:23.407+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:23.447+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:46:23.452+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:46:23.456+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:46:23.460+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:46:23.465+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:46:23.469+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:46:23.472+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:46:23.476+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:46:23.481+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:46:23.491+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:23.525+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:46:23.525+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:46:23.542+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:46:23.542+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:46:23.585+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.190 seconds
[2024-05-28T09:46:53.653+0000] {processor.py:161} INFO - Started process (PID=1556) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:53.655+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:46:53.657+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:46:53.657+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:53.690+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:46:53.695+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:46:53.700+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:46:53.704+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:46:53.709+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:46:53.714+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:46:53.719+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:46:53.723+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:46:53.728+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:46:53.748+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:46:53.781+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:46:53.781+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:46:53.801+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:46:53.801+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:46:53.827+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.185 seconds
[2024-05-28T09:47:24.015+0000] {processor.py:161} INFO - Started process (PID=1564) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:47:24.017+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:47:24.019+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:47:24.019+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:47:24.058+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:47:24.066+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:47:24.074+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:47:24.079+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:47:24.085+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:47:24.090+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:47:24.097+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:47:24.102+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:47:24.107+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:47:24.125+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:47:24.193+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:47:24.192+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:47:24.224+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:47:24.223+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:47:24.264+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.263 seconds
[2024-05-28T09:47:55.248+0000] {processor.py:161} INFO - Started process (PID=1572) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:47:55.250+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:47:55.252+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:47:55.251+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:47:55.277+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:47:55.281+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:47:55.285+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:47:55.289+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:47:55.292+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:47:55.297+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:47:55.302+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:47:55.307+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:47:55.311+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:47:55.322+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:47:55.360+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:47:55.359+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:47:55.379+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:47:55.379+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:47:55.408+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.169 seconds
[2024-05-28T09:48:25.559+0000] {processor.py:161} INFO - Started process (PID=1580) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:48:25.561+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:48:25.563+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:48:25.562+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:48:25.586+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:48:25.590+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:48:25.593+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:48:25.597+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:48:25.601+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:48:25.605+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:48:25.609+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:48:25.613+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:48:25.617+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:48:25.627+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:48:25.660+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:48:25.660+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:48:25.677+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:48:25.677+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:48:25.703+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.149 seconds
[2024-05-28T09:48:55.802+0000] {processor.py:161} INFO - Started process (PID=1587) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:48:55.804+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:48:55.807+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:48:55.806+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:48:55.847+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T09:48:55.854+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T09:48:55.859+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T09:48:55.865+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T09:48:55.872+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T09:48:55.878+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T09:48:55.884+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T09:48:55.889+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T09:48:55.894+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T09:48:55.913+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:48:55.969+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:48:55.968+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T09:48:55.999+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:48:55.999+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T09:48:56.061+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.277 seconds
[2024-05-28T09:51:01.329+0000] {processor.py:161} INFO - Started process (PID=37) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:51:01.344+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:51:01.351+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:51:01.350+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:51:01.516+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:51:01.627+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.348 seconds
[2024-05-28T09:51:39.126+0000] {processor.py:161} INFO - Started process (PID=46) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:51:39.135+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:51:39.147+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:51:39.141+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:51:39.247+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:51:39.536+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.525 seconds
[2024-05-28T09:52:10.000+0000] {processor.py:161} INFO - Started process (PID=54) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:52:10.005+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:52:10.014+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:52:10.009+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:52:10.068+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:52:10.107+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.138 seconds
[2024-05-28T09:52:40.562+0000] {processor.py:161} INFO - Started process (PID=63) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:52:40.565+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:52:40.567+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:52:40.566+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:52:40.592+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:52:40.618+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T09:53:10.972+0000] {processor.py:161} INFO - Started process (PID=71) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:53:10.974+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:53:10.976+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:53:10.975+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:53:10.994+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:53:11.022+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T09:53:41.321+0000] {processor.py:161} INFO - Started process (PID=79) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:53:41.322+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:53:41.323+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:53:41.322+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:53:41.335+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:53:41.351+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.037 seconds
[2024-05-28T09:54:11.719+0000] {processor.py:161} INFO - Started process (PID=87) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:54:11.721+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:54:11.723+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:54:11.723+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:54:11.746+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:54:11.776+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T09:54:42.099+0000] {processor.py:161} INFO - Started process (PID=95) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:54:42.101+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:54:42.103+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:54:42.103+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:54:42.128+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:54:42.154+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T09:55:12.387+0000] {processor.py:161} INFO - Started process (PID=103) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:55:12.388+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:55:12.390+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:55:12.389+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:55:12.405+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:55:12.421+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T09:55:42.682+0000] {processor.py:161} INFO - Started process (PID=111) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:55:42.683+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:55:42.685+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:55:42.684+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:55:42.701+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:55:42.719+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T09:56:13.246+0000] {processor.py:161} INFO - Started process (PID=119) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:56:13.248+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:56:13.249+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:56:13.249+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:56:13.266+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:56:13.282+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T09:56:43.578+0000] {processor.py:161} INFO - Started process (PID=127) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:56:43.581+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:56:43.583+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:56:43.583+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:56:43.603+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:56:43.627+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T09:57:13.917+0000] {processor.py:161} INFO - Started process (PID=135) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:57:13.919+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:57:13.920+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:57:13.920+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:57:13.936+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:57:13.955+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T09:57:44.274+0000] {processor.py:161} INFO - Started process (PID=143) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:57:44.276+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:57:44.278+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:57:44.277+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:57:44.292+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:57:44.310+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T09:58:14.548+0000] {processor.py:161} INFO - Started process (PID=151) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:58:14.550+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:58:14.551+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:58:14.551+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:58:14.567+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:58:14.587+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T09:58:44.829+0000] {processor.py:161} INFO - Started process (PID=159) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:58:44.834+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:58:44.837+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:58:44.836+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:58:44.861+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:58:44.889+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T09:59:15.182+0000] {processor.py:161} INFO - Started process (PID=167) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:59:15.192+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:59:15.195+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:59:15.194+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:59:15.219+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:59:15.264+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.112 seconds
[2024-05-28T09:59:45.631+0000] {processor.py:161} INFO - Started process (PID=175) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:59:45.633+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T09:59:45.636+0000] {logging_mixin.py:188} INFO - [2024-05-28T09:59:45.635+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:59:45.672+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T09:59:45.713+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.105 seconds
[2024-05-28T10:00:15.932+0000] {processor.py:161} INFO - Started process (PID=183) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:00:15.934+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:00:15.936+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:00:15.935+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:00:15.957+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:00:15.990+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T10:00:46.287+0000] {processor.py:161} INFO - Started process (PID=192) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:00:46.289+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:00:46.292+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:00:46.291+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:00:46.319+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:00:46.344+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T10:01:17.038+0000] {processor.py:161} INFO - Started process (PID=200) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:01:17.042+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:01:17.045+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:01:17.044+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:01:17.093+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:01:17.189+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.182 seconds
[2024-05-28T10:01:47.647+0000] {processor.py:161} INFO - Started process (PID=208) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:01:47.650+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:01:47.653+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:01:47.652+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:01:47.676+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:01:47.703+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T10:02:17.993+0000] {processor.py:161} INFO - Started process (PID=216) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:02:17.995+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:02:17.996+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:02:17.995+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:02:18.012+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:02:18.028+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T10:02:48.395+0000] {processor.py:161} INFO - Started process (PID=224) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:02:48.397+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:02:48.399+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:02:48.398+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:02:48.411+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:02:48.428+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T10:03:18.698+0000] {processor.py:161} INFO - Started process (PID=232) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:03:18.700+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:03:18.702+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:03:18.701+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:03:18.726+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:03:18.767+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T10:03:49.044+0000] {processor.py:161} INFO - Started process (PID=240) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:03:49.045+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:03:49.046+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:03:49.046+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:03:49.061+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:03:49.094+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T10:04:19.385+0000] {processor.py:161} INFO - Started process (PID=249) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:04:19.387+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:04:19.389+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:04:19.388+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:04:19.411+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:04:19.430+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T10:04:49.699+0000] {processor.py:161} INFO - Started process (PID=258) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:04:49.700+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:04:49.702+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:04:49.702+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:04:49.720+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:04:49.751+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.063 seconds
[2024-05-28T10:05:20.060+0000] {processor.py:161} INFO - Started process (PID=266) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:05:20.062+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:05:20.064+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:05:20.063+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:05:20.080+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:05:20.104+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T10:05:50.675+0000] {processor.py:161} INFO - Started process (PID=274) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:05:50.687+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:05:50.691+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:05:50.690+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:05:50.710+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:05:50.738+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.075 seconds
[2024-05-28T10:06:21.256+0000] {processor.py:161} INFO - Started process (PID=283) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:06:21.258+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:06:21.260+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:06:21.259+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:06:21.285+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:06:21.347+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.102 seconds
[2024-05-28T10:06:51.955+0000] {processor.py:161} INFO - Started process (PID=292) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:06:51.959+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:06:51.965+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:06:51.963+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:06:51.997+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:06:52.035+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.100 seconds
[2024-05-28T10:07:22.343+0000] {processor.py:161} INFO - Started process (PID=300) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:07:22.345+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:07:22.347+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:07:22.346+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:07:22.369+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:07:22.405+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T10:07:52.823+0000] {processor.py:161} INFO - Started process (PID=309) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:07:52.829+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:07:52.839+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:07:52.838+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:07:52.911+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:07:53.008+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.214 seconds
[2024-05-28T10:08:23.408+0000] {processor.py:161} INFO - Started process (PID=316) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:08:23.411+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:08:23.414+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:08:23.413+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:08:23.441+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:08:23.470+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.080 seconds
[2024-05-28T10:08:53.886+0000] {processor.py:161} INFO - Started process (PID=324) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:08:53.889+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:08:53.892+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:08:53.891+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:08:53.921+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:08:53.966+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.108 seconds
[2024-05-28T10:09:24.312+0000] {processor.py:161} INFO - Started process (PID=332) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:09:24.313+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:09:24.315+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:09:24.314+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:09:24.335+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:09:24.359+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T10:09:54.715+0000] {processor.py:161} INFO - Started process (PID=340) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:09:54.718+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:09:54.720+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:09:54.720+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:09:54.787+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:09:54.832+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.139 seconds
[2024-05-28T10:10:25.256+0000] {processor.py:161} INFO - Started process (PID=348) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:10:25.258+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:10:25.260+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:10:25.259+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:10:25.279+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:10:25.339+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.096 seconds
[2024-05-28T10:10:55.646+0000] {processor.py:161} INFO - Started process (PID=356) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:10:55.648+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:10:55.652+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:10:55.650+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:10:55.675+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:10:55.705+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T10:11:26.223+0000] {processor.py:161} INFO - Started process (PID=364) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:11:26.224+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:11:26.225+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:11:26.225+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:11:26.240+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:11:26.264+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T10:11:56.753+0000] {processor.py:161} INFO - Started process (PID=372) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:11:56.755+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:11:56.761+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:11:56.759+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:11:56.792+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:11:56.845+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.133 seconds
[2024-05-28T10:12:27.483+0000] {processor.py:161} INFO - Started process (PID=380) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:12:27.488+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:12:27.494+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:12:27.491+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:12:27.526+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:12:27.580+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.149 seconds
[2024-05-28T10:12:58.041+0000] {processor.py:161} INFO - Started process (PID=389) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:12:58.055+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:12:58.059+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:12:58.058+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:12:58.100+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:12:58.166+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.170 seconds
[2024-05-28T10:13:28.453+0000] {processor.py:161} INFO - Started process (PID=397) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:13:28.456+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:13:28.457+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:13:28.457+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:13:28.488+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:13:28.513+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T10:13:58.865+0000] {processor.py:161} INFO - Started process (PID=405) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:13:58.877+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:13:58.879+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:13:58.878+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:13:58.901+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:13:58.957+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.114 seconds
[2024-05-28T10:14:29.392+0000] {processor.py:161} INFO - Started process (PID=413) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:14:29.394+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:14:29.396+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:14:29.395+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:14:29.415+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:14:29.439+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T10:14:59.809+0000] {processor.py:161} INFO - Started process (PID=421) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:14:59.811+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:14:59.813+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:14:59.812+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:14:59.833+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:14:59.864+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T10:15:30.324+0000] {processor.py:161} INFO - Started process (PID=429) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:15:30.327+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:15:30.329+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:15:30.328+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:15:30.368+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:15:30.411+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.104 seconds
[2024-05-28T10:16:00.693+0000] {processor.py:161} INFO - Started process (PID=437) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:16:00.695+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:16:00.697+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:16:00.696+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:16:00.717+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:16:00.740+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T10:16:30.814+0000] {processor.py:161} INFO - Started process (PID=445) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:16:30.816+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:16:30.818+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:16:30.817+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:16:30.839+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:16:30.859+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T10:17:01.422+0000] {processor.py:161} INFO - Started process (PID=453) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:17:01.427+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:17:01.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:17:01.430+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:17:01.545+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:17:01.630+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.256 seconds
[2024-05-28T10:17:32.337+0000] {processor.py:161} INFO - Started process (PID=461) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:17:32.342+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:17:32.345+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:17:32.343+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:17:32.378+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:17:32.476+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.190 seconds
[2024-05-28T10:18:02.627+0000] {processor.py:161} INFO - Started process (PID=475) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:18:02.630+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:18:02.634+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:18:02.633+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:18:02.672+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:18:02.702+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.092 seconds
[2024-05-28T10:18:33.114+0000] {processor.py:161} INFO - Started process (PID=483) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:18:33.116+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:18:33.118+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:18:33.117+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:18:33.139+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:18:33.164+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.062 seconds
[2024-05-28T10:19:03.575+0000] {processor.py:161} INFO - Started process (PID=491) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:19:03.577+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:19:03.586+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:19:03.586+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:19:03.644+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:19:03.681+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.126 seconds
[2024-05-28T10:19:34.096+0000] {processor.py:161} INFO - Started process (PID=499) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:19:34.098+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:19:34.102+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:19:34.101+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:19:34.130+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:19:34.170+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.088 seconds
[2024-05-28T10:20:04.514+0000] {processor.py:161} INFO - Started process (PID=508) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:20:04.516+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:20:04.519+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:20:04.518+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:20:04.547+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:20:04.579+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T10:20:35.011+0000] {processor.py:161} INFO - Started process (PID=516) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:20:35.013+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:20:35.015+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:20:35.015+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:20:35.043+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:20:35.077+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.090 seconds
[2024-05-28T10:21:05.632+0000] {processor.py:161} INFO - Started process (PID=524) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:21:05.634+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:21:05.637+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:21:05.636+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:21:05.662+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:21:05.683+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.063 seconds
[2024-05-28T10:21:36.005+0000] {processor.py:161} INFO - Started process (PID=533) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:21:36.008+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:21:36.010+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:21:36.009+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:21:36.035+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:21:36.060+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T10:22:06.420+0000] {processor.py:161} INFO - Started process (PID=541) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:22:06.422+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:22:06.424+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:22:06.424+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:22:06.448+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:22:06.509+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.099 seconds
[2024-05-28T10:22:36.837+0000] {processor.py:161} INFO - Started process (PID=549) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:22:36.841+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:22:36.845+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:22:36.843+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:22:36.865+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:22:36.891+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T10:23:07.165+0000] {processor.py:161} INFO - Started process (PID=558) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:23:07.166+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:23:07.168+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:23:07.168+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:23:07.187+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:23:07.209+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T10:23:37.464+0000] {processor.py:161} INFO - Started process (PID=566) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:23:37.466+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:23:37.468+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:23:37.467+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:23:37.486+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:23:37.513+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T10:24:07.799+0000] {processor.py:161} INFO - Started process (PID=574) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:24:07.800+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:24:07.803+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:24:07.802+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:24:07.841+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:24:07.862+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T10:24:38.182+0000] {processor.py:161} INFO - Started process (PID=582) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:24:38.185+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:24:38.186+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:24:38.186+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:24:38.202+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:24:38.221+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T10:25:08.516+0000] {processor.py:161} INFO - Started process (PID=590) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:25:08.522+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:25:08.524+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:25:08.523+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:25:08.556+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:25:08.607+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.109 seconds
[2024-05-28T10:25:38.983+0000] {processor.py:161} INFO - Started process (PID=598) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:25:38.985+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:25:38.988+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:25:38.987+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:25:39.007+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:25:39.030+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T10:26:09.578+0000] {processor.py:161} INFO - Started process (PID=606) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:26:09.579+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:26:09.581+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:26:09.580+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:26:09.597+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:26:09.616+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T10:26:39.917+0000] {processor.py:161} INFO - Started process (PID=614) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:26:39.919+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:26:39.921+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:26:39.921+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:26:39.940+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:26:39.962+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T10:27:10.187+0000] {processor.py:161} INFO - Started process (PID=622) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:27:10.188+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:27:10.191+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:27:10.190+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:27:10.218+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:27:10.264+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.089 seconds
[2024-05-28T10:27:40.542+0000] {processor.py:161} INFO - Started process (PID=630) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:27:40.544+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:27:40.545+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:27:40.545+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:27:40.560+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:27:40.578+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T10:28:10.827+0000] {processor.py:161} INFO - Started process (PID=638) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:28:10.829+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:28:10.830+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:28:10.830+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:28:10.846+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:28:10.864+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T10:28:41.119+0000] {processor.py:161} INFO - Started process (PID=646) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:28:41.120+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:28:41.122+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:28:41.121+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:28:41.139+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:28:41.160+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T10:29:11.423+0000] {processor.py:161} INFO - Started process (PID=653) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:29:11.424+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:29:11.426+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:29:11.425+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:29:11.443+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:29:11.463+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T10:29:41.752+0000] {processor.py:161} INFO - Started process (PID=661) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:29:41.753+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:29:41.756+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:29:41.755+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:29:41.771+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:29:41.792+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T10:30:12.036+0000] {processor.py:161} INFO - Started process (PID=669) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:30:12.038+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:30:12.039+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:30:12.039+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:30:12.055+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:30:12.074+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T10:30:42.313+0000] {processor.py:161} INFO - Started process (PID=677) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:30:42.315+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:30:42.316+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:30:42.316+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:30:42.330+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:30:42.348+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T10:31:12.683+0000] {processor.py:161} INFO - Started process (PID=685) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:31:12.685+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:31:12.686+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:31:12.686+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:31:12.697+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:31:12.712+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.034 seconds
[2024-05-28T10:31:42.940+0000] {processor.py:161} INFO - Started process (PID=693) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:31:42.942+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:31:42.943+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:31:42.943+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:31:42.957+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:31:42.974+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.041 seconds
[2024-05-28T10:32:13.208+0000] {processor.py:161} INFO - Started process (PID=701) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:32:13.209+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:32:13.211+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:32:13.210+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:32:13.227+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:32:13.249+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T10:32:43.548+0000] {processor.py:161} INFO - Started process (PID=711) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:32:43.549+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:32:43.550+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:32:43.550+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:32:43.574+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:32:43.600+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T10:33:14.094+0000] {processor.py:161} INFO - Started process (PID=720) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:33:14.096+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:33:14.098+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:33:14.097+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:33:14.112+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:33:14.133+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T10:33:44.403+0000] {processor.py:161} INFO - Started process (PID=728) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:33:44.405+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:33:44.407+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:33:44.406+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:33:44.428+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:33:44.453+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.060 seconds
[2024-05-28T10:34:14.731+0000] {processor.py:161} INFO - Started process (PID=736) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:14.734+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:34:14.739+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:34:14.736+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:14.768+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:14.808+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.091 seconds
[2024-05-28T10:34:16.851+0000] {processor.py:161} INFO - Started process (PID=737) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:16.853+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:34:16.856+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:34:16.854+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:16.889+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:16.916+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.076 seconds
[2024-05-28T10:34:47.200+0000] {processor.py:161} INFO - Started process (PID=745) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:47.202+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:34:47.205+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:34:47.204+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:47.234+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:34:47.267+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.082 seconds
[2024-05-28T10:35:17.476+0000] {processor.py:161} INFO - Started process (PID=753) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:35:17.478+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:35:17.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:35:17.480+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:35:17.508+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:35:17.533+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T10:35:47.886+0000] {processor.py:161} INFO - Started process (PID=762) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:35:47.889+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:35:47.892+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:35:47.891+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:35:47.952+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:35:48.016+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.143 seconds
[2024-05-28T10:36:18.417+0000] {processor.py:161} INFO - Started process (PID=769) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:36:18.419+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:36:18.420+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:36:18.420+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:36:18.434+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:36:18.458+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T10:36:48.808+0000] {processor.py:161} INFO - Started process (PID=778) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:36:48.809+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:36:48.811+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:36:48.810+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:36:48.836+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:36:48.856+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T10:37:19.147+0000] {processor.py:161} INFO - Started process (PID=786) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:37:19.149+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:37:19.150+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:37:19.150+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:37:19.165+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:37:19.197+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.064 seconds
[2024-05-28T10:37:49.979+0000] {processor.py:161} INFO - Started process (PID=794) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:37:49.981+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:37:49.983+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:37:49.983+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:37:50.004+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:37:50.029+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T10:38:20.271+0000] {processor.py:161} INFO - Started process (PID=802) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:38:20.272+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:38:20.274+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:38:20.273+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:38:20.284+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:38:20.300+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.037 seconds
[2024-05-28T10:38:50.528+0000] {processor.py:161} INFO - Started process (PID=810) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:38:50.529+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:38:50.530+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:38:50.530+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:38:50.546+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:38:50.564+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T10:39:20.793+0000] {processor.py:161} INFO - Started process (PID=818) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:39:20.795+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:39:20.796+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:39:20.796+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:39:20.819+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:39:20.833+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T10:39:51.064+0000] {processor.py:161} INFO - Started process (PID=826) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:39:51.066+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:39:51.067+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:39:51.067+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:39:51.082+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:39:51.126+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T10:40:21.392+0000] {processor.py:161} INFO - Started process (PID=834) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:40:21.396+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:40:21.399+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:40:21.398+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:40:21.426+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:40:21.508+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.130 seconds
[2024-05-28T10:40:51.934+0000] {processor.py:161} INFO - Started process (PID=843) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:40:51.946+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:40:51.948+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:40:51.947+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:40:51.970+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:40:52.060+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.145 seconds
[2024-05-28T10:50:38.955+0000] {processor.py:161} INFO - Started process (PID=846) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:50:38.957+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:50:38.959+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:50:38.958+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:50:38.981+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:50:39.013+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T10:51:09.635+0000] {processor.py:161} INFO - Started process (PID=859) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:51:09.644+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:51:09.650+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:51:09.649+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:51:09.690+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:51:09.737+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.121 seconds
[2024-05-28T10:51:40.257+0000] {processor.py:161} INFO - Started process (PID=871) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:51:40.269+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:51:40.273+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:51:40.271+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:51:40.328+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:51:40.378+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.155 seconds
[2024-05-28T10:52:10.813+0000] {processor.py:161} INFO - Started process (PID=884) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:52:10.815+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:52:10.817+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:52:10.816+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:52:10.835+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:52:10.856+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T10:52:41.163+0000] {processor.py:161} INFO - Started process (PID=892) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:52:41.171+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:52:41.175+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:52:41.174+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:52:41.214+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:52:41.251+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.110 seconds
[2024-05-28T10:53:11.610+0000] {processor.py:161} INFO - Started process (PID=900) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:53:11.613+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:53:11.615+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:53:11.615+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:53:11.634+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:53:11.655+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.055 seconds
[2024-05-28T10:53:41.938+0000] {processor.py:161} INFO - Started process (PID=908) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:53:41.939+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:53:41.942+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:53:41.941+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:53:41.960+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:53:41.986+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T10:54:12.344+0000] {processor.py:161} INFO - Started process (PID=916) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:54:12.346+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:54:12.348+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:54:12.347+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:54:12.370+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:54:12.397+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T10:54:42.732+0000] {processor.py:161} INFO - Started process (PID=924) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:54:42.734+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:54:42.741+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:54:42.738+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:54:42.765+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:54:42.784+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T10:55:13.051+0000] {processor.py:161} INFO - Started process (PID=932) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:55:13.053+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:55:13.055+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:55:13.054+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:55:13.080+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:55:13.118+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.080 seconds
[2024-05-28T10:55:43.957+0000] {processor.py:161} INFO - Started process (PID=940) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:55:43.960+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:55:43.961+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:55:43.961+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:55:43.981+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:55:44.003+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T10:56:14.287+0000] {processor.py:161} INFO - Started process (PID=948) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:56:14.290+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:56:14.293+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:56:14.292+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:56:14.317+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:56:14.347+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.075 seconds
[2024-05-28T10:56:44.642+0000] {processor.py:161} INFO - Started process (PID=957) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:56:44.643+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:56:44.644+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:56:44.644+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:56:44.662+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:56:44.678+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T10:57:15.099+0000] {processor.py:161} INFO - Started process (PID=965) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:57:15.102+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:57:15.105+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:57:15.103+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:57:15.134+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:57:15.195+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.123 seconds
[2024-05-28T10:57:45.526+0000] {processor.py:161} INFO - Started process (PID=974) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:57:45.528+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:57:45.531+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:57:45.530+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:57:45.553+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:57:45.597+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.092 seconds
[2024-05-28T10:58:15.874+0000] {processor.py:161} INFO - Started process (PID=982) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:58:15.876+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:58:15.878+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:58:15.877+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:58:15.895+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:58:15.914+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T10:58:46.616+0000] {processor.py:161} INFO - Started process (PID=990) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:58:46.626+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:58:46.634+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:58:46.630+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:58:46.707+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:58:46.898+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.387 seconds
[2024-05-28T10:59:17.317+0000] {processor.py:161} INFO - Started process (PID=998) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:59:17.319+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:59:17.321+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:59:17.321+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:59:17.346+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:59:17.374+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.080 seconds
[2024-05-28T10:59:47.618+0000] {processor.py:161} INFO - Started process (PID=1006) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:59:47.620+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T10:59:47.621+0000] {logging_mixin.py:188} INFO - [2024-05-28T10:59:47.621+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:59:47.638+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T10:59:47.654+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T11:00:17.890+0000] {processor.py:161} INFO - Started process (PID=1015) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:00:17.891+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:00:17.893+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:00:17.892+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:00:17.907+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:00:17.922+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T11:00:48.348+0000] {processor.py:161} INFO - Started process (PID=1023) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:00:48.349+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:00:48.351+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:00:48.350+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:00:48.368+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:00:48.388+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T11:01:18.829+0000] {processor.py:161} INFO - Started process (PID=1031) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:01:18.831+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:01:18.834+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:01:18.833+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:01:18.860+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:01:18.896+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.083 seconds
[2024-05-28T11:01:49.250+0000] {processor.py:161} INFO - Started process (PID=1039) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:01:49.251+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:01:49.253+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:01:49.252+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:01:49.271+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:01:49.292+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T11:02:19.585+0000] {processor.py:161} INFO - Started process (PID=1047) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:02:19.587+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:02:19.590+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:02:19.589+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:02:19.622+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:02:19.685+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.124 seconds
[2024-05-28T11:02:50.017+0000] {processor.py:161} INFO - Started process (PID=1055) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:02:50.020+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:02:50.023+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:02:50.022+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:02:50.054+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:02:50.094+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.095 seconds
[2024-05-28T11:03:20.398+0000] {processor.py:161} INFO - Started process (PID=1063) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:03:20.399+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:03:20.401+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:03:20.400+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:03:20.419+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:03:20.438+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T11:03:50.749+0000] {processor.py:161} INFO - Started process (PID=1071) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:03:50.750+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:03:50.752+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:03:50.752+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:03:50.769+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:03:50.789+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T11:04:21.090+0000] {processor.py:161} INFO - Started process (PID=1080) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:04:21.092+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:04:21.093+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:04:21.093+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:04:21.112+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:04:21.132+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T11:04:51.413+0000] {processor.py:161} INFO - Started process (PID=1088) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:04:51.414+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:04:51.416+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:04:51.416+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:04:51.441+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:04:51.469+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.080 seconds
[2024-05-28T11:05:21.737+0000] {processor.py:161} INFO - Started process (PID=1096) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:05:21.739+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:05:21.742+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:05:21.741+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:05:21.768+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:05:21.796+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T11:05:52.245+0000] {processor.py:161} INFO - Started process (PID=1104) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:05:52.246+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:05:52.248+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:05:52.247+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:05:52.261+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:05:52.279+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T11:06:22.618+0000] {processor.py:161} INFO - Started process (PID=1112) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:06:22.620+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:06:22.623+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:06:22.622+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:06:22.683+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:06:22.832+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.253 seconds
[2024-05-28T11:06:53.100+0000] {processor.py:161} INFO - Started process (PID=1120) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:06:53.101+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:06:53.102+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:06:53.102+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:06:53.117+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:06:53.159+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T11:07:23.448+0000] {processor.py:161} INFO - Started process (PID=1134) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:07:23.449+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:07:23.451+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:07:23.450+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:07:23.470+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:07:23.490+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T11:07:53.752+0000] {processor.py:161} INFO - Started process (PID=1142) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:07:53.754+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:07:53.755+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:07:53.755+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:07:53.773+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:07:53.791+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T11:08:24.169+0000] {processor.py:161} INFO - Started process (PID=1152) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:08:24.170+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:08:24.171+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:08:24.171+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:08:24.189+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:08:24.210+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T11:08:54.461+0000] {processor.py:161} INFO - Started process (PID=1160) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:08:54.463+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:08:54.464+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:08:54.464+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:08:54.484+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:08:54.503+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T11:09:24.798+0000] {processor.py:161} INFO - Started process (PID=1168) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:09:24.801+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:09:24.803+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:09:24.802+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:09:24.827+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:09:24.862+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T11:09:55.158+0000] {processor.py:161} INFO - Started process (PID=1176) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:09:55.160+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:09:55.162+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:09:55.162+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:09:55.225+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:09:55.248+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.102 seconds
[2024-05-28T11:10:25.687+0000] {processor.py:161} INFO - Started process (PID=1184) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:10:25.690+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:10:25.692+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:10:25.691+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:10:25.724+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:10:25.771+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.105 seconds
[2024-05-28T11:10:56.297+0000] {processor.py:161} INFO - Started process (PID=1192) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:10:56.298+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:10:56.300+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:10:56.299+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:10:56.316+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:10:56.334+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T11:11:26.595+0000] {processor.py:161} INFO - Started process (PID=1200) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:11:26.597+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:11:26.598+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:11:26.598+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:11:26.617+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:11:26.639+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T11:11:56.898+0000] {processor.py:161} INFO - Started process (PID=1208) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:11:56.899+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:11:56.901+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:11:56.900+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:11:56.918+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:11:56.937+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T11:12:27.452+0000] {processor.py:161} INFO - Started process (PID=1218) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:12:27.456+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:12:27.459+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:12:27.457+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:12:27.485+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:12:27.520+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.084 seconds
[2024-05-28T11:12:57.848+0000] {processor.py:161} INFO - Started process (PID=1227) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:12:57.850+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:12:57.852+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:12:57.851+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:12:57.868+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:12:57.888+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T11:13:28.121+0000] {processor.py:161} INFO - Started process (PID=1235) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:13:28.122+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:13:28.123+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:13:28.123+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:13:28.136+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:13:28.151+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.037 seconds
[2024-05-28T11:13:58.410+0000] {processor.py:161} INFO - Started process (PID=1243) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:13:58.413+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:13:58.415+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:13:58.414+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:13:58.433+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:13:58.495+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.095 seconds
[2024-05-28T11:14:28.730+0000] {processor.py:161} INFO - Started process (PID=1251) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:14:28.732+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:14:28.734+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:14:28.734+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:14:28.752+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:14:28.770+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T11:14:59.009+0000] {processor.py:161} INFO - Started process (PID=1259) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:14:59.011+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:14:59.012+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:14:59.012+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:14:59.027+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:14:59.044+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T11:15:29.409+0000] {processor.py:161} INFO - Started process (PID=1267) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:15:29.411+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:15:29.413+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:15:29.412+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:15:29.431+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:15:29.451+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T11:15:59.949+0000] {processor.py:161} INFO - Started process (PID=1275) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:15:59.950+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:15:59.952+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:15:59.951+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:15:59.968+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:15:59.985+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T11:16:30.210+0000] {processor.py:161} INFO - Started process (PID=1283) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:16:30.211+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:16:30.212+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:16:30.212+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:16:30.228+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:16:30.245+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T11:17:00.511+0000] {processor.py:161} INFO - Started process (PID=1291) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:17:00.513+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:17:00.515+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:17:00.514+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:17:00.532+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:17:00.549+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T11:17:30.786+0000] {processor.py:161} INFO - Started process (PID=1299) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:17:30.788+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:17:30.789+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:17:30.789+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:17:30.804+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:17:30.825+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T11:18:01.066+0000] {processor.py:161} INFO - Started process (PID=1307) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:18:01.068+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:18:01.070+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:18:01.069+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:18:01.089+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:18:01.141+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.087 seconds
[2024-05-28T11:18:31.406+0000] {processor.py:161} INFO - Started process (PID=1315) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:18:31.407+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:18:31.409+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:18:31.408+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:18:31.429+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:18:31.455+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T11:19:01.801+0000] {processor.py:161} INFO - Started process (PID=1323) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:19:01.803+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:19:01.805+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:19:01.804+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:19:01.836+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:19:01.865+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.080 seconds
[2024-05-28T11:19:32.138+0000] {processor.py:161} INFO - Started process (PID=1331) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:19:32.140+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:19:32.141+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:19:32.141+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:19:32.156+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:19:32.175+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T11:20:02.664+0000] {processor.py:161} INFO - Started process (PID=1340) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:20:02.668+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:20:02.676+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:20:02.675+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:20:02.740+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:20:02.796+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.159 seconds
[2024-05-28T11:20:33.253+0000] {processor.py:161} INFO - Started process (PID=1348) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:20:33.257+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:20:33.263+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:20:33.261+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:20:33.296+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:20:33.332+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.096 seconds
[2024-05-28T11:21:03.841+0000] {processor.py:161} INFO - Started process (PID=1356) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:21:03.844+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:21:03.847+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:21:03.846+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:21:03.878+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:21:03.914+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.091 seconds
[2024-05-28T11:21:34.168+0000] {processor.py:161} INFO - Started process (PID=1364) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:21:34.169+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:21:34.171+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:21:34.170+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:21:34.188+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:21:34.212+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T11:22:04.511+0000] {processor.py:161} INFO - Started process (PID=1372) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:22:04.514+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:22:04.516+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:22:04.515+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:22:04.537+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:22:04.558+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T11:22:35.071+0000] {processor.py:161} INFO - Started process (PID=1380) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:22:35.073+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:22:35.074+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:22:35.074+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:22:35.095+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:22:35.118+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T11:23:05.684+0000] {processor.py:161} INFO - Started process (PID=1388) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:23:05.690+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:23:05.696+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:23:05.693+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:23:05.731+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:23:05.775+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.145 seconds
[2024-05-28T11:23:36.174+0000] {processor.py:161} INFO - Started process (PID=1396) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:23:36.176+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:23:36.178+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:23:36.177+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:23:36.192+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:23:36.209+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T11:24:06.556+0000] {processor.py:161} INFO - Started process (PID=1404) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:24:06.562+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:24:06.567+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:24:06.566+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:24:06.621+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:24:06.722+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.190 seconds
[2024-05-28T11:24:37.176+0000] {processor.py:161} INFO - Started process (PID=1412) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:24:37.178+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:24:37.181+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:24:37.180+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:24:37.206+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:24:37.231+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T11:25:07.482+0000] {processor.py:161} INFO - Started process (PID=1420) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:25:07.483+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:25:07.485+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:25:07.484+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:25:07.507+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:25:07.530+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T11:25:38.540+0000] {processor.py:161} INFO - Started process (PID=1429) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:25:38.554+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:25:38.567+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:25:38.561+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:25:38.629+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:25:38.775+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.332 seconds
[2024-05-28T11:26:09.224+0000] {processor.py:161} INFO - Started process (PID=1437) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:26:09.228+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:26:09.230+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:26:09.230+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:26:09.253+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:26:09.279+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T11:26:39.543+0000] {processor.py:161} INFO - Started process (PID=1445) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:26:39.545+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:26:39.547+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:26:39.547+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:26:39.565+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:26:39.586+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T11:27:09.947+0000] {processor.py:161} INFO - Started process (PID=1454) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:27:09.950+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:27:09.953+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:27:09.952+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:27:09.979+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:27:10.035+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.109 seconds
[2024-05-28T11:27:40.299+0000] {processor.py:161} INFO - Started process (PID=1462) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:27:40.300+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:27:40.302+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:27:40.302+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:27:40.324+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:27:40.342+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T11:28:10.730+0000] {processor.py:161} INFO - Started process (PID=1469) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:28:10.731+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:28:10.733+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:28:10.732+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:28:10.753+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:28:10.776+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.055 seconds
[2024-05-28T11:28:41.010+0000] {processor.py:161} INFO - Started process (PID=1477) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:28:41.011+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:28:41.013+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:28:41.012+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:28:41.028+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:28:41.045+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T11:29:11.304+0000] {processor.py:161} INFO - Started process (PID=1485) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:29:11.307+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:29:11.309+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:29:11.309+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:29:11.327+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:29:11.355+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.062 seconds
[2024-05-28T11:29:41.575+0000] {processor.py:161} INFO - Started process (PID=1493) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:29:41.576+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:29:41.578+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:29:41.578+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:29:41.593+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:29:41.614+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T11:30:11.844+0000] {processor.py:161} INFO - Started process (PID=1501) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:30:11.846+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:30:11.847+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:30:11.846+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:30:11.864+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:30:11.882+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T11:30:42.138+0000] {processor.py:161} INFO - Started process (PID=1509) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:30:42.140+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:30:42.142+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:30:42.141+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:30:42.167+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:30:42.198+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T11:31:12.867+0000] {processor.py:161} INFO - Started process (PID=1518) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:31:12.868+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:31:12.869+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:31:12.869+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:31:12.883+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:31:12.899+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T11:31:43.189+0000] {processor.py:161} INFO - Started process (PID=1526) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:31:43.190+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:31:43.192+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:31:43.191+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:31:43.208+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:31:43.229+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.048 seconds
[2024-05-28T11:32:13.448+0000] {processor.py:161} INFO - Started process (PID=1534) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:32:13.450+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:32:13.451+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:32:13.451+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:32:13.466+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:32:13.485+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T11:32:44.364+0000] {processor.py:161} INFO - Started process (PID=1544) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:32:44.366+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:32:44.368+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:32:44.367+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:32:44.390+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:32:44.419+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T11:33:14.641+0000] {processor.py:161} INFO - Started process (PID=1552) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:33:14.642+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:33:14.644+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:33:14.643+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:33:14.658+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:33:14.674+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.040 seconds
[2024-05-28T11:33:44.916+0000] {processor.py:161} INFO - Started process (PID=1560) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:33:44.918+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:33:44.921+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:33:44.920+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:33:44.950+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:33:44.978+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T11:34:15.221+0000] {processor.py:161} INFO - Started process (PID=1568) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:34:15.222+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:34:15.224+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:34:15.223+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:34:15.243+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:34:15.263+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T11:34:46.134+0000] {processor.py:161} INFO - Started process (PID=1576) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:34:46.136+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:34:46.137+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:34:46.137+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:34:46.158+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:34:46.187+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.063 seconds
[2024-05-28T11:35:16.468+0000] {processor.py:161} INFO - Started process (PID=1597) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:35:16.469+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:35:16.471+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:35:16.470+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:35:16.486+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:35:16.502+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T11:35:46.975+0000] {processor.py:161} INFO - Started process (PID=1605) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:35:46.976+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:35:46.978+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:35:46.978+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:35:46.994+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:35:47.009+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.041 seconds
[2024-05-28T11:36:17.450+0000] {processor.py:161} INFO - Started process (PID=1613) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:36:17.455+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:36:17.460+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:36:17.457+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:36:17.519+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:36:17.624+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.234 seconds
[2024-05-28T11:36:48.646+0000] {processor.py:161} INFO - Started process (PID=1621) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:36:48.650+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:36:48.652+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:36:48.651+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:36:48.677+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:36:48.706+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.077 seconds
[2024-05-28T11:37:19.090+0000] {processor.py:161} INFO - Started process (PID=1629) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:37:19.092+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:37:19.093+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:37:19.093+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:37:19.112+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:37:19.131+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T11:37:49.386+0000] {processor.py:161} INFO - Started process (PID=1637) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:37:49.388+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:37:49.390+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:37:49.390+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:37:49.417+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:37:49.451+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.082 seconds
[2024-05-28T11:38:19.821+0000] {processor.py:161} INFO - Started process (PID=1645) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:38:19.823+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:38:19.825+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:38:19.825+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:38:19.849+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:38:19.877+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T11:38:50.203+0000] {processor.py:161} INFO - Started process (PID=1654) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:38:50.205+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:38:50.206+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:38:50.206+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:38:50.220+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:38:50.237+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.041 seconds
[2024-05-28T11:39:20.458+0000] {processor.py:161} INFO - Started process (PID=1662) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:39:20.459+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:39:20.460+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:39:20.460+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:39:20.476+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:39:20.493+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T11:39:50.722+0000] {processor.py:161} INFO - Started process (PID=1670) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:39:50.723+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:39:50.725+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:39:50.724+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:39:50.741+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:39:50.758+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T11:40:21.007+0000] {processor.py:161} INFO - Started process (PID=1678) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:40:21.008+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:40:21.010+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:40:21.009+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:40:21.025+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:40:21.045+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T11:40:51.491+0000] {processor.py:161} INFO - Started process (PID=1686) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:40:51.493+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:40:51.494+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:40:51.494+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:40:51.513+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:40:51.532+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T11:41:21.764+0000] {processor.py:161} INFO - Started process (PID=1694) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:41:21.765+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:41:21.766+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:41:21.766+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:41:21.778+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:41:21.795+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T11:41:52.026+0000] {processor.py:161} INFO - Started process (PID=1702) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:41:52.027+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:41:52.029+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:41:52.028+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:41:52.044+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:41:52.063+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T11:42:22.294+0000] {processor.py:161} INFO - Started process (PID=1710) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:42:22.296+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:42:22.297+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:42:22.297+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:42:22.313+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:42:22.330+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T11:42:52.626+0000] {processor.py:161} INFO - Started process (PID=1719) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:42:52.628+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:42:52.629+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:42:52.628+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:42:52.643+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:42:52.660+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.041 seconds
[2024-05-28T11:43:22.943+0000] {processor.py:161} INFO - Started process (PID=1727) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:43:22.945+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:43:22.946+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:43:22.945+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:43:22.961+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:43:22.978+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T11:43:53.470+0000] {processor.py:161} INFO - Started process (PID=1737) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:43:53.472+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:43:53.475+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:43:53.474+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:43:53.505+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:43:53.534+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.077 seconds
[2024-05-28T11:44:23.919+0000] {processor.py:161} INFO - Started process (PID=1745) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:44:23.921+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:44:23.922+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:44:23.921+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:44:23.935+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:44:23.951+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T11:44:54.177+0000] {processor.py:161} INFO - Started process (PID=1754) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:44:54.179+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:44:54.180+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:44:54.179+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:44:54.200+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:44:54.267+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.104 seconds
[2024-05-28T11:45:24.503+0000] {processor.py:161} INFO - Started process (PID=1762) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:45:24.505+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:45:24.506+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:45:24.506+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:45:24.520+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:45:24.537+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T11:45:54.997+0000] {processor.py:161} INFO - Started process (PID=1770) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:45:54.999+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:45:55.000+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:45:55.000+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:45:55.015+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:45:55.033+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T11:46:25.274+0000] {processor.py:161} INFO - Started process (PID=1778) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:46:25.276+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:46:25.278+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:46:25.277+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:46:25.298+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:46:25.318+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.055 seconds
[2024-05-28T11:46:55.554+0000] {processor.py:161} INFO - Started process (PID=1786) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:46:55.555+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:46:55.557+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:46:55.556+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:46:55.573+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:46:55.593+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T11:47:25.878+0000] {processor.py:161} INFO - Started process (PID=1795) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:47:25.879+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:47:25.880+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:47:25.880+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:47:25.897+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:47:25.917+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T11:47:56.190+0000] {processor.py:161} INFO - Started process (PID=1803) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:47:56.191+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:47:56.192+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:47:56.192+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:47:56.207+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:47:56.227+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T11:48:26.504+0000] {processor.py:161} INFO - Started process (PID=1811) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:48:26.506+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:48:26.508+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:48:26.508+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:48:26.531+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:48:26.557+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.064 seconds
[2024-05-28T11:48:56.906+0000] {processor.py:161} INFO - Started process (PID=1819) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:48:56.908+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:48:56.910+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:48:56.910+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:48:56.934+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:48:56.959+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T11:49:27.220+0000] {processor.py:161} INFO - Started process (PID=1827) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:49:27.221+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:49:27.223+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:49:27.222+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:49:27.238+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:49:27.257+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T11:49:57.517+0000] {processor.py:161} INFO - Started process (PID=1835) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:49:57.519+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:49:57.520+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:49:57.520+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:49:57.534+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:49:57.551+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T11:50:27.868+0000] {processor.py:161} INFO - Started process (PID=1843) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:50:27.871+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:50:27.874+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:50:27.873+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:50:27.898+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:50:27.928+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T11:50:58.376+0000] {processor.py:161} INFO - Started process (PID=1853) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:50:58.378+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:50:58.381+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:50:58.380+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:50:58.412+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:50:58.448+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.087 seconds
[2024-05-28T11:51:28.779+0000] {processor.py:161} INFO - Started process (PID=1861) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:51:28.781+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:51:28.786+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:51:28.783+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:51:28.812+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:51:28.840+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.085 seconds
[2024-05-28T11:51:59.092+0000] {processor.py:161} INFO - Started process (PID=1869) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:51:59.093+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:51:59.095+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:51:59.094+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:51:59.112+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:51:59.129+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T11:52:29.442+0000] {processor.py:161} INFO - Started process (PID=1877) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:52:29.443+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:52:29.444+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:52:29.444+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:52:29.458+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:52:29.475+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T11:52:59.710+0000] {processor.py:161} INFO - Started process (PID=1885) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:52:59.711+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:52:59.712+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:52:59.712+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:52:59.729+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:52:59.746+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T11:53:30.087+0000] {processor.py:161} INFO - Started process (PID=1894) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:53:30.089+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:53:30.092+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:53:30.091+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:53:30.122+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:53:30.154+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.082 seconds
[2024-05-28T11:54:00.367+0000] {processor.py:161} INFO - Started process (PID=1903) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:54:00.369+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:54:00.370+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:54:00.370+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:54:00.388+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:54:00.409+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T11:54:30.822+0000] {processor.py:161} INFO - Started process (PID=1912) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:54:30.823+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:54:30.825+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:54:30.824+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:54:30.838+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:54:30.859+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T11:55:01.144+0000] {processor.py:161} INFO - Started process (PID=1920) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:55:01.146+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:55:01.149+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:55:01.148+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:55:01.173+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:55:01.205+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T11:55:31.477+0000] {processor.py:161} INFO - Started process (PID=1928) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:55:31.478+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:55:31.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:55:31.479+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:55:31.496+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:55:31.518+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T11:56:01.989+0000] {processor.py:161} INFO - Started process (PID=1936) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:56:01.991+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:56:01.993+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:56:01.992+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:56:02.012+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:56:02.030+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T11:56:32.273+0000] {processor.py:161} INFO - Started process (PID=1944) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:56:32.274+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:56:32.276+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:56:32.275+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:56:32.290+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:56:32.306+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.040 seconds
[2024-05-28T11:57:02.524+0000] {processor.py:161} INFO - Started process (PID=1952) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:57:02.526+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:57:02.528+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:57:02.527+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:57:02.542+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:57:02.557+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.040 seconds
[2024-05-28T11:57:32.803+0000] {processor.py:161} INFO - Started process (PID=1961) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:57:32.804+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:57:32.807+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:57:32.805+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:57:32.824+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:57:32.880+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.087 seconds
[2024-05-28T11:58:03.123+0000] {processor.py:161} INFO - Started process (PID=1969) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:58:03.125+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:58:03.127+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:58:03.126+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:58:03.140+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:58:03.156+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.040 seconds
[2024-05-28T11:58:33.417+0000] {processor.py:161} INFO - Started process (PID=1977) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:58:33.420+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:58:33.422+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:58:33.421+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:58:33.441+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:58:33.462+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T11:59:03.737+0000] {processor.py:161} INFO - Started process (PID=1985) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:59:03.739+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:59:03.742+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:59:03.741+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:59:03.768+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:59:03.789+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.064 seconds
[2024-05-28T11:59:34.047+0000] {processor.py:161} INFO - Started process (PID=1993) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:59:34.049+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T11:59:34.051+0000] {logging_mixin.py:188} INFO - [2024-05-28T11:59:34.050+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:59:34.070+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T11:59:34.092+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T12:00:04.362+0000] {processor.py:161} INFO - Started process (PID=2001) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:00:04.363+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:00:04.365+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:00:04.365+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:00:04.391+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:00:04.419+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T12:00:34.677+0000] {processor.py:161} INFO - Started process (PID=2009) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:00:34.679+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:00:34.681+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:00:34.681+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:00:34.700+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:00:34.770+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.108 seconds
[2024-05-28T12:01:05.231+0000] {processor.py:161} INFO - Started process (PID=2018) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:01:05.232+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:01:05.233+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:01:05.233+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:01:05.251+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:01:05.268+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T12:01:35.796+0000] {processor.py:161} INFO - Started process (PID=2028) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:01:35.798+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:01:35.799+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:01:35.799+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:01:35.814+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:01:35.831+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T12:02:06.120+0000] {processor.py:161} INFO - Started process (PID=2036) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:02:06.123+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:02:06.125+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:02:06.124+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:02:06.144+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:02:06.166+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T12:02:36.426+0000] {processor.py:161} INFO - Started process (PID=2044) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:02:36.427+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:02:36.429+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:02:36.428+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:02:36.445+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:02:36.462+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T12:03:06.706+0000] {processor.py:161} INFO - Started process (PID=2052) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:03:06.707+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:03:06.709+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:03:06.709+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:03:06.725+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:03:06.744+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T12:03:37.032+0000] {processor.py:161} INFO - Started process (PID=2061) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:03:37.034+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:03:37.035+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:03:37.035+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:03:37.051+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:03:37.070+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T12:04:07.512+0000] {processor.py:161} INFO - Started process (PID=2070) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:04:07.514+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:04:07.515+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:04:07.515+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:04:07.534+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:04:07.556+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T12:04:37.797+0000] {processor.py:161} INFO - Started process (PID=2079) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:04:37.798+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:04:37.800+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:04:37.799+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:04:37.814+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:04:37.831+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T12:05:08.074+0000] {processor.py:161} INFO - Started process (PID=2087) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:05:08.075+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:05:08.076+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:05:08.076+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:05:08.090+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:05:08.107+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T12:05:38.433+0000] {processor.py:161} INFO - Started process (PID=2096) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:05:38.435+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:05:38.437+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:05:38.436+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:05:38.462+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:05:38.489+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T12:06:08.751+0000] {processor.py:161} INFO - Started process (PID=2105) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:06:08.755+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:06:08.758+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:06:08.757+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:06:08.806+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:06:08.843+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.110 seconds
[2024-05-28T12:06:39.531+0000] {processor.py:161} INFO - Started process (PID=2113) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:06:39.533+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:06:39.538+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:06:39.535+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:06:39.566+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:06:39.599+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.088 seconds
[2024-05-28T12:07:10.113+0000] {processor.py:161} INFO - Started process (PID=2121) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:07:10.116+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:07:10.119+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:07:10.118+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:07:10.141+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:07:10.166+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.075 seconds
[2024-05-28T12:07:40.431+0000] {processor.py:161} INFO - Started process (PID=2129) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:07:40.433+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:07:40.440+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:07:40.439+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:07:40.475+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:07:40.508+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.096 seconds
[2024-05-28T12:08:10.708+0000] {processor.py:161} INFO - Started process (PID=2137) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:08:10.709+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:08:10.710+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:08:10.710+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:08:10.727+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:08:10.748+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.048 seconds
[2024-05-28T12:08:41.022+0000] {processor.py:161} INFO - Started process (PID=2145) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:08:41.023+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:08:41.024+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:08:41.024+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:08:41.037+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:08:41.051+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.037 seconds
[2024-05-28T12:09:11.272+0000] {processor.py:161} INFO - Started process (PID=2153) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:09:11.273+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:09:11.274+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:09:11.274+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:09:11.289+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:09:11.305+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.041 seconds
[2024-05-28T12:09:41.519+0000] {processor.py:161} INFO - Started process (PID=2161) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:09:41.521+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:09:41.523+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:09:41.523+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:09:41.541+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:09:41.562+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T12:10:11.776+0000] {processor.py:161} INFO - Started process (PID=2170) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:10:11.777+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:10:11.779+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:10:11.778+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:10:11.793+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:10:11.810+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T12:10:42.043+0000] {processor.py:161} INFO - Started process (PID=2178) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:10:42.045+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:10:42.046+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:10:42.045+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:10:42.061+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:10:42.077+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T12:11:12.426+0000] {processor.py:161} INFO - Started process (PID=2186) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:11:12.427+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:11:12.428+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:11:12.428+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:11:12.442+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:11:12.458+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.041 seconds
[2024-05-28T12:11:42.676+0000] {processor.py:161} INFO - Started process (PID=2194) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:11:42.677+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:11:42.678+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:11:42.678+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:11:42.690+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:11:42.706+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.037 seconds
[2024-05-28T12:12:12.931+0000] {processor.py:161} INFO - Started process (PID=2203) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:12:12.933+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:12:12.934+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:12:12.933+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:12:12.948+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:12:12.963+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T12:12:43.238+0000] {processor.py:161} INFO - Started process (PID=2211) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:12:43.240+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:12:43.241+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:12:43.241+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:12:43.262+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:12:43.287+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T12:13:13.393+0000] {processor.py:161} INFO - Started process (PID=2219) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:13:13.395+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:13:13.396+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:13:13.396+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:13:13.413+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:13:13.431+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T12:13:43.845+0000] {processor.py:161} INFO - Started process (PID=2228) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:13:43.847+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:13:43.848+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:13:43.848+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:13:43.868+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:13:43.888+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T12:14:14.167+0000] {processor.py:161} INFO - Started process (PID=2236) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:14:14.170+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:14:14.171+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:14:14.171+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:14:14.190+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:14:14.215+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T12:14:44.508+0000] {processor.py:161} INFO - Started process (PID=2244) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:14:44.510+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:14:44.511+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:14:44.511+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:14:44.529+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:14:44.551+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T12:15:15.032+0000] {processor.py:161} INFO - Started process (PID=2252) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:15:15.035+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:15:15.037+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:15:15.036+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:15:15.065+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:15:15.104+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.089 seconds
[2024-05-28T12:15:45.452+0000] {processor.py:161} INFO - Started process (PID=2260) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:15:45.454+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:15:45.455+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:15:45.455+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:15:45.471+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:15:45.489+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T12:16:16.090+0000] {processor.py:161} INFO - Started process (PID=2268) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:16:16.092+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:16:16.095+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:16:16.094+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:16:16.126+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:16:16.165+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.091 seconds
[2024-05-28T12:16:46.349+0000] {processor.py:161} INFO - Started process (PID=2276) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:16:46.351+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:16:46.353+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:16:46.353+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:16:46.375+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:16:46.403+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T12:17:16.653+0000] {processor.py:161} INFO - Started process (PID=2284) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:17:16.655+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:17:16.657+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:17:16.657+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:17:16.681+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:17:16.718+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.076 seconds
[2024-05-28T12:17:47.046+0000] {processor.py:161} INFO - Started process (PID=2292) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:17:47.047+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:17:47.049+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:17:47.048+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:17:47.068+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:17:47.093+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T12:18:17.321+0000] {processor.py:161} INFO - Started process (PID=2300) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:18:17.323+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:18:17.324+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:18:17.323+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:18:17.337+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:18:17.353+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T12:18:47.604+0000] {processor.py:161} INFO - Started process (PID=2308) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:18:47.606+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:18:47.608+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:18:47.607+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:18:47.628+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:18:47.654+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T12:19:17.937+0000] {processor.py:161} INFO - Started process (PID=2316) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:19:17.939+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:19:17.940+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:19:17.940+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:19:17.960+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:19:17.987+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T12:19:48.209+0000] {processor.py:161} INFO - Started process (PID=2324) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:19:48.210+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:19:48.211+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:19:48.211+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:19:48.226+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:19:48.242+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.040 seconds
[2024-05-28T12:20:18.476+0000] {processor.py:161} INFO - Started process (PID=2332) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:20:18.478+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:20:18.480+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:20:18.479+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:20:18.499+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:20:18.522+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T12:20:48.932+0000] {processor.py:161} INFO - Started process (PID=2340) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:20:48.933+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:20:48.935+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:20:48.934+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:20:48.951+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:20:48.969+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T12:21:19.767+0000] {processor.py:161} INFO - Started process (PID=2348) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:21:19.775+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:21:19.792+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:21:19.788+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:21:19.830+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:21:19.862+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.108 seconds
[2024-05-28T12:21:59.901+0000] {processor.py:161} INFO - Started process (PID=2356) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:21:59.907+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:21:59.909+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:21:59.908+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:21:59.934+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:21:59.978+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.093 seconds
[2024-05-28T12:22:30.321+0000] {processor.py:161} INFO - Started process (PID=2364) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:22:30.323+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:22:30.326+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:22:30.325+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:22:30.346+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:22:30.371+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T12:23:00.627+0000] {processor.py:161} INFO - Started process (PID=2372) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:23:00.628+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:23:00.630+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:23:00.629+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:23:00.645+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:23:00.661+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T12:23:30.914+0000] {processor.py:161} INFO - Started process (PID=2380) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:23:30.916+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:23:30.918+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:23:30.917+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:23:30.932+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:23:30.949+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T12:24:01.251+0000] {processor.py:161} INFO - Started process (PID=2388) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:24:01.253+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:24:01.254+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:24:01.254+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:24:01.269+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:24:01.287+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T12:24:31.716+0000] {processor.py:161} INFO - Started process (PID=2396) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:24:31.719+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:24:31.722+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:24:31.720+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:24:31.765+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:24:31.804+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.104 seconds
[2024-05-28T12:25:02.094+0000] {processor.py:161} INFO - Started process (PID=2404) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:25:02.096+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:25:02.098+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:25:02.098+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:25:02.115+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:25:02.134+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T12:25:32.387+0000] {processor.py:161} INFO - Started process (PID=2412) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:25:32.388+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:25:32.390+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:25:32.389+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:25:32.405+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:25:32.422+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T12:26:03.034+0000] {processor.py:161} INFO - Started process (PID=2420) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:26:03.035+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:26:03.037+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:26:03.036+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:26:03.051+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:26:03.067+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T12:26:33.341+0000] {processor.py:161} INFO - Started process (PID=2428) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:26:33.343+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:26:33.345+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:26:33.344+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:26:33.368+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:26:33.394+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T12:27:03.669+0000] {processor.py:161} INFO - Started process (PID=2436) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:27:03.671+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:27:03.673+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:27:03.672+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:27:03.698+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:27:03.724+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T12:27:34.006+0000] {processor.py:161} INFO - Started process (PID=2444) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:27:34.007+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:27:34.009+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:27:34.009+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:27:34.028+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:27:34.049+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T12:28:04.334+0000] {processor.py:161} INFO - Started process (PID=2452) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:28:04.335+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:28:04.337+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:28:04.336+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:28:04.356+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:28:04.383+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T12:28:34.550+0000] {processor.py:161} INFO - Started process (PID=2460) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:28:34.552+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:28:34.553+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:28:34.553+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:28:34.572+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:28:34.592+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T12:29:04.970+0000] {processor.py:161} INFO - Started process (PID=2468) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:29:04.972+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:29:04.980+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:29:04.977+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:29:05.005+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:29:05.051+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.096 seconds
[2024-05-28T12:29:35.311+0000] {processor.py:161} INFO - Started process (PID=2476) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:29:35.313+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:29:35.315+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:29:35.314+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:29:35.331+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:29:35.354+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T12:30:06.424+0000] {processor.py:161} INFO - Started process (PID=2495) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:30:06.431+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:30:06.434+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:30:06.433+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:30:06.521+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:30:06.610+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.227 seconds
[2024-05-28T12:30:39.287+0000] {processor.py:161} INFO - Started process (PID=2510) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:30:39.406+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:30:39.455+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:30:39.423+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:30:39.795+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:30:40.861+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 2.295 seconds
[2024-05-28T12:31:12.320+0000] {processor.py:161} INFO - Started process (PID=2526) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:31:12.327+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:31:12.423+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:31:12.421+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:31:12.676+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:31:12.768+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.597 seconds
[2024-05-28T12:31:46.058+0000] {processor.py:161} INFO - Started process (PID=2543) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:31:46.082+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:31:46.088+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:31:46.084+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:31:46.167+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:31:46.742+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.876 seconds
[2024-05-28T12:32:18.036+0000] {processor.py:161} INFO - Started process (PID=2559) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:32:18.106+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:32:18.207+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:32:18.139+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:32:18.827+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:32:32.872+0000] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 3371, in _wrap_pool_connect
    return fn()
           ^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 327, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 894, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 493, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/impl.py", line 145, in _do_get
    with util.safe_reraise():
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/impl.py", line 143, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 273, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 388, in __init__
    self.__connect()
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 690, in __connect
    with util.safe_reraise():
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 686, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/create.py", line 574, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 598, in connect
    return self.dbapi.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
psycopg2.OperationalError: could not translate host name "postgres" to address: Temporary failure in name resolution


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 843, in process_file
    DagFileProcessor.update_import_errors(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 115, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 615, in update_import_errors
    session.execute(
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 750, in _connection_for_bind
    conn = bind.connect()
           ^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/future/engine.py", line 412, in connect
    return super(Engine, self).connect()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 3325, in connect
    return self._connection_cls(self, close_with_result=close_with_result)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 96, in __init__
    else engine.raw_connection()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 3404, in raw_connection
    return self._wrap_pool_connect(self.pool.connect, _connection)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 3374, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 2208, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 3371, in _wrap_pool_connect
    return fn()
           ^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 327, in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 894, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 493, in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/impl.py", line 145, in _do_get
    with util.safe_reraise():
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/impl.py", line 143, in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 273, in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 388, in __init__
    self.__connect()
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 690, in __connect
    with util.safe_reraise():
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 686, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/create.py", line 574, in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 598, in connect
    return self.dbapi.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not translate host name "postgres" to address: Temporary failure in name resolution

(Background on this error at: https://sqlalche.me/e/14/e3q8)
[2024-05-28T12:33:06.005+0000] {processor.py:161} INFO - Started process (PID=2575) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:33:06.034+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:33:06.080+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:33:06.052+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:33:06.574+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:33:13.287+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 7.857 seconds
[2024-05-28T12:33:46.303+0000] {processor.py:161} INFO - Started process (PID=2582) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:33:46.330+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:33:46.457+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:33:46.422+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:33:46.705+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:33:47.086+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.141 seconds
[2024-05-28T12:34:17.655+0000] {processor.py:161} INFO - Started process (PID=2590) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:34:17.657+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:34:17.659+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:34:17.659+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:34:17.684+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:34:17.721+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.076 seconds
[2024-05-28T12:34:48.045+0000] {processor.py:161} INFO - Started process (PID=2597) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:34:48.047+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:34:48.049+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:34:48.048+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:34:48.063+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:34:48.083+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T12:35:19.780+0000] {processor.py:161} INFO - Started process (PID=2614) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:35:19.804+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:35:19.832+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:35:19.819+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:35:20.112+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:35:20.665+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.169 seconds
[2024-05-28T12:35:58.456+0000] {processor.py:161} INFO - Started process (PID=2629) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:35:58.642+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:35:58.848+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:35:58.688+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:35:59.877+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:36:02.476+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 4.978 seconds
[2024-05-28T12:36:33.051+0000] {processor.py:161} INFO - Started process (PID=2630) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:36:33.056+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:36:33.063+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:36:33.059+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:36:33.104+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:36:33.173+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.178 seconds
[2024-05-28T12:37:03.444+0000] {processor.py:161} INFO - Started process (PID=2638) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:37:03.446+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:37:03.449+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:37:03.448+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:37:03.471+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:37:03.504+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T12:37:33.762+0000] {processor.py:161} INFO - Started process (PID=2646) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:37:33.764+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:37:33.765+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:37:33.765+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:37:33.780+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:37:33.796+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T12:38:04.075+0000] {processor.py:161} INFO - Started process (PID=2654) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:38:04.076+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:38:04.077+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:38:04.077+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:38:04.094+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:38:04.111+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T12:38:34.480+0000] {processor.py:161} INFO - Started process (PID=2669) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:38:34.484+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:38:34.488+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:38:34.487+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:38:34.532+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:38:34.557+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.091 seconds
[2024-05-28T12:39:05.221+0000] {processor.py:161} INFO - Started process (PID=2680) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:39:05.223+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:39:05.224+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:39:05.224+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:39:05.245+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:39:05.267+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T12:39:35.763+0000] {processor.py:161} INFO - Started process (PID=2689) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:39:35.767+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:39:35.769+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:39:35.769+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:39:35.792+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:39:35.811+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T12:40:06.353+0000] {processor.py:161} INFO - Started process (PID=2699) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:40:06.357+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:40:06.359+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:40:06.358+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:40:06.385+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:40:06.412+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.077 seconds
[2024-05-28T12:40:36.792+0000] {processor.py:161} INFO - Started process (PID=2707) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:40:36.795+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:40:36.796+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:40:36.796+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:40:36.814+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:40:36.835+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T12:41:06.936+0000] {processor.py:161} INFO - Started process (PID=2716) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:41:06.938+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:41:06.940+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:41:06.939+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:41:06.962+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:41:06.995+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T12:41:37.356+0000] {processor.py:161} INFO - Started process (PID=2724) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:41:37.358+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:41:37.360+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:41:37.359+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:41:37.382+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:41:37.409+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.064 seconds
[2024-05-28T12:42:07.660+0000] {processor.py:161} INFO - Started process (PID=2733) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:42:07.662+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:42:07.663+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:42:07.663+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:42:07.679+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:42:07.694+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T12:42:37.946+0000] {processor.py:161} INFO - Started process (PID=2741) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:42:37.948+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:42:37.950+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:42:37.949+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:42:37.969+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:42:37.987+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T12:43:08.343+0000] {processor.py:161} INFO - Started process (PID=2749) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:43:08.345+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:43:08.347+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:43:08.347+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:43:08.372+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:43:08.407+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.080 seconds
[2024-05-28T12:43:38.702+0000] {processor.py:161} INFO - Started process (PID=2757) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:43:38.704+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:43:38.706+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:43:38.705+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:43:38.729+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:43:38.752+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T12:44:09.007+0000] {processor.py:161} INFO - Started process (PID=2765) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:44:09.009+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:44:09.011+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:44:09.010+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:44:09.029+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:44:09.052+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.055 seconds
[2024-05-28T12:44:39.317+0000] {processor.py:161} INFO - Started process (PID=2773) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:44:39.318+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:44:39.320+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:44:39.319+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:44:39.335+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:44:39.353+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T12:45:09.891+0000] {processor.py:161} INFO - Started process (PID=2782) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:45:09.894+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:45:09.897+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:45:09.896+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:45:09.929+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:45:09.972+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.102 seconds
[2024-05-28T12:45:40.346+0000] {processor.py:161} INFO - Started process (PID=2791) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:45:40.347+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:45:40.349+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:45:40.348+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:45:40.367+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:45:40.385+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T12:46:10.957+0000] {processor.py:161} INFO - Started process (PID=2800) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:46:10.959+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:46:10.961+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:46:10.960+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:46:10.981+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:46:11.005+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T12:46:42.234+0000] {processor.py:161} INFO - Started process (PID=2810) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:46:42.246+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:46:42.257+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:46:42.255+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:46:42.497+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:46:42.576+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.465 seconds
[2024-05-28T12:47:13.444+0000] {processor.py:161} INFO - Started process (PID=2818) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:47:13.445+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:47:13.446+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:47:13.446+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:47:13.461+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:47:13.476+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.040 seconds
[2024-05-28T12:47:43.872+0000] {processor.py:161} INFO - Started process (PID=2826) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:47:43.874+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:47:43.876+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:47:43.875+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:47:43.895+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:47:43.953+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.096 seconds
[2024-05-28T12:48:14.245+0000] {processor.py:161} INFO - Started process (PID=2834) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:48:14.247+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:48:14.248+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:48:14.247+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:48:14.266+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:48:14.289+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T12:48:44.547+0000] {processor.py:161} INFO - Started process (PID=2842) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:48:44.548+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:48:44.550+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:48:44.550+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:48:44.566+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:48:44.584+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.045 seconds
[2024-05-28T12:49:14.929+0000] {processor.py:161} INFO - Started process (PID=2850) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:49:14.931+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:49:14.933+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:49:14.932+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:49:14.958+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:49:15.000+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.086 seconds
[2024-05-28T12:49:45.303+0000] {processor.py:161} INFO - Started process (PID=2858) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:49:45.306+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:49:45.308+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:49:45.308+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:49:45.326+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:49:45.348+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T12:50:15.609+0000] {processor.py:161} INFO - Started process (PID=2866) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:50:15.612+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:50:15.613+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:50:15.613+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:50:15.628+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:50:15.648+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.047 seconds
[2024-05-28T12:50:45.898+0000] {processor.py:161} INFO - Started process (PID=2874) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:50:45.899+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:50:45.901+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:50:45.900+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:50:45.917+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:50:45.935+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.048 seconds
[2024-05-28T12:51:16.440+0000] {processor.py:161} INFO - Started process (PID=2882) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:51:16.441+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:51:16.442+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:51:16.442+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:51:16.456+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:51:16.474+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.040 seconds
[2024-05-28T12:51:46.705+0000] {processor.py:161} INFO - Started process (PID=2890) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:51:46.706+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:51:46.708+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:51:46.707+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:51:46.721+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:51:46.738+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.040 seconds
[2024-05-28T12:52:16.984+0000] {processor.py:161} INFO - Started process (PID=2898) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:52:16.987+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:52:16.988+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:52:16.987+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:52:17.003+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:52:17.019+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T12:52:47.334+0000] {processor.py:161} INFO - Started process (PID=2906) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:52:47.337+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:52:47.340+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:52:47.339+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:52:47.365+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:52:47.390+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T12:53:17.678+0000] {processor.py:161} INFO - Started process (PID=2914) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:53:17.682+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T12:53:17.685+0000] {logging_mixin.py:188} INFO - [2024-05-28T12:53:17.684+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:53:17.717+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T12:53:17.751+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.090 seconds
[2024-05-28T13:08:39.252+0000] {processor.py:161} INFO - Started process (PID=2917) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:08:39.255+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:08:39.262+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:08:39.260+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:08:39.294+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:08:39.322+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.082 seconds
[2024-05-28T13:08:44.486+0000] {processor.py:161} INFO - Started process (PID=2925) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:08:44.488+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:08:44.490+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:08:44.489+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:08:44.584+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T13:08:44.589+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:08:44.595+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:08:44.600+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T13:08:44.604+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:08:44.609+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:08:44.613+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:08:44.619+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:08:44.623+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:08:44.649+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:08:45.477+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:08:45.477+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:08:45.497+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:08:45.497+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:08:45.551+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.077 seconds
[2024-05-28T13:09:15.821+0000] {processor.py:161} INFO - Started process (PID=2933) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:15.822+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:09:15.824+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:15.823+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:15.857+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T13:09:15.861+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:09:15.865+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:09:15.868+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T13:09:15.871+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:09:15.875+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:09:15.879+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:09:15.882+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:09:15.885+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:09:15.899+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:15.933+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:15.933+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:09:15.949+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:15.948+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:09:15.971+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.170 seconds
[2024-05-28T13:09:46.244+0000] {processor.py:161} INFO - Started process (PID=2941) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:46.245+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:09:46.247+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:46.246+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:46.272+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T13:09:46.275+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:09:46.279+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:09:46.284+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T13:09:46.289+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:09:46.293+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:09:46.297+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:09:46.302+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:09:46.306+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:09:46.322+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:46.368+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:46.367+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:09:46.400+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:46.400+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:09:46.421+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.185 seconds
[2024-05-28T13:09:58.590+0000] {processor.py:161} INFO - Started process (PID=2943) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:58.592+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:09:58.596+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:58.594+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:58.655+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T13:09:58.660+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:09:58.666+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:09:58.671+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T13:09:58.677+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:09:58.683+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:09:58.687+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:09:58.692+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:09:58.696+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:09:58.716+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:09:58.755+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:58.755+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:09:58.772+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:09:58.772+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:09:58.801+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.223 seconds
[2024-05-28T13:10:29.088+0000] {processor.py:161} INFO - Started process (PID=2952) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:10:29.089+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:10:29.091+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:10:29.090+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:10:29.113+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T13:10:29.117+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:10:29.120+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:10:29.124+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T13:10:29.128+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:10:29.132+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:10:29.136+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:10:29.139+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:10:29.143+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:10:29.159+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:10:29.204+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:10:29.203+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:10:29.224+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:10:29.223+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:10:29.258+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.180 seconds
[2024-05-28T13:10:59.502+0000] {processor.py:161} INFO - Started process (PID=2960) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:10:59.503+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:10:59.505+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:10:59.504+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:10:59.542+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T13:10:59.548+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:10:59.552+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:10:59.556+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T13:10:59.559+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:10:59.563+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:10:59.567+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:10:59.570+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:10:59.573+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:10:59.587+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:10:59.630+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:10:59.630+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:10:59.650+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:10:59.650+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:10:59.687+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.194 seconds
[2024-05-28T13:11:30.194+0000] {processor.py:161} INFO - Started process (PID=2969) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:11:30.199+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:11:30.240+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:11:30.219+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:11:30.309+0000] {logging_mixin.py:188} INFO - -- quá trình upload dataset lên bogquerry, header của mỗi cột bị sai thành field 0_1_2... nên cần query để đổi lại tên cho mỗi header
create or replace table `datawarehouse-423912.warehouse.newupdated_customers`
as 
select string_field_0 as customerID,
string_field_1 as companyName,
string_field_2 as contactName,
string_field_3 as contactTitle,
string_field_4 as address,
string_field_5 as city,
string_field_6 as region,
string_field_7 as postalCode,
string_field_8 as country,
string_field_9 as phone,
string_field_10 as fax
from `datawarehouse-423912.warehouse.customers`
[2024-05-28T13:11:30.318+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:11:30.323+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:11:30.327+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.newupdated_customers`
[2024-05-28T13:11:30.335+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:11:30.339+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:11:30.344+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:11:30.351+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:11:30.355+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:11:30.433+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:11:30.473+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:11:30.472+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:11:30.541+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:11:30.540+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:11:30.609+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.430 seconds
[2024-05-28T13:11:37.883+0000] {processor.py:161} INFO - Started process (PID=2970) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:11:37.888+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:11:37.891+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:11:37.889+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:11:37.926+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:11:37.981+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.127 seconds
[2024-05-28T13:12:08.369+0000] {processor.py:161} INFO - Started process (PID=2978) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:12:08.371+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:12:08.373+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:12:08.373+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:12:08.389+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:12:08.412+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T13:12:38.714+0000] {processor.py:161} INFO - Started process (PID=2986) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:12:38.781+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:12:38.783+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:12:38.782+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:12:38.824+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:12:38.859+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.167 seconds
[2024-05-28T13:13:08.937+0000] {processor.py:161} INFO - Started process (PID=2995) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:13:08.938+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:13:08.939+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:13:08.939+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:13:08.953+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:13:08.969+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T13:13:39.345+0000] {processor.py:161} INFO - Started process (PID=3003) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:13:39.346+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:13:39.348+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:13:39.347+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:13:39.361+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:13:39.377+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.039 seconds
[2024-05-28T13:14:09.618+0000] {processor.py:161} INFO - Started process (PID=3011) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:14:09.619+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:14:09.620+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:14:09.619+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:14:09.633+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:14:09.648+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.037 seconds
[2024-05-28T13:14:39.909+0000] {processor.py:161} INFO - Started process (PID=3019) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:14:39.910+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:14:39.914+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:14:39.911+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:14:39.936+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:14:39.967+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T13:15:10.597+0000] {processor.py:161} INFO - Started process (PID=3027) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:15:10.603+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:15:10.607+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:15:10.605+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:15:10.642+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:15:10.695+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.126 seconds
[2024-05-28T13:15:41.535+0000] {processor.py:161} INFO - Started process (PID=3036) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:15:41.542+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:15:41.548+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:15:41.545+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:15:41.640+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:15:41.691+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.215 seconds
[2024-05-28T13:16:11.946+0000] {processor.py:161} INFO - Started process (PID=3044) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:16:11.948+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:16:11.950+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:16:11.949+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:16:11.964+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:16:11.980+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.041 seconds
[2024-05-28T13:16:42.260+0000] {processor.py:161} INFO - Started process (PID=3052) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:16:42.262+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:16:42.264+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:16:42.263+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:16:42.281+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:16:42.303+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T13:17:12.623+0000] {processor.py:161} INFO - Started process (PID=3060) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:17:12.625+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:17:12.626+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:17:12.626+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:17:12.644+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:17:12.671+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T13:17:42.992+0000] {processor.py:161} INFO - Started process (PID=3069) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:17:42.994+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:17:42.997+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:17:42.996+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:17:43.020+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:17:43.049+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.068 seconds
[2024-05-28T13:18:13.351+0000] {processor.py:161} INFO - Started process (PID=3078) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:18:13.353+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:18:13.355+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:18:13.355+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:18:13.375+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:18:13.395+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T13:18:43.875+0000] {processor.py:161} INFO - Started process (PID=3086) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:18:43.877+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:18:43.880+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:18:43.879+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:18:43.907+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:18:43.930+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T13:19:14.182+0000] {processor.py:161} INFO - Started process (PID=3095) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:19:14.183+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:19:14.184+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:19:14.184+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:19:14.199+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:19:14.215+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.041 seconds
[2024-05-28T13:19:44.555+0000] {processor.py:161} INFO - Started process (PID=3103) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:19:44.558+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:19:44.560+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:19:44.559+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:19:44.595+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:19:44.620+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T13:20:14.903+0000] {processor.py:161} INFO - Started process (PID=3111) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:20:14.906+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:20:14.908+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:20:14.907+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:20:14.929+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:20:14.955+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T13:20:45.928+0000] {processor.py:161} INFO - Started process (PID=3128) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:20:45.933+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:20:45.939+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:20:45.936+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:20:45.967+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:20:46.004+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.107 seconds
[2024-05-28T13:21:16.358+0000] {processor.py:161} INFO - Started process (PID=3137) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:21:16.367+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:21:16.370+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:21:16.369+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:21:16.397+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:21:16.445+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.102 seconds
[2024-05-28T13:21:46.966+0000] {processor.py:161} INFO - Started process (PID=3145) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:21:46.968+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:21:46.971+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:21:46.970+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:21:46.995+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:21:47.030+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T13:22:17.327+0000] {processor.py:161} INFO - Started process (PID=3154) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:22:17.329+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:22:17.331+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:22:17.330+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:22:17.347+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:22:17.368+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T13:22:47.721+0000] {processor.py:161} INFO - Started process (PID=3162) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:22:47.722+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:22:47.724+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:22:47.723+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:22:47.741+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:22:47.765+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T13:23:17.981+0000] {processor.py:161} INFO - Started process (PID=3176) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:23:17.984+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:23:17.986+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:23:17.985+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:23:18.012+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:23:18.040+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T13:23:48.591+0000] {processor.py:161} INFO - Started process (PID=3184) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:23:48.593+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:23:48.596+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:23:48.595+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:23:48.624+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:23:48.666+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.093 seconds
[2024-05-28T13:24:19.158+0000] {processor.py:161} INFO - Started process (PID=3192) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:24:19.161+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:24:19.163+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:24:19.163+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:24:19.196+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:24:19.230+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.087 seconds
[2024-05-28T13:24:49.683+0000] {processor.py:161} INFO - Started process (PID=3200) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:24:49.686+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:24:49.688+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:24:49.687+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:24:49.710+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:24:49.801+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.131 seconds
[2024-05-28T13:25:20.120+0000] {processor.py:161} INFO - Started process (PID=3208) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:25:20.122+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:25:20.124+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:25:20.124+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:25:20.149+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:25:20.175+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T13:25:50.578+0000] {processor.py:161} INFO - Started process (PID=3217) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:25:50.585+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:25:50.595+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:25:50.594+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:25:50.660+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:25:50.760+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.210 seconds
[2024-05-28T13:26:21.696+0000] {processor.py:161} INFO - Started process (PID=3225) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:26:21.708+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:26:21.717+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:26:21.716+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:26:22.107+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:26:22.427+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.765 seconds
[2024-05-28T13:26:52.674+0000] {processor.py:161} INFO - Started process (PID=3233) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:26:52.675+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:26:52.677+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:26:52.676+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:26:52.696+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:26:52.718+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T13:27:23.024+0000] {processor.py:161} INFO - Started process (PID=3241) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:27:23.026+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:27:23.028+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:27:23.027+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:27:23.054+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:27:23.085+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T13:27:53.374+0000] {processor.py:161} INFO - Started process (PID=3249) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:27:53.380+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:27:53.382+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:27:53.382+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:27:53.406+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:27:53.433+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T13:28:23.701+0000] {processor.py:161} INFO - Started process (PID=3257) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:28:23.702+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:28:23.704+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:28:23.704+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:28:23.726+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:28:23.751+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T13:28:54.260+0000] {processor.py:161} INFO - Started process (PID=3265) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:28:54.266+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:28:54.269+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:28:54.268+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:28:54.294+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:28:54.317+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.078 seconds
[2024-05-28T13:29:24.856+0000] {processor.py:161} INFO - Started process (PID=3273) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:29:24.858+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:29:24.860+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:29:24.859+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:29:24.886+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:29:24.917+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T13:29:55.438+0000] {processor.py:161} INFO - Started process (PID=3282) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:29:55.448+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:29:55.452+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:29:55.451+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:29:55.514+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:29:55.638+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.273 seconds
[2024-05-28T13:30:26.047+0000] {processor.py:161} INFO - Started process (PID=3289) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:30:26.053+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:30:26.056+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:30:26.055+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:30:26.085+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:30:26.131+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.122 seconds
[2024-05-28T13:30:56.749+0000] {processor.py:161} INFO - Started process (PID=3296) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:30:56.761+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:30:56.765+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:30:56.763+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:30:56.807+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:30:56.851+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.141 seconds
[2024-05-28T13:31:26.953+0000] {processor.py:161} INFO - Started process (PID=3304) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:31:26.955+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:31:26.957+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:31:26.956+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:31:26.976+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:31:26.999+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T13:31:57.214+0000] {processor.py:161} INFO - Started process (PID=3311) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:31:57.216+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:31:57.219+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:31:57.218+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:31:57.246+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:31:57.279+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T13:32:20.470+0000] {processor.py:161} INFO - Started process (PID=3312) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:20.473+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:32:20.476+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:32:20.474+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:20.521+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:20.560+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.105 seconds
[2024-05-28T13:32:48.673+0000] {processor.py:161} INFO - Started process (PID=3319) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:48.676+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:32:48.679+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:32:48.678+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:48.721+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:48.787+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.127 seconds
[2024-05-28T13:32:57.835+0000] {processor.py:161} INFO - Started process (PID=3326) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:57.837+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:32:57.839+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:32:57.838+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:57.872+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:32:57.891+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T13:33:28.143+0000] {processor.py:161} INFO - Started process (PID=3333) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:33:28.145+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:33:28.147+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:33:28.146+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:33:28.164+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:33:28.184+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T13:33:58.863+0000] {processor.py:161} INFO - Started process (PID=3342) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:33:58.866+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:33:58.869+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:33:58.868+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:33:58.902+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:33:58.942+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.098 seconds
[2024-05-28T13:34:29.176+0000] {processor.py:161} INFO - Started process (PID=3350) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:34:29.178+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:34:29.179+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:34:29.178+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:34:29.194+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:34:29.212+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T13:34:59.468+0000] {processor.py:161} INFO - Started process (PID=3358) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:34:59.470+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:34:59.472+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:34:59.471+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:34:59.490+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:34:59.510+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T13:35:29.773+0000] {processor.py:161} INFO - Started process (PID=3367) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:35:29.775+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:35:29.776+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:35:29.776+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:35:29.796+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:35:29.824+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T13:36:00.228+0000] {processor.py:161} INFO - Started process (PID=3375) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:36:00.231+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:36:00.234+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:36:00.233+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:36:00.271+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:36:00.310+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.098 seconds
[2024-05-28T13:36:30.700+0000] {processor.py:161} INFO - Started process (PID=3383) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:36:30.710+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:36:30.712+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:36:30.712+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:36:30.738+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:36:30.799+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.140 seconds
[2024-05-28T13:37:01.192+0000] {processor.py:161} INFO - Started process (PID=3391) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:37:01.196+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:37:01.202+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:37:01.198+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:37:01.261+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:37:01.332+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.167 seconds
[2024-05-28T13:37:31.502+0000] {processor.py:161} INFO - Started process (PID=3399) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:37:31.504+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:37:31.505+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:37:31.505+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:37:31.524+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:37:31.549+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T13:38:01.899+0000] {processor.py:161} INFO - Started process (PID=3407) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:38:01.901+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:38:01.903+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:38:01.902+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:38:01.920+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:38:01.941+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T13:38:32.348+0000] {processor.py:161} INFO - Started process (PID=3415) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:38:32.350+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:38:32.353+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:38:32.352+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:38:32.380+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:38:32.410+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T13:39:02.918+0000] {processor.py:161} INFO - Started process (PID=3423) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:39:02.921+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:39:02.923+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:39:02.922+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:39:02.947+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:39:02.970+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T13:39:33.231+0000] {processor.py:161} INFO - Started process (PID=3431) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:39:33.233+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:39:33.237+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:39:33.236+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:39:33.264+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:39:33.294+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.077 seconds
[2024-05-28T13:40:03.602+0000] {processor.py:161} INFO - Started process (PID=3439) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:40:03.607+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:40:03.611+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:40:03.609+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:40:03.651+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:40:03.682+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.103 seconds
[2024-05-28T13:40:33.934+0000] {processor.py:161} INFO - Started process (PID=3447) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:40:33.936+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:40:33.938+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:40:33.937+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:40:33.966+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:40:33.990+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T13:41:04.242+0000] {processor.py:161} INFO - Started process (PID=3455) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:41:04.243+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:41:04.245+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:41:04.244+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:41:04.262+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:41:04.279+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.048 seconds
[2024-05-28T13:41:34.538+0000] {processor.py:161} INFO - Started process (PID=3463) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:41:34.540+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:41:34.541+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:41:34.541+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:41:34.563+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:41:34.588+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T13:42:05.271+0000] {processor.py:161} INFO - Started process (PID=3472) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:42:05.272+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:42:05.275+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:42:05.274+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:42:05.299+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:42:05.318+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T13:42:35.566+0000] {processor.py:161} INFO - Started process (PID=3480) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:42:35.568+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:42:35.569+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:42:35.569+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:42:35.585+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:42:35.601+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T13:43:05.909+0000] {processor.py:161} INFO - Started process (PID=3488) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:05.912+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:43:05.915+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:43:05.913+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:05.940+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:05.965+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T13:43:36.270+0000] {processor.py:161} INFO - Started process (PID=3496) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:36.272+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:43:36.275+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:43:36.275+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:36.305+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:36.342+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.085 seconds
[2024-05-28T13:43:50.719+0000] {processor.py:161} INFO - Started process (PID=3497) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:50.720+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:43:50.721+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:43:50.721+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:50.820+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:43:50.825+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:43:50.828+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:43:50.833+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:43:50.837+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:43:50.841+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:43:50.844+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:43:50.847+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:43:50.927+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:43:51.805+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:43:51.805+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:43:51.854+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:43:51.854+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:43:51.942+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.232 seconds
[2024-05-28T13:44:01.878+0000] {processor.py:161} INFO - Started process (PID=3505) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:44:01.879+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:44:01.881+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:44:01.880+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:44:01.911+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:44:01.932+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.063 seconds
[2024-05-28T13:44:32.475+0000] {processor.py:161} INFO - Started process (PID=3513) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:44:32.497+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:44:32.501+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:44:32.500+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:44:32.555+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:44:32.605+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.146 seconds
[2024-05-28T13:45:03.151+0000] {processor.py:161} INFO - Started process (PID=3522) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:03.155+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:45:03.169+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:45:03.159+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:03.214+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:03.250+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.122 seconds
[2024-05-28T13:45:33.686+0000] {processor.py:161} INFO - Started process (PID=3531) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:33.689+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:45:33.692+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:45:33.691+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:33.728+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:33.769+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.099 seconds
[2024-05-28T13:45:36.796+0000] {processor.py:161} INFO - Started process (PID=3532) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:36.798+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:45:36.801+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:45:36.800+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:36.870+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:45:36.878+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:45:36.885+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:45:36.892+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:45:36.898+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:45:36.905+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:45:36.911+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:45:36.918+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:45:36.951+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:45:36.928+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:45:36.965+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:45:37.012+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.230 seconds
[2024-05-28T13:46:07.318+0000] {processor.py:161} INFO - Started process (PID=3540) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:46:07.321+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:46:07.323+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:46:07.322+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:46:07.366+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:46:07.373+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:46:07.380+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:46:07.387+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:46:07.394+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:46:07.401+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:46:07.408+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:46:07.414+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:46:07.440+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:46:07.423+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:46:07.451+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:46:07.493+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.188 seconds
[2024-05-28T13:46:37.813+0000] {processor.py:161} INFO - Started process (PID=3548) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:46:37.815+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:46:37.817+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:46:37.816+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:46:37.843+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:46:37.847+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:46:37.852+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:46:37.856+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:46:37.860+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:46:37.865+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:46:37.869+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:46:37.873+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:46:37.890+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:46:37.879+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:46:37.898+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:46:37.923+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.118 seconds
[2024-05-28T13:47:08.192+0000] {processor.py:161} INFO - Started process (PID=3556) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:47:08.194+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:47:08.197+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:47:08.196+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:47:08.236+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:47:08.241+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:47:08.247+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:47:08.252+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:47:08.259+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:47:08.263+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:47:08.270+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:47:08.276+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:47:08.309+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:47:08.283+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:47:08.324+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:47:08.375+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.197 seconds
[2024-05-28T13:47:38.808+0000] {processor.py:161} INFO - Started process (PID=3564) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:47:38.810+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:47:38.812+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:47:38.811+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:47:38.850+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:47:38.857+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:47:38.861+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:47:38.865+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:47:38.871+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:47:38.877+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:47:38.882+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:47:38.888+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:47:38.916+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:47:38.898+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:47:38.929+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:47:38.962+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.166 seconds
[2024-05-28T13:48:09.263+0000] {processor.py:161} INFO - Started process (PID=3572) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:48:09.264+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:48:09.265+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:48:09.265+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:48:09.290+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:48:09.294+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:48:09.297+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:48:09.301+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:48:09.305+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:48:09.309+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:48:09.313+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:48:09.317+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:48:09.332+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:48:09.322+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:48:09.340+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:48:09.364+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.109 seconds
[2024-05-28T13:48:39.632+0000] {processor.py:161} INFO - Started process (PID=3580) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:48:39.634+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:48:39.637+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:48:39.636+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:48:39.665+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:48:39.670+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:48:39.674+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:48:39.679+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:48:39.683+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:48:39.688+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:48:39.693+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:48:39.697+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:48:39.719+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:48:39.705+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:48:39.728+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:48:39.758+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.137 seconds
[2024-05-28T13:49:10.043+0000] {processor.py:161} INFO - Started process (PID=3589) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:49:10.044+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:49:10.045+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:49:10.045+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:49:10.068+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:49:10.072+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:49:10.075+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:49:10.079+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:49:10.082+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:49:10.086+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:49:10.089+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:49:10.092+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:49:10.107+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:49:10.097+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:49:10.115+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:49:10.140+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.105 seconds
[2024-05-28T13:49:40.371+0000] {processor.py:161} INFO - Started process (PID=3597) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:49:40.372+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:49:40.374+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:49:40.373+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:49:40.395+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:49:40.399+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:49:40.402+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:49:40.406+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:49:40.409+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:49:40.412+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:49:40.415+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:49:40.419+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:49:40.436+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:49:40.424+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:49:40.443+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:49:40.469+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.105 seconds
[2024-05-28T13:50:10.696+0000] {processor.py:161} INFO - Started process (PID=3605) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:50:10.697+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:50:10.698+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:50:10.698+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:50:10.720+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:50:10.724+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:50:10.727+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:50:10.730+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:50:10.734+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:50:10.737+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:50:10.741+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:50:10.744+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:50:10.760+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:50:10.749+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:50:10.767+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:50:10.791+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.102 seconds
[2024-05-28T13:50:41.045+0000] {processor.py:161} INFO - Started process (PID=3613) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:50:41.046+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:50:41.048+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:50:41.047+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:50:41.080+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:50:41.088+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:50:41.094+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:50:41.100+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:50:41.106+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:50:41.112+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:50:41.117+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:50:41.123+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:50:41.148+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:50:41.132+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:50:41.165+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:50:41.218+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.182 seconds
[2024-05-28T13:51:11.494+0000] {processor.py:161} INFO - Started process (PID=3621) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:51:11.496+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:51:11.497+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:51:11.497+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:51:11.528+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:51:11.533+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:51:11.539+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:51:11.545+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:51:11.549+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:51:11.555+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:51:11.559+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:51:11.564+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:51:11.588+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:51:11.572+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:51:11.598+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:51:11.637+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.160 seconds
[2024-05-28T13:51:41.898+0000] {processor.py:161} INFO - Started process (PID=3629) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:51:41.900+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:51:41.902+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:51:41.901+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:51:41.927+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:51:41.930+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:51:41.934+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:51:41.938+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:51:41.942+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:51:41.946+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:51:41.950+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:51:41.955+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:51:41.977+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:51:41.962+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:51:41.987+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:51:42.022+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.137 seconds
[2024-05-28T13:52:12.300+0000] {processor.py:161} INFO - Started process (PID=3637) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:52:12.302+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:52:12.304+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:52:12.303+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:52:12.329+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:52:12.333+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:52:12.338+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:52:12.342+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:52:12.346+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:52:12.351+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:52:12.355+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:52:12.358+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:52:12.375+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:52:12.364+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:52:12.383+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:52:12.407+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.115 seconds
[2024-05-28T13:52:42.638+0000] {processor.py:161} INFO - Started process (PID=3645) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:52:42.639+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:52:42.640+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:52:42.640+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:52:42.662+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:52:42.666+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:52:42.669+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:52:42.673+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:52:42.676+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:52:42.680+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:52:42.683+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:52:42.687+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:52:42.703+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:52:42.692+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:52:42.711+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:52:42.736+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.107 seconds
[2024-05-28T13:53:12.976+0000] {processor.py:161} INFO - Started process (PID=3653) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:53:12.977+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:53:12.979+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:53:12.978+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:53:12.997+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:53:13.001+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:53:13.005+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:53:13.008+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:53:13.012+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:53:13.016+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:53:13.020+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:53:13.024+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:53:13.046+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:53:13.031+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:53:13.056+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:53:13.086+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.120 seconds
[2024-05-28T13:53:43.518+0000] {processor.py:161} INFO - Started process (PID=3661) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:53:43.520+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:53:43.522+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:53:43.521+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:53:43.546+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:53:43.551+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:53:43.556+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:53:43.561+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:53:43.565+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:53:43.570+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:53:43.575+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:53:43.580+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:53:43.607+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:53:43.589+0000] {dagbag.py:355} ERROR - Failed to import: /opt/airflow/dags/oltp_olap.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 351, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/airflow/dags/oltp_olap.py", line 202, in <module>
    modelTraining=PythonOperator(
                  ^^^^^^^^^^^^^^
NameError: name 'PythonOperator' is not defined
[2024-05-28T13:53:43.618+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:53:43.658+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.157 seconds
[2024-05-28T13:54:05.032+0000] {processor.py:161} INFO - Started process (PID=3669) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:05.035+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:54:05.039+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:05.038+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:05.132+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:54:05.148+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:54:05.160+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:54:05.188+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:54:05.198+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:54:05.217+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:54:05.234+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:54:05.248+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:54:05.277+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:05.832+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:05.831+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:54:05.858+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:05.857+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:54:05.931+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.917 seconds
[2024-05-28T13:54:07.024+0000] {processor.py:161} INFO - Started process (PID=3670) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:07.026+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:54:07.028+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:07.027+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:07.094+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:54:07.100+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:54:07.109+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:54:07.115+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:54:07.122+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:54:07.128+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:54:07.134+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:54:07.142+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:54:07.163+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:07.193+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:07.192+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:54:07.233+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:07.232+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:54:07.332+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.323 seconds
[2024-05-28T13:54:38.380+0000] {processor.py:161} INFO - Started process (PID=3679) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:38.382+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:54:38.386+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:38.384+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:38.425+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:54:38.430+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:54:38.436+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:54:38.442+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:54:38.447+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:54:38.453+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:54:38.459+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:54:38.464+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:54:38.480+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:54:38.525+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:38.525+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:54:38.555+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:54:38.554+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:54:38.617+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.254 seconds
[2024-05-28T13:55:08.890+0000] {processor.py:161} INFO - Started process (PID=3687) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:55:08.892+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:55:08.893+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:55:08.893+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:55:08.923+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:55:08.929+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:55:08.934+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:55:08.940+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:55:08.946+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:55:08.952+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:55:08.957+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:55:08.963+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:55:08.981+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:55:09.034+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:55:09.034+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:55:09.062+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:55:09.061+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:55:09.092+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.211 seconds
[2024-05-28T13:55:39.391+0000] {processor.py:161} INFO - Started process (PID=3696) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:55:39.395+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:55:39.399+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:55:39.397+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:55:39.431+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:55:39.435+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:55:39.440+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:55:39.445+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:55:39.449+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:55:39.454+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:55:39.458+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:55:39.461+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:55:39.485+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:55:39.524+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:55:39.524+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:55:39.545+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:55:39.544+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:55:39.574+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.196 seconds
[2024-05-28T13:56:09.874+0000] {processor.py:161} INFO - Started process (PID=3704) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:56:09.876+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:56:09.879+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:56:09.878+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:56:09.926+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:56:09.934+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:56:09.941+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:56:09.949+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:56:09.956+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:56:09.963+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:56:09.969+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:56:09.977+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:56:09.996+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:56:10.056+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:56:10.055+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:56:10.083+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:56:10.082+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:56:10.149+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.290 seconds
[2024-05-28T13:56:40.457+0000] {processor.py:161} INFO - Started process (PID=3712) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:56:40.464+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:56:40.468+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:56:40.467+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:56:40.516+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:56:40.526+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:56:40.532+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:56:40.538+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:56:40.543+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:56:40.548+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:56:40.554+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:56:40.559+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:56:40.583+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:56:40.637+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:56:40.635+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:56:40.661+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:56:40.660+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:56:40.693+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.254 seconds
[2024-05-28T13:57:11.111+0000] {processor.py:161} INFO - Started process (PID=3721) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:57:11.113+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:57:11.114+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:57:11.113+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:57:11.139+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:57:11.143+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:57:11.148+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:57:11.151+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:57:11.156+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:57:11.159+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:57:11.163+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:57:11.167+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:57:11.178+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:57:11.213+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:57:11.213+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:57:11.230+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:57:11.230+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:57:11.256+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.154 seconds
[2024-05-28T13:57:41.515+0000] {processor.py:161} INFO - Started process (PID=3729) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:57:41.517+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:57:41.519+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:57:41.518+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:57:41.562+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:57:41.568+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:57:41.575+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:57:41.582+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:57:41.588+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:57:41.595+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:57:41.602+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:57:41.609+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:57:41.627+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:57:41.686+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:57:41.685+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:57:41.715+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:57:41.715+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:57:41.752+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.249 seconds
[2024-05-28T13:58:12.060+0000] {processor.py:161} INFO - Started process (PID=3737) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:58:12.063+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:58:12.066+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:58:12.065+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:58:12.111+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:58:12.117+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:58:12.123+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:58:12.130+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:58:12.135+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:58:12.141+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:58:12.148+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:58:12.156+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:58:12.174+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:58:12.246+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:58:12.245+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:58:12.273+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:58:12.272+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:58:12.315+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.274 seconds
[2024-05-28T13:58:42.539+0000] {processor.py:161} INFO - Started process (PID=3745) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:58:42.541+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:58:42.544+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:58:42.543+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:58:42.579+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:58:42.584+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:58:42.589+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:58:42.594+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:58:42.599+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:58:42.604+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:58:42.609+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:58:42.615+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:58:42.630+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:58:42.696+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:58:42.695+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:58:42.726+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:58:42.726+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:58:42.753+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.237 seconds
[2024-05-28T13:59:13.414+0000] {processor.py:161} INFO - Started process (PID=3755) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:59:13.418+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:59:13.427+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:59:13.426+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:59:13.485+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:59:13.495+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:59:13.502+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:59:13.511+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:59:13.518+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:59:13.527+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:59:13.535+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:59:13.545+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:59:13.581+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:59:13.708+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:59:13.707+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:59:13.815+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:59:13.814+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:59:13.897+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.506 seconds
[2024-05-28T13:59:44.536+0000] {processor.py:161} INFO - Started process (PID=3764) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:59:44.539+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T13:59:44.541+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:59:44.541+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:59:44.576+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T13:59:44.581+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T13:59:44.588+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T13:59:44.594+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T13:59:44.599+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T13:59:44.604+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T13:59:44.610+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T13:59:44.615+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T13:59:44.631+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T13:59:44.678+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:59:44.678+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T13:59:44.700+0000] {logging_mixin.py:188} INFO - [2024-05-28T13:59:44.700+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T13:59:44.733+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.208 seconds
[2024-05-28T14:00:15.172+0000] {processor.py:161} INFO - Started process (PID=3774) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:00:15.175+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:00:15.178+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:00:15.177+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:00:15.226+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T14:00:15.233+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T14:00:15.242+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T14:00:15.410+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T14:00:15.417+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T14:00:15.428+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T14:00:15.439+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T14:00:15.459+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T14:00:15.496+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:00:15.649+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:00:15.648+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T14:00:15.731+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:00:15.731+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T14:00:15.811+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.654 seconds
[2024-05-28T14:00:46.356+0000] {processor.py:161} INFO - Started process (PID=3784) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:00:46.358+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:00:46.360+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:00:46.359+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:00:46.392+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T14:00:46.397+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T14:00:46.402+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T14:00:46.408+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T14:00:46.412+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T14:00:46.418+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T14:00:46.426+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T14:00:46.432+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T14:00:46.459+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:00:46.527+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:00:46.526+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T14:00:46.576+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:00:46.575+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T14:00:46.617+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.271 seconds
[2024-05-28T14:01:17.136+0000] {processor.py:161} INFO - Started process (PID=3793) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:01:17.139+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:01:17.141+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:01:17.140+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:01:17.202+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T14:01:17.214+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T14:01:17.221+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T14:01:17.241+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T14:01:17.249+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T14:01:17.257+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T14:01:17.269+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T14:01:17.281+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T14:01:17.328+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:01:17.473+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:01:17.472+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T14:01:17.550+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:01:17.549+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T14:01:17.636+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.515 seconds
[2024-05-28T14:01:47.896+0000] {processor.py:161} INFO - Started process (PID=3802) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:01:47.902+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:01:47.911+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:01:47.910+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:01:48.186+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T14:01:48.217+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T14:01:48.264+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T14:01:48.310+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T14:01:48.329+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T14:01:48.341+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T14:01:48.363+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T14:01:48.385+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T14:01:48.432+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:01:48.537+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:01:48.537+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T14:01:48.603+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:01:48.601+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T14:01:48.694+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.833 seconds
[2024-05-28T14:02:19.160+0000] {processor.py:161} INFO - Started process (PID=3811) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:02:19.162+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:02:19.164+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:02:19.164+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:02:19.211+0000] {logging_mixin.py:188} INFO - CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.Dim_date` AS
SELECT
  SAFE_CAST(order_date AS DATE) AS order_date,
  EXTRACT(MONTH FROM SAFE_CAST(order_date AS DATE)) AS month,
  EXTRACT(QUARTER FROM SAFE_CAST(order_date AS DATE)) AS quarter,
  EXTRACT(YEAR FROM SAFE_CAST(order_date AS DATE)) AS year,
  CASE
    WHEN EXTRACT(DAYOFWEEK FROM SAFE_CAST(order_date AS DATE)) IN (1, 7) THEN TRUE
    ELSE FALSE
  END AS weekend_flag
FROM
  `datawarehouse-423912.warehouse.orders`
WHERE
  SAFE_CAST(order_date AS DATE) IS NOT NULL;
[2024-05-28T14:02:19.218+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Order_details` as
select 
*
from
`datawarehouse-423912.warehouse.orderdetails`
[2024-05-28T14:02:19.227+0000] {logging_mixin.py:188} INFO - -- dây là tạo từ oltp sang olap
create or replace table `datawarehouse-423912.OLAP_dataset.Dim_customer` as
select 
customerID,
contactName,
address,
city,
phone,
country
from
`datawarehouse-423912.warehouse.customers`
[2024-05-28T14:02:19.233+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Dim_Products` as
select 
products.productID,
products.productname,
products.unitPrice,
categories.categoryID,
categories.categoryName,
from
`datawarehouse-423912.warehouse.products` as products
inner join`datawarehouse-423912.warehouse.categories` as categories
on categories.categoryID = products.categoryID
[2024-05-28T14:02:19.242+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

create or replace table `datawarehouse-423912.OLAP_dataset.Fact_table`
as 
select
orders.order_id,
orders.customer_id,
orders.order_date
from
`datawarehouse-423912.warehouse.orders` as orders
join
`datawarehouse-423912.OLAP_dataset.Dim_Order_details` as order_details
on
orders. order_id = order_details.orderID
[2024-05-28T14:02:19.250+0000] {logging_mixin.py:188} INFO - DECLARE today_date DATE DEFAULT DATE '1998-05-06';

-- Tạo bảng RFM_table
CREATE OR REPLACE TABLE `datawarehouse-423912.OLAP_dataset.RFM_table` AS
WITH RFM_table AS (
  SELECT
    orders.customer_id,
    MAX(CAST(orders.order_date AS DATE)) AS LastPurchaseDate,
    COUNT(DISTINCT orders.order_id) AS TotalTransaction,
    SUM(order_details.quantity * order_details.unitPrice * (1 - order_details.discount)) AS Monetary
  FROM
    `datawarehouse-423912.warehouse.orders` AS orders
  JOIN
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details` AS order_details
  ON
    orders.order_id = order_details.orderID
  GROUP BY
    orders.customer_id
)

-- Thêm các cột điểm vào bảng mới
SELECT
  customer_id,
  DATE_DIFF(today_date, LastPurchaseDate, DAY) AS Recency,
  TotalTransaction AS Frequency,
  Monetary,
  NULL AS recency_score, -- Khởi tạo cột recency_score với giá trị NULL
  NULL AS frequency_score, -- Khởi tạo cột frequency_score với giá trị NULL
  NULL AS monetary_score -- Khởi tạo cột monetary_score với giá trị NULL
FROM
  RFM_table
WHERE
  Monetary > 0;

select * from `datawarehouse-423912.OLAP_dataset.RFM_table`
where customer_id = 'ANTON'
[2024-05-28T14:02:19.257+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Sale_table` AS
SELECT 
    orderID,
    SUM(quantity * unitprice * (1 - discount)) AS total_revenue
FROM 
    `datawarehouse-423912.OLAP_dataset.Dim_Order_details`
GROUP BY 
    orderID;
[2024-05-28T14:02:19.268+0000] {logging_mixin.py:188} INFO - create or replace table `datawarehouse-423912.OLAP_dataset.Order_fact_table` as
with RFM_table as (
  select
  fact.customer_id,
  fact.order_id,
  fact.order_date,
  rfm.Recency,
  rfm.Frequency,
  rfm.Monetary,
  sale.total_revenue
  from
  `datawarehouse-423912.OLAP_dataset.Fact_table` as fact
  join
  `datawarehouse-423912.OLAP_dataset.RFM_table` as rfm
  on 
 fact.customer_id = rfm.customer_id
  JOIN
  `datawarehouse-423912.OLAP_dataset.Sale_table` as sale
  ON
  fact.order_id = sale.orderID
)

select * from RFM_table;
[2024-05-28T14:02:19.325+0000] {processor.py:840} INFO - DAG(s) 'oltp_to_olap_all_transform' retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:02:19.476+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:02:19.476+0000] {dag.py:3096} INFO - Sync 1 DAGs
[2024-05-28T14:02:19.557+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:02:19.557+0000] {dag.py:3954} INFO - Setting next_dagrun for oltp_to_olap_all_transform to None, run_after=None
[2024-05-28T14:02:19.647+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.504 seconds
[2024-05-28T14:02:47.097+0000] {processor.py:161} INFO - Started process (PID=3820) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:02:47.100+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:02:47.104+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:02:47.103+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:02:47.180+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:02:47.233+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.168 seconds
[2024-05-28T14:03:17.548+0000] {processor.py:161} INFO - Started process (PID=3830) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:03:17.550+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:03:17.552+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:03:17.551+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:03:17.586+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:03:17.632+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.102 seconds
[2024-05-28T14:03:48.297+0000] {processor.py:161} INFO - Started process (PID=3840) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:03:48.298+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:03:48.300+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:03:48.299+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:03:48.316+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:03:48.340+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T14:04:18.817+0000] {processor.py:161} INFO - Started process (PID=3850) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:04:18.820+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:04:18.823+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:04:18.822+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:04:18.850+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:04:18.879+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.077 seconds
[2024-05-28T14:04:49.282+0000] {processor.py:161} INFO - Started process (PID=3860) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:04:49.283+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:04:49.285+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:04:49.285+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:04:49.306+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:04:49.338+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T14:05:19.796+0000] {processor.py:161} INFO - Started process (PID=3870) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:05:19.799+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:05:19.802+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:05:19.801+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:05:19.834+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:05:19.879+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.101 seconds
[2024-05-28T14:05:50.259+0000] {processor.py:161} INFO - Started process (PID=3880) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:05:50.260+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:05:50.263+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:05:50.262+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:05:50.282+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:05:50.306+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T14:06:20.723+0000] {processor.py:161} INFO - Started process (PID=3890) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:06:20.725+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:06:20.727+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:06:20.726+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:06:20.748+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:06:20.773+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.060 seconds
[2024-05-28T14:06:51.216+0000] {processor.py:161} INFO - Started process (PID=3900) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:06:51.217+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:06:51.219+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:06:51.218+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:06:51.242+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:06:51.275+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T14:07:21.616+0000] {processor.py:161} INFO - Started process (PID=3910) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:07:21.618+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:07:21.620+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:07:21.619+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:07:21.642+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:07:21.670+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.064 seconds
[2024-05-28T14:07:52.069+0000] {processor.py:161} INFO - Started process (PID=3921) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:07:52.071+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:07:52.073+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:07:52.072+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:07:52.089+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:07:52.113+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T14:08:22.436+0000] {processor.py:161} INFO - Started process (PID=3931) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:08:22.438+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:08:22.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:08:22.439+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:08:22.455+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:08:22.479+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T14:08:53.069+0000] {processor.py:161} INFO - Started process (PID=3941) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:08:53.071+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:08:53.073+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:08:53.072+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:08:53.097+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:08:53.131+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T14:09:23.457+0000] {processor.py:161} INFO - Started process (PID=3951) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:09:23.459+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:09:23.460+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:09:23.460+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:09:23.479+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:09:23.518+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T14:09:53.840+0000] {processor.py:161} INFO - Started process (PID=3961) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:09:53.842+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:09:53.843+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:09:53.843+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:09:53.858+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:09:53.885+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T14:10:24.334+0000] {processor.py:161} INFO - Started process (PID=3971) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:10:24.336+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:10:24.337+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:10:24.337+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:10:24.355+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:10:24.387+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.062 seconds
[2024-05-28T14:10:55.038+0000] {processor.py:161} INFO - Started process (PID=3981) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:10:55.040+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:10:55.043+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:10:55.042+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:10:55.067+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:10:55.097+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T14:11:25.453+0000] {processor.py:161} INFO - Started process (PID=3991) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:11:25.454+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:11:25.456+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:11:25.456+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:11:25.476+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:11:25.505+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T14:11:55.924+0000] {processor.py:161} INFO - Started process (PID=4001) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:11:55.926+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:11:55.928+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:11:55.927+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:11:55.948+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:11:55.972+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T14:12:26.306+0000] {processor.py:161} INFO - Started process (PID=4011) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:12:26.307+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:12:26.308+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:12:26.308+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:12:26.321+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:12:26.340+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T14:12:56.674+0000] {processor.py:161} INFO - Started process (PID=4021) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:12:56.675+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:12:56.677+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:12:56.676+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:12:56.689+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:12:56.707+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T14:13:27.247+0000] {processor.py:161} INFO - Started process (PID=4031) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:13:27.249+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:13:27.250+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:13:27.250+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:13:27.266+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:13:27.294+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T14:13:57.940+0000] {processor.py:161} INFO - Started process (PID=4042) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:13:57.943+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:13:57.946+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:13:57.945+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:13:58.056+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:13:58.173+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.261 seconds
[2024-05-28T14:14:28.918+0000] {processor.py:161} INFO - Started process (PID=4052) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:14:28.920+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:14:28.921+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:14:28.921+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:14:28.936+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:14:28.964+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T14:14:59.342+0000] {processor.py:161} INFO - Started process (PID=4062) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:14:59.343+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:14:59.345+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:14:59.344+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:14:59.360+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:14:59.379+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T14:15:29.735+0000] {processor.py:161} INFO - Started process (PID=4072) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:15:29.736+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:15:29.738+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:15:29.737+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:15:29.753+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:15:29.776+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T14:16:00.229+0000] {processor.py:161} INFO - Started process (PID=4082) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:16:00.231+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:16:00.233+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:16:00.232+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:16:00.250+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:16:00.290+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T14:16:30.693+0000] {processor.py:161} INFO - Started process (PID=4092) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:16:30.694+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:16:30.696+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:16:30.695+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:16:30.709+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:16:30.727+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T14:17:01.588+0000] {processor.py:161} INFO - Started process (PID=4102) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:17:01.590+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:17:01.596+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:17:01.593+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:17:01.628+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:17:01.659+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.094 seconds
[2024-05-28T14:17:32.075+0000] {processor.py:161} INFO - Started process (PID=4112) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:17:32.076+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:17:32.077+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:17:32.077+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:17:32.089+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:17:32.112+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T14:18:02.651+0000] {processor.py:161} INFO - Started process (PID=4122) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:18:02.653+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:18:02.655+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:18:02.654+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:18:02.677+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:18:02.710+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T14:18:33.337+0000] {processor.py:161} INFO - Started process (PID=4132) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:18:33.339+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:18:33.341+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:18:33.340+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:18:33.361+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:18:33.399+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T14:19:04.099+0000] {processor.py:161} INFO - Started process (PID=4142) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:19:04.102+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:19:04.104+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:19:04.103+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:19:04.135+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:19:04.172+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.091 seconds
[2024-05-28T14:19:34.892+0000] {processor.py:161} INFO - Started process (PID=4152) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:19:34.894+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:19:34.897+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:19:34.896+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:19:34.920+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:19:34.956+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T14:20:05.397+0000] {processor.py:161} INFO - Started process (PID=4162) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:20:05.399+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:20:05.401+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:20:05.400+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:20:05.424+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:20:05.453+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T14:20:36.106+0000] {processor.py:161} INFO - Started process (PID=4172) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:20:36.109+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:20:36.113+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:20:36.112+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:20:36.154+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:20:36.205+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.124 seconds
[2024-05-28T14:21:06.851+0000] {processor.py:161} INFO - Started process (PID=4182) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:21:06.854+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:21:06.856+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:21:06.856+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:21:06.882+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:21:06.914+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T14:21:37.295+0000] {processor.py:161} INFO - Started process (PID=4192) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:21:37.297+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:21:37.299+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:21:37.298+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:21:37.319+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:21:37.346+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.060 seconds
[2024-05-28T14:22:07.751+0000] {processor.py:161} INFO - Started process (PID=4203) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:22:07.753+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:22:07.755+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:22:07.754+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:22:07.773+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:22:07.795+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T14:22:38.293+0000] {processor.py:161} INFO - Started process (PID=4214) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:22:38.295+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:22:38.297+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:22:38.296+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:22:38.313+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:22:38.338+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T14:23:08.819+0000] {processor.py:161} INFO - Started process (PID=4224) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:23:08.821+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:23:08.823+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:23:08.822+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:23:08.839+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:23:08.865+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T14:23:39.303+0000] {processor.py:161} INFO - Started process (PID=4234) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:23:39.304+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:23:39.307+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:23:39.306+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:23:39.329+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:23:39.360+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T14:24:09.736+0000] {processor.py:161} INFO - Started process (PID=4244) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:24:09.738+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:24:09.741+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:24:09.740+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:24:09.762+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:24:09.794+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T14:24:40.158+0000] {processor.py:161} INFO - Started process (PID=4254) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:24:40.159+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:24:40.161+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:24:40.160+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:24:40.178+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:24:40.204+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.055 seconds
[2024-05-28T14:25:10.638+0000] {processor.py:161} INFO - Started process (PID=4264) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:25:10.643+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:25:10.645+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:25:10.644+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:25:10.672+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:25:10.753+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.141 seconds
[2024-05-28T14:25:41.144+0000] {processor.py:161} INFO - Started process (PID=4274) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:25:41.146+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:25:41.148+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:25:41.147+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:25:41.172+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:25:41.201+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T14:26:11.687+0000] {processor.py:161} INFO - Started process (PID=4284) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:26:11.689+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:26:11.692+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:26:11.691+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:26:11.717+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:26:11.747+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T14:26:42.161+0000] {processor.py:161} INFO - Started process (PID=4295) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:26:42.163+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:26:42.164+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:26:42.164+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:26:42.184+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:26:42.211+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T14:27:12.585+0000] {processor.py:161} INFO - Started process (PID=4305) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:27:12.586+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:27:12.588+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:27:12.587+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:27:12.605+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:27:12.631+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T14:27:43.045+0000] {processor.py:161} INFO - Started process (PID=4315) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:27:43.048+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:27:43.050+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:27:43.049+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:27:43.073+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:27:43.105+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.075 seconds
[2024-05-28T14:28:13.528+0000] {processor.py:161} INFO - Started process (PID=4325) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:28:13.530+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:28:13.532+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:28:13.531+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:28:13.559+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:28:13.590+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T14:28:44.078+0000] {processor.py:161} INFO - Started process (PID=4336) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:28:44.080+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:28:44.082+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:28:44.082+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:28:44.107+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:28:44.135+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T14:29:14.805+0000] {processor.py:161} INFO - Started process (PID=4346) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:29:14.808+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:29:14.809+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:29:14.809+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:29:14.826+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:29:14.853+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T14:29:45.301+0000] {processor.py:161} INFO - Started process (PID=4356) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:29:45.303+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:29:45.305+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:29:45.305+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:29:45.324+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:29:45.352+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T14:30:15.805+0000] {processor.py:161} INFO - Started process (PID=4366) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:30:15.807+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:30:15.809+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:30:15.808+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:30:15.825+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:30:15.845+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.049 seconds
[2024-05-28T14:30:46.252+0000] {processor.py:161} INFO - Started process (PID=4376) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:30:46.253+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:30:46.255+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:30:46.254+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:30:46.268+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:30:46.289+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T14:31:16.684+0000] {processor.py:161} INFO - Started process (PID=4392) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:31:16.686+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:31:16.688+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:31:16.687+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:31:16.709+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:31:16.731+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.059 seconds
[2024-05-28T14:31:47.257+0000] {processor.py:161} INFO - Started process (PID=4402) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:31:47.262+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:31:47.264+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:31:47.263+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:31:47.314+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:31:47.354+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.126 seconds
[2024-05-28T14:32:17.817+0000] {processor.py:161} INFO - Started process (PID=4413) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:32:17.818+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:32:17.822+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:32:17.821+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:32:17.840+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:32:17.868+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.062 seconds
[2024-05-28T14:32:48.465+0000] {processor.py:161} INFO - Started process (PID=4423) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:32:48.467+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:32:48.469+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:32:48.468+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:32:48.510+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:32:48.559+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.111 seconds
[2024-05-28T14:33:19.112+0000] {processor.py:161} INFO - Started process (PID=4433) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:33:19.114+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:33:19.117+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:33:19.116+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:33:19.140+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:33:19.180+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.083 seconds
[2024-05-28T14:33:49.969+0000] {processor.py:161} INFO - Started process (PID=4444) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:33:49.971+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:33:49.972+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:33:49.972+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:33:49.992+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:33:50.020+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T14:34:20.462+0000] {processor.py:161} INFO - Started process (PID=4455) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:34:20.464+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:34:20.465+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:34:20.465+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:34:20.481+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:34:20.507+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T14:34:51.384+0000] {processor.py:161} INFO - Started process (PID=4465) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:34:51.386+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:34:51.389+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:34:51.388+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:34:51.419+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:34:51.464+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.103 seconds
[2024-05-28T14:35:22.211+0000] {processor.py:161} INFO - Started process (PID=4475) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:35:22.216+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:35:22.222+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:35:22.219+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:35:22.291+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:35:22.351+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.166 seconds
[2024-05-28T14:35:52.457+0000] {processor.py:161} INFO - Started process (PID=4485) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:35:52.459+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:35:52.461+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:35:52.460+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:35:52.475+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:35:52.495+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T14:36:23.094+0000] {processor.py:161} INFO - Started process (PID=4495) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:36:23.096+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:36:23.098+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:36:23.098+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:36:23.123+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:36:23.155+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T14:36:53.567+0000] {processor.py:161} INFO - Started process (PID=4505) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:36:53.569+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:36:53.572+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:36:53.571+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:36:53.603+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:36:53.644+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.097 seconds
[2024-05-28T14:37:24.052+0000] {processor.py:161} INFO - Started process (PID=4515) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:37:24.054+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:37:24.055+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:37:24.055+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:37:24.072+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:37:24.096+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T14:37:54.467+0000] {processor.py:161} INFO - Started process (PID=4525) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:37:54.468+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:37:54.470+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:37:54.469+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:37:54.488+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:37:54.515+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T14:38:25.078+0000] {processor.py:161} INFO - Started process (PID=4535) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:38:25.080+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:38:25.082+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:38:25.082+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:38:25.104+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:38:25.132+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.066 seconds
[2024-05-28T14:38:55.866+0000] {processor.py:161} INFO - Started process (PID=4545) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:38:55.867+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:38:55.869+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:38:55.868+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:38:55.887+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:38:55.910+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T14:39:26.425+0000] {processor.py:161} INFO - Started process (PID=4555) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:39:26.427+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:39:26.428+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:39:26.428+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:39:26.443+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:39:26.462+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.046 seconds
[2024-05-28T14:39:56.965+0000] {processor.py:161} INFO - Started process (PID=4566) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:39:56.968+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:39:56.970+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:39:56.969+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:39:56.990+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:39:57.016+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.070 seconds
[2024-05-28T14:40:27.665+0000] {processor.py:161} INFO - Started process (PID=4577) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:40:27.667+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:40:27.672+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:40:27.669+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:40:27.707+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:40:27.752+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.112 seconds
[2024-05-28T14:40:58.274+0000] {processor.py:161} INFO - Started process (PID=4587) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:40:58.277+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:40:58.279+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:40:58.279+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:40:58.307+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:40:58.340+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.086 seconds
[2024-05-28T14:41:29.352+0000] {processor.py:161} INFO - Started process (PID=4597) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:41:29.355+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:41:29.357+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:41:29.356+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:41:29.386+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:41:29.425+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.088 seconds
[2024-05-28T14:42:00.072+0000] {processor.py:161} INFO - Started process (PID=4607) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:42:00.077+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:42:00.081+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:42:00.080+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:42:00.108+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:42:00.140+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.092 seconds
[2024-05-28T14:42:30.611+0000] {processor.py:161} INFO - Started process (PID=4617) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:42:30.613+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:42:30.616+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:42:30.615+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:42:30.640+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:42:30.666+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T14:43:01.522+0000] {processor.py:161} INFO - Started process (PID=4627) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:43:01.524+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:43:01.526+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:43:01.526+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:43:01.549+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:43:01.576+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T14:43:31.854+0000] {processor.py:161} INFO - Started process (PID=4637) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:43:31.857+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:43:31.859+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:43:31.858+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:43:31.897+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:43:31.937+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.099 seconds
[2024-05-28T14:44:02.408+0000] {processor.py:161} INFO - Started process (PID=4647) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:44:02.410+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:44:02.412+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:44:02.412+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:44:02.429+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:44:02.455+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T14:44:33.422+0000] {processor.py:161} INFO - Started process (PID=4657) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:44:33.429+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:44:33.436+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:44:33.435+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:44:33.493+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:44:33.567+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.189 seconds
[2024-05-28T14:45:04.168+0000] {processor.py:161} INFO - Started process (PID=4668) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:45:04.170+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:45:04.172+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:45:04.171+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:45:04.192+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:45:04.217+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T14:45:34.640+0000] {processor.py:161} INFO - Started process (PID=4678) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:45:34.654+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:45:34.657+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:45:34.657+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:45:34.717+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:45:34.795+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.180 seconds
[2024-05-28T14:46:05.233+0000] {processor.py:161} INFO - Started process (PID=4688) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:46:05.234+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:46:05.236+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:46:05.235+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:46:05.253+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:46:05.281+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T14:46:35.726+0000] {processor.py:161} INFO - Started process (PID=4698) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:46:35.729+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:46:35.731+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:46:35.730+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:46:35.748+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:46:35.769+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T14:47:06.353+0000] {processor.py:161} INFO - Started process (PID=4708) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:47:06.355+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:47:06.357+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:47:06.356+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:47:06.381+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:47:06.414+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.080 seconds
[2024-05-28T14:47:36.891+0000] {processor.py:161} INFO - Started process (PID=4718) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:47:36.896+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:47:36.899+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:47:36.898+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:47:36.932+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:47:36.976+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.108 seconds
[2024-05-28T14:48:07.545+0000] {processor.py:161} INFO - Started process (PID=4728) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:48:07.547+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:48:07.549+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:48:07.548+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:48:07.565+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:48:07.590+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T14:48:38.076+0000] {processor.py:161} INFO - Started process (PID=4738) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:48:38.077+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:48:38.080+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:48:38.079+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:48:38.099+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:48:38.120+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T14:49:09.112+0000] {processor.py:161} INFO - Started process (PID=4749) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:49:09.114+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:49:09.116+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:49:09.115+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:49:09.133+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:49:09.154+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T14:49:39.624+0000] {processor.py:161} INFO - Started process (PID=4759) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:49:39.626+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:49:39.629+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:49:39.627+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:49:39.648+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:49:39.672+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T14:50:10.257+0000] {processor.py:161} INFO - Started process (PID=4770) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:50:10.259+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:50:10.262+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:50:10.261+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:50:10.286+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:50:10.325+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.081 seconds
[2024-05-28T14:50:40.951+0000] {processor.py:161} INFO - Started process (PID=4780) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:50:40.953+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:50:40.955+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:50:40.955+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:50:40.982+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:50:41.020+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.092 seconds
[2024-05-28T14:51:11.334+0000] {processor.py:161} INFO - Started process (PID=4790) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:51:11.336+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:51:11.337+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:51:11.336+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:51:11.351+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:51:11.376+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T14:51:41.761+0000] {processor.py:161} INFO - Started process (PID=4800) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:51:41.763+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:51:41.764+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:51:41.764+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:51:41.776+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:51:41.795+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T14:52:12.909+0000] {processor.py:161} INFO - Started process (PID=4810) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:52:12.937+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:52:12.945+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:52:12.944+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:52:13.520+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:52:13.707+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.847 seconds
[2024-05-28T14:52:43.968+0000] {processor.py:161} INFO - Started process (PID=4820) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:52:43.970+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:52:43.972+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:52:43.971+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:52:43.988+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:52:44.009+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T14:53:14.388+0000] {processor.py:161} INFO - Started process (PID=4830) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:53:14.389+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:53:14.391+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:53:14.390+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:53:14.406+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:53:14.423+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.043 seconds
[2024-05-28T14:53:44.798+0000] {processor.py:161} INFO - Started process (PID=4840) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:53:44.799+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:53:44.801+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:53:44.800+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:53:44.818+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:53:44.841+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.054 seconds
[2024-05-28T14:54:15.454+0000] {processor.py:161} INFO - Started process (PID=4850) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:54:15.455+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:54:15.457+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:54:15.456+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:54:15.480+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:54:15.500+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T14:54:46.094+0000] {processor.py:161} INFO - Started process (PID=4860) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:54:46.098+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:54:46.104+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:54:46.100+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:54:46.145+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:54:46.204+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.130 seconds
[2024-05-28T14:55:16.743+0000] {processor.py:161} INFO - Started process (PID=4870) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:55:16.747+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:55:16.750+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:55:16.749+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:55:16.786+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:55:16.820+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.097 seconds
[2024-05-28T14:55:47.404+0000] {processor.py:161} INFO - Started process (PID=4880) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:55:47.407+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:55:47.409+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:55:47.408+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:55:47.433+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:55:47.454+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.065 seconds
[2024-05-28T14:56:18.037+0000] {processor.py:161} INFO - Started process (PID=4890) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:56:18.038+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:56:18.040+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:56:18.040+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:56:18.057+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:56:18.081+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.063 seconds
[2024-05-28T14:56:48.477+0000] {processor.py:161} INFO - Started process (PID=4900) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:56:48.479+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:56:48.481+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:56:48.480+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:56:48.505+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:56:48.528+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T14:57:19.140+0000] {processor.py:161} INFO - Started process (PID=4911) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:57:19.141+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:57:19.143+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:57:19.143+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:57:19.164+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:57:19.184+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.062 seconds
[2024-05-28T14:57:49.672+0000] {processor.py:161} INFO - Started process (PID=4922) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:57:49.675+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:57:49.678+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:57:49.677+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:57:49.702+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:57:49.731+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T14:58:20.279+0000] {processor.py:161} INFO - Started process (PID=4932) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:58:20.281+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:58:20.295+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:58:20.293+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:58:20.336+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:58:20.375+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.121 seconds
[2024-05-28T14:58:51.228+0000] {processor.py:161} INFO - Started process (PID=4943) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:58:51.230+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:58:51.232+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:58:51.231+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:58:51.249+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:58:51.270+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.060 seconds
[2024-05-28T14:59:21.632+0000] {processor.py:161} INFO - Started process (PID=4954) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:59:21.633+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:59:21.635+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:59:21.634+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:59:21.651+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:59:21.682+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T14:59:52.165+0000] {processor.py:161} INFO - Started process (PID=4964) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:59:52.166+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T14:59:52.168+0000] {logging_mixin.py:188} INFO - [2024-05-28T14:59:52.167+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:59:52.185+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T14:59:52.208+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T15:00:22.728+0000] {processor.py:161} INFO - Started process (PID=4974) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:00:22.730+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:00:22.732+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:00:22.732+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:00:22.752+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:00:22.771+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.057 seconds
[2024-05-28T15:00:53.380+0000] {processor.py:161} INFO - Started process (PID=4984) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:00:53.383+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:00:53.386+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:00:53.385+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:00:53.416+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:00:53.459+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.097 seconds
[2024-05-28T15:01:23.964+0000] {processor.py:161} INFO - Started process (PID=4994) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:01:23.966+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:01:23.969+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:01:23.968+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:01:23.992+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:01:24.023+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T15:01:54.487+0000] {processor.py:161} INFO - Started process (PID=5004) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:01:54.489+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:01:54.491+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:01:54.490+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:01:54.508+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:01:54.530+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T15:02:24.950+0000] {processor.py:161} INFO - Started process (PID=5014) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:02:24.952+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:02:24.955+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:02:24.954+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:02:24.980+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:02:25.010+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.072 seconds
[2024-05-28T15:02:55.435+0000] {processor.py:161} INFO - Started process (PID=5025) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:02:55.437+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:02:55.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:02:55.438+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:02:55.461+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:02:55.489+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T15:03:25.855+0000] {processor.py:161} INFO - Started process (PID=5035) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:03:25.856+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:03:25.858+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:03:25.857+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:03:25.875+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:03:25.897+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T15:03:56.647+0000] {processor.py:161} INFO - Started process (PID=5045) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:03:56.649+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:03:56.650+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:03:56.650+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:03:56.667+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:03:56.693+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.058 seconds
[2024-05-28T15:04:27.255+0000] {processor.py:161} INFO - Started process (PID=5055) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:04:27.257+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:04:27.259+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:04:27.259+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:04:27.283+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:04:27.313+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T15:04:57.834+0000] {processor.py:161} INFO - Started process (PID=5066) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:04:57.837+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:04:57.840+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:04:57.839+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:04:57.866+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:04:57.912+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.097 seconds
[2024-05-28T15:05:28.470+0000] {processor.py:161} INFO - Started process (PID=5076) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:05:28.471+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:05:28.473+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:05:28.473+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:05:28.505+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:05:28.538+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.082 seconds
[2024-05-28T15:05:59.065+0000] {processor.py:161} INFO - Started process (PID=5086) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:05:59.067+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:05:59.069+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:05:59.068+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:05:59.093+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:05:59.117+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T15:06:29.628+0000] {processor.py:161} INFO - Started process (PID=5096) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:06:29.632+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:06:29.641+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:06:29.640+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:06:29.694+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:06:29.739+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.134 seconds
[2024-05-28T15:07:00.715+0000] {processor.py:161} INFO - Started process (PID=5106) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:07:00.725+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:07:00.737+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:07:00.731+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:07:00.811+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:07:00.921+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.285 seconds
[2024-05-28T15:07:31.706+0000] {processor.py:161} INFO - Started process (PID=5116) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:07:31.708+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:07:31.711+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:07:31.710+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:07:31.746+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:07:31.813+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.124 seconds
[2024-05-28T15:08:02.395+0000] {processor.py:161} INFO - Started process (PID=5127) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:08:02.397+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:08:02.399+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:08:02.398+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:08:02.416+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:08:02.437+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T15:08:32.852+0000] {processor.py:161} INFO - Started process (PID=5137) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:08:32.854+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:08:32.856+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:08:32.855+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:08:32.873+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:08:32.894+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.052 seconds
[2024-05-28T15:09:03.610+0000] {processor.py:161} INFO - Started process (PID=5147) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:09:03.612+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:09:03.614+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:09:03.613+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:09:03.636+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:09:03.665+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T15:09:34.409+0000] {processor.py:161} INFO - Started process (PID=5157) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:09:34.411+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:09:34.414+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:09:34.413+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:09:34.436+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:09:34.461+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.067 seconds
[2024-05-28T15:10:05.006+0000] {processor.py:161} INFO - Started process (PID=5167) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:10:05.008+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:10:05.009+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:10:05.009+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:10:05.028+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:10:05.051+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T15:10:35.601+0000] {processor.py:161} INFO - Started process (PID=5177) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:10:35.604+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:10:35.606+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:10:35.605+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:10:35.630+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:10:35.654+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T15:11:06.316+0000] {processor.py:161} INFO - Started process (PID=5194) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:11:06.321+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:11:06.324+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:11:06.323+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:11:06.410+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:11:06.506+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.297 seconds
[2024-05-28T15:11:37.175+0000] {processor.py:161} INFO - Started process (PID=5204) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:11:37.178+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:11:37.181+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:11:37.180+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:11:37.211+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:11:37.243+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.085 seconds
[2024-05-28T15:12:07.770+0000] {processor.py:161} INFO - Started process (PID=5214) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:12:07.772+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:12:07.775+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:12:07.774+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:12:07.800+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:12:07.831+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.078 seconds
[2024-05-28T15:12:38.427+0000] {processor.py:161} INFO - Started process (PID=5224) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:12:38.428+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:12:38.430+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:12:38.430+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:12:38.474+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:12:38.516+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.107 seconds
[2024-05-28T15:13:09.194+0000] {processor.py:161} INFO - Started process (PID=5234) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:13:09.195+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:13:09.199+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:13:09.197+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:13:09.224+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:13:09.252+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.074 seconds
[2024-05-28T15:13:39.715+0000] {processor.py:161} INFO - Started process (PID=5245) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:13:39.718+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:13:39.720+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:13:39.719+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:13:39.746+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:13:39.770+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.068 seconds
[2024-05-28T15:14:09.973+0000] {processor.py:161} INFO - Started process (PID=5255) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:14:09.977+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:14:09.980+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:14:09.979+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:14:10.014+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:14:10.057+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.118 seconds
[2024-05-28T15:14:40.673+0000] {processor.py:161} INFO - Started process (PID=5265) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:14:40.676+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:14:40.678+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:14:40.678+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:14:40.707+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:14:40.746+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.093 seconds
[2024-05-28T15:15:11.297+0000] {processor.py:161} INFO - Started process (PID=5275) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:15:11.301+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:15:11.304+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:15:11.304+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:15:11.330+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:15:11.367+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.083 seconds
[2024-05-28T15:15:42.476+0000] {processor.py:161} INFO - Started process (PID=5285) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:15:42.508+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:15:42.521+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:15:42.514+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:15:42.583+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:15:42.795+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.535 seconds
[2024-05-28T15:16:13.526+0000] {processor.py:161} INFO - Started process (PID=5296) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:16:13.528+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:16:13.530+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:16:13.529+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:16:13.549+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:16:13.584+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T15:16:44.189+0000] {processor.py:161} INFO - Started process (PID=5306) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:16:44.191+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:16:44.193+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:16:44.192+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:16:44.217+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:16:44.247+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T15:17:15.063+0000] {processor.py:161} INFO - Started process (PID=5316) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:17:15.066+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:17:15.068+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:17:15.067+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:17:15.093+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:17:15.127+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.079 seconds
[2024-05-28T15:17:45.693+0000] {processor.py:161} INFO - Started process (PID=5327) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:17:45.695+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:17:45.697+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:17:45.697+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:17:45.721+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:17:45.749+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.068 seconds
[2024-05-28T15:18:16.191+0000] {processor.py:161} INFO - Started process (PID=5337) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:18:16.192+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:18:16.194+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:18:16.193+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:18:16.211+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:18:16.231+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.061 seconds
[2024-05-28T15:18:46.606+0000] {processor.py:161} INFO - Started process (PID=5347) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:18:46.607+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:18:46.609+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:18:46.608+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:18:46.624+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:18:46.641+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.042 seconds
[2024-05-28T15:19:17.461+0000] {processor.py:161} INFO - Started process (PID=5357) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:19:17.467+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:19:17.469+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:19:17.468+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:19:17.493+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:19:17.524+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.084 seconds
[2024-05-28T15:19:48.079+0000] {processor.py:161} INFO - Started process (PID=5367) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:19:48.081+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:19:48.084+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:19:48.083+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:19:48.107+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:19:48.139+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.071 seconds
[2024-05-28T15:20:18.596+0000] {processor.py:161} INFO - Started process (PID=5377) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:20:18.601+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:20:18.602+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:20:18.602+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:20:18.621+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:20:18.642+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.063 seconds
[2024-05-28T15:20:49.171+0000] {processor.py:161} INFO - Started process (PID=5387) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:20:49.173+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:20:49.175+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:20:49.174+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:20:49.203+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:20:49.248+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.102 seconds
[2024-05-28T15:21:20.211+0000] {processor.py:161} INFO - Started process (PID=5397) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:21:20.213+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:21:20.216+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:21:20.215+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:21:20.268+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:21:20.322+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.157 seconds
[2024-05-28T15:21:50.956+0000] {processor.py:161} INFO - Started process (PID=5407) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:21:50.959+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:21:50.966+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:21:50.964+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:21:50.988+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:21:51.016+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T15:22:21.564+0000] {processor.py:161} INFO - Started process (PID=5418) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:22:21.566+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:22:21.569+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:22:21.568+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:22:21.585+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:22:21.606+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T15:22:52.089+0000] {processor.py:161} INFO - Started process (PID=5428) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:22:52.091+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:22:52.092+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:22:52.091+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:22:52.111+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:22:52.131+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T15:23:22.240+0000] {processor.py:161} INFO - Started process (PID=5437) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:23:22.242+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:23:22.244+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:23:22.243+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:23:22.285+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:23:22.313+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.088 seconds
[2024-05-28T15:23:52.435+0000] {processor.py:161} INFO - Started process (PID=5448) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:23:52.437+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:23:52.439+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:23:52.438+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:23:52.455+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:23:52.475+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.051 seconds
[2024-05-28T15:24:23.217+0000] {processor.py:161} INFO - Started process (PID=5458) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:24:23.219+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:24:23.220+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:24:23.220+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:24:23.239+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:24:23.261+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T15:48:28.035+0000] {processor.py:161} INFO - Started process (PID=39) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:48:28.038+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:48:28.043+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:48:28.042+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:48:28.083+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:48:28.142+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.123 seconds
[2024-05-28T15:48:58.989+0000] {processor.py:161} INFO - Started process (PID=48) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:48:59.000+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:48:59.096+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:48:59.085+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:48:59.191+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:48:59.333+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.610 seconds
[2024-05-28T15:49:29.897+0000] {processor.py:161} INFO - Started process (PID=58) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:49:29.900+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:49:29.910+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:49:29.909+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:49:29.938+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:49:29.970+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.087 seconds
[2024-05-28T15:50:00.527+0000] {processor.py:161} INFO - Started process (PID=68) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:50:00.529+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:50:00.532+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:50:00.531+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:50:00.547+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:50:00.563+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.044 seconds
[2024-05-28T15:50:30.959+0000] {processor.py:161} INFO - Started process (PID=78) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:50:30.969+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:50:31.006+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:50:31.003+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:50:31.052+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:50:31.160+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.286 seconds
[2024-05-28T15:51:01.283+0000] {processor.py:161} INFO - Started process (PID=87) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:51:01.285+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:51:01.289+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:51:01.288+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:51:01.312+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:51:01.352+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.081 seconds
[2024-05-28T15:51:32.078+0000] {processor.py:161} INFO - Started process (PID=98) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:51:32.083+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:51:32.088+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:51:32.088+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:51:32.111+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:51:32.144+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.075 seconds
[2024-05-28T15:52:02.913+0000] {processor.py:161} INFO - Started process (PID=108) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:52:02.917+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:52:02.927+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:52:02.926+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:52:02.985+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:52:03.058+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.159 seconds
[2024-05-28T15:52:34.347+0000] {processor.py:161} INFO - Started process (PID=118) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:52:34.360+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:52:34.389+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:52:34.387+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:52:34.833+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:52:35.196+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.891 seconds
[2024-05-28T15:53:06.700+0000] {processor.py:161} INFO - Started process (PID=128) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:53:06.723+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:53:06.751+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:53:06.749+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:53:06.804+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:53:06.984+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.372 seconds
[2024-05-28T15:53:38.062+0000] {processor.py:161} INFO - Started process (PID=139) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:53:38.076+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:53:38.116+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:53:38.112+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:53:38.183+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:53:38.337+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.357 seconds
[2024-05-28T15:54:09.305+0000] {processor.py:161} INFO - Started process (PID=148) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:54:09.324+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:54:09.365+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:54:09.358+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:54:09.500+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:54:09.697+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.606 seconds
[2024-05-28T15:54:41.237+0000] {processor.py:161} INFO - Started process (PID=159) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:54:41.268+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:54:41.329+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:54:41.326+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:54:41.423+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:54:41.594+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.537 seconds
[2024-05-28T15:55:12.631+0000] {processor.py:161} INFO - Started process (PID=169) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:55:12.680+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:55:12.757+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:55:12.754+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:55:12.864+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:55:13.135+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.765 seconds
[2024-05-28T15:55:43.315+0000] {processor.py:161} INFO - Started process (PID=179) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:55:43.317+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:55:43.321+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:55:43.320+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:55:43.351+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:55:43.414+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.111 seconds
[2024-05-28T15:56:15.169+0000] {processor.py:161} INFO - Started process (PID=190) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:56:15.191+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:56:15.328+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:56:15.323+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:56:15.458+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:56:15.906+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.033 seconds
[2024-05-28T15:56:46.928+0000] {processor.py:161} INFO - Started process (PID=201) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:56:46.939+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:56:46.992+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:56:46.988+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:56:47.069+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:56:47.478+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.623 seconds
[2024-05-28T15:57:20.450+0000] {processor.py:161} INFO - Started process (PID=211) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:57:20.525+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:57:20.719+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:57:20.708+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:57:21.122+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:57:21.379+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 1.343 seconds
[2024-05-28T15:57:52.175+0000] {processor.py:161} INFO - Started process (PID=221) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:57:52.184+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:57:52.212+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:57:52.208+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:57:52.285+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:57:52.531+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.418 seconds
[2024-05-28T15:58:22.916+0000] {processor.py:161} INFO - Started process (PID=231) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:58:22.919+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:58:22.931+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:58:22.930+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:58:22.985+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:58:23.041+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.139 seconds
[2024-05-28T15:59:00.210+0000] {processor.py:161} INFO - Started process (PID=241) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:59:00.213+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:59:00.222+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:59:00.220+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:59:00.299+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:59:01.079+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.891 seconds
[2024-05-28T15:59:31.443+0000] {processor.py:161} INFO - Started process (PID=251) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:59:31.445+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T15:59:31.459+0000] {logging_mixin.py:188} INFO - [2024-05-28T15:59:31.458+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:59:31.491+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T15:59:31.534+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.109 seconds
[2024-05-28T16:00:03.015+0000] {processor.py:161} INFO - Started process (PID=261) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:00:03.041+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:00:03.050+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:00:03.049+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:00:03.127+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:00:03.293+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.438 seconds
[2024-05-28T16:00:34.589+0000] {processor.py:161} INFO - Started process (PID=270) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:00:34.670+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:00:34.783+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:00:34.767+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:00:34.894+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:00:34.956+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.835 seconds
[2024-05-28T16:01:05.563+0000] {processor.py:161} INFO - Started process (PID=280) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:01:05.568+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:01:05.579+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:01:05.578+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:01:05.624+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:01:05.693+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.195 seconds
[2024-05-28T16:01:38.403+0000] {processor.py:161} INFO - Started process (PID=291) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:01:38.417+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:01:38.438+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:01:38.436+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:01:38.488+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:01:38.612+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.293 seconds
[2024-05-28T16:02:08.744+0000] {processor.py:161} INFO - Started process (PID=300) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:02:08.747+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:02:08.752+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:02:08.751+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:02:08.772+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:02:08.884+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.158 seconds
[2024-05-28T16:02:39.062+0000] {processor.py:161} INFO - Started process (PID=310) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:02:39.065+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:02:39.078+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:02:39.069+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:02:39.109+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:02:39.158+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.124 seconds
[2024-05-28T16:03:09.870+0000] {processor.py:161} INFO - Started process (PID=320) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:03:09.872+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:03:09.904+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:03:09.898+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:03:10.000+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:03:10.197+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.403 seconds
[2024-05-28T16:03:40.420+0000] {processor.py:161} INFO - Started process (PID=330) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:03:40.422+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:03:40.429+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:03:40.428+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:03:40.461+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:03:40.506+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.106 seconds
[2024-05-28T16:04:11.529+0000] {processor.py:161} INFO - Started process (PID=340) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:04:11.533+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:04:11.705+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:04:11.695+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:04:11.877+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:04:12.105+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.861 seconds
[2024-05-28T16:04:42.780+0000] {processor.py:161} INFO - Started process (PID=350) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:04:42.783+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:04:42.788+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:04:42.787+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:04:42.811+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:04:42.842+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.075 seconds
[2024-05-28T16:05:13.469+0000] {processor.py:161} INFO - Started process (PID=360) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:05:13.474+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:05:13.482+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:05:13.481+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:05:13.516+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:05:13.569+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.121 seconds
[2024-05-28T16:05:44.256+0000] {processor.py:161} INFO - Started process (PID=370) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:05:44.261+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:05:44.270+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:05:44.268+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:05:44.307+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:05:44.347+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.110 seconds
[2024-05-28T16:06:15.243+0000] {processor.py:161} INFO - Started process (PID=380) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:06:15.246+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:06:15.250+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:06:15.250+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:06:15.281+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:06:15.310+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.085 seconds
[2024-05-28T16:06:45.875+0000] {processor.py:161} INFO - Started process (PID=390) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:06:45.877+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:06:45.881+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:06:45.881+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:06:45.908+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:06:45.936+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.073 seconds
[2024-05-28T16:07:16.725+0000] {processor.py:161} INFO - Started process (PID=400) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:07:16.727+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:07:16.738+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:07:16.736+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:07:16.769+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:07:16.813+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.102 seconds
[2024-05-28T16:07:47.212+0000] {processor.py:161} INFO - Started process (PID=410) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:07:47.215+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:07:47.222+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:07:47.221+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:07:47.255+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:07:47.290+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.089 seconds
[2024-05-28T16:08:19.218+0000] {processor.py:161} INFO - Started process (PID=420) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:08:19.234+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:08:19.289+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:08:19.283+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:08:19.394+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:08:19.569+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.698 seconds
[2024-05-28T16:08:50.472+0000] {processor.py:161} INFO - Started process (PID=430) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:08:50.487+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:08:50.533+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:08:50.531+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:08:50.623+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:08:50.839+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.560 seconds
[2024-05-28T16:09:21.293+0000] {processor.py:161} INFO - Started process (PID=442) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:09:21.307+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:09:21.344+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:09:21.341+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:09:21.395+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:09:21.470+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.314 seconds
[2024-05-28T16:09:51.848+0000] {processor.py:161} INFO - Started process (PID=451) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:09:51.853+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:09:51.858+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:09:51.857+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:09:51.901+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:09:51.941+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.128 seconds
[2024-05-28T16:10:22.850+0000] {processor.py:161} INFO - Started process (PID=461) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:10:22.853+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:10:22.866+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:10:22.865+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:10:22.903+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:10:22.945+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.115 seconds
[2024-05-28T16:10:53.265+0000] {processor.py:161} INFO - Started process (PID=471) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:10:53.268+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:10:53.273+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:10:53.272+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:10:53.296+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:10:53.335+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.084 seconds
[2024-05-28T16:11:24.345+0000] {processor.py:161} INFO - Started process (PID=481) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:11:24.350+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:11:24.357+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:11:24.356+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:11:24.381+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:11:24.452+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.133 seconds
[2024-05-28T16:11:55.084+0000] {processor.py:161} INFO - Started process (PID=497) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:11:55.086+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:11:55.089+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:11:55.088+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:11:55.110+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:11:55.132+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.056 seconds
[2024-05-28T16:12:25.553+0000] {processor.py:161} INFO - Started process (PID=507) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:12:25.556+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:12:25.561+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:12:25.560+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:12:25.588+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:12:25.613+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.075 seconds
[2024-05-28T16:12:55.904+0000] {processor.py:161} INFO - Started process (PID=517) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:12:55.907+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:12:55.916+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:12:55.915+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:12:55.946+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:12:55.980+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.094 seconds
[2024-05-28T16:13:26.506+0000] {processor.py:161} INFO - Started process (PID=527) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:13:26.508+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:13:26.513+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:13:26.512+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:13:26.544+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:13:26.571+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.078 seconds
[2024-05-28T16:13:57.229+0000] {processor.py:161} INFO - Started process (PID=537) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:13:57.240+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:13:57.283+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:13:57.282+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:13:57.383+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:13:57.742+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.618 seconds
[2024-05-28T16:14:27.973+0000] {processor.py:161} INFO - Started process (PID=548) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:14:27.975+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:14:27.980+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:14:27.979+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:14:28.028+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:14:28.158+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.213 seconds
[2024-05-28T16:14:58.345+0000] {processor.py:161} INFO - Started process (PID=558) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:14:58.348+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:14:58.353+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:14:58.352+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:14:58.386+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:14:58.457+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.132 seconds
[2024-05-28T16:15:29.947+0000] {processor.py:161} INFO - Started process (PID=568) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:15:29.975+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:15:29.989+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:15:29.987+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:15:30.103+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:15:30.211+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.340 seconds
[2024-05-28T16:16:01.562+0000] {processor.py:161} INFO - Started process (PID=579) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:16:01.584+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:16:01.617+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:16:01.616+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:16:01.922+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:16:02.005+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.529 seconds
[2024-05-28T16:16:32.419+0000] {processor.py:161} INFO - Started process (PID=589) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:16:32.437+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:16:32.468+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:16:32.462+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:16:32.561+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:16:32.805+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.485 seconds
[2024-05-28T16:17:03.721+0000] {processor.py:161} INFO - Started process (PID=599) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:17:03.725+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:17:03.734+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:17:03.729+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:17:03.793+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:17:03.851+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.155 seconds
[2024-05-28T16:17:34.815+0000] {processor.py:161} INFO - Started process (PID=609) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:17:34.819+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:17:34.847+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:17:34.837+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:17:34.904+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:17:34.958+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.192 seconds
[2024-05-28T16:18:06.378+0000] {processor.py:161} INFO - Started process (PID=619) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:18:06.395+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:18:06.479+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:18:06.473+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:18:06.830+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:18:07.114+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.827 seconds
[2024-05-28T16:18:38.307+0000] {processor.py:161} INFO - Started process (PID=629) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:18:38.403+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:18:38.475+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:18:38.473+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:18:39.054+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:18:39.256+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.975 seconds
[2024-05-28T16:19:09.908+0000] {processor.py:161} INFO - Started process (PID=639) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:19:09.912+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:19:09.920+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:19:09.919+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:19:09.945+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:19:09.987+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.103 seconds
[2024-05-28T16:19:41.952+0000] {processor.py:161} INFO - Started process (PID=651) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:19:41.955+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:19:41.970+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:19:41.969+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:19:42.088+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:19:42.186+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.270 seconds
[2024-05-28T16:23:55.468+0000] {processor.py:161} INFO - Started process (PID=41) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:23:55.472+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:23:55.478+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:23:55.478+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:23:55.509+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:23:55.560+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.120 seconds
[2024-05-28T16:24:26.471+0000] {processor.py:161} INFO - Started process (PID=50) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:24:26.472+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:24:26.475+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:24:26.475+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:24:26.495+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:24:26.517+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.053 seconds
[2024-05-28T16:24:56.948+0000] {processor.py:161} INFO - Started process (PID=60) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:24:56.951+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:24:56.958+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:24:56.958+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:24:56.988+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:24:57.032+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.099 seconds
[2024-05-28T16:25:27.783+0000] {processor.py:161} INFO - Started process (PID=71) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:25:27.785+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:25:27.788+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:25:27.787+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:25:27.810+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:25:27.826+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.050 seconds
[2024-05-28T16:25:58.186+0000] {processor.py:161} INFO - Started process (PID=81) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:25:58.189+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:25:58.194+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:25:58.193+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:25:58.218+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:25:58.244+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.069 seconds
[2024-05-28T16:26:29.338+0000] {processor.py:161} INFO - Started process (PID=91) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:26:29.341+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:26:29.356+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:26:29.355+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:26:29.442+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:26:29.507+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.201 seconds
[2024-05-28T16:26:59.817+0000] {processor.py:161} INFO - Started process (PID=101) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:26:59.819+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:26:59.823+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:26:59.823+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:26:59.853+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:26:59.879+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.078 seconds
[2024-05-28T16:27:30.582+0000] {processor.py:161} INFO - Started process (PID=111) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:27:30.585+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:27:30.590+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:27:30.589+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:27:30.625+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:27:30.663+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.104 seconds
[2024-05-28T16:28:01.073+0000] {processor.py:161} INFO - Started process (PID=121) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:28:01.075+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:28:01.078+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:28:01.077+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:28:01.128+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:28:01.189+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.134 seconds
[2024-05-28T16:28:31.735+0000] {processor.py:161} INFO - Started process (PID=129) to work on /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:28:31.737+0000] {processor.py:830} INFO - Processing file /opt/airflow/dags/oltp_olap.py for tasks to queue
[2024-05-28T16:28:31.739+0000] {logging_mixin.py:188} INFO - [2024-05-28T16:28:31.738+0000] {dagbag.py:545} INFO - Filling up the DagBag from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:28:31.771+0000] {processor.py:842} WARNING - No viable dags retrieved from /opt/airflow/dags/oltp_olap.py
[2024-05-28T16:28:31.802+0000] {processor.py:183} INFO - Processing /opt/airflow/dags/oltp_olap.py took 0.090 seconds
